{"version":3,"file":"login-nYqhQoUF.js","sources":["../../../app/routes/_auth+/login.tsx"],"sourcesContent":["import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport {\n\tjson,\n\ttype ActionFunctionArgs,\n\ttype LoaderFunctionArgs,\n\ttype MetaFunction,\n} from '@remix-run/node'\nimport { Form, Link, useActionData, useSearchParams } from '@remix-run/react'\nimport { HoneypotInputs } from 'remix-utils/honeypot/react'\nimport { z } from 'zod'\nimport { GeneralErrorBoundary } from '#app/components/error-boundary.tsx'\nimport { CheckboxField, ErrorList, Field } from '#app/components/forms.tsx'\nimport { Spacer } from '#app/components/spacer.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { login, requireAnonymous } from '#app/utils/auth.server.ts'\nimport {\n\tProviderConnectionForm,\n\tproviderNames,\n} from '#app/utils/connections.tsx'\nimport { checkHoneypot } from '#app/utils/honeypot.server.ts'\nimport { useIsPending } from '#app/utils/misc.tsx'\nimport { PasswordSchema, UsernameSchema } from '#app/utils/user-validation.ts'\nimport { handleNewSession } from './login.server.ts'\n\nconst LoginFormSchema = z.object({\n\tusername: UsernameSchema,\n\tpassword: PasswordSchema,\n\tredirectTo: z.string().optional(),\n\tremember: z.boolean().optional(),\n})\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n\tawait requireAnonymous(request)\n\treturn json({})\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n\tawait requireAnonymous(request)\n\tconst formData = await request.formData()\n\tcheckHoneypot(formData)\n\tconst submission = await parseWithZod(formData, {\n\t\tschema: intent =>\n\t\t\tLoginFormSchema.transform(async (data, ctx) => {\n\t\t\t\tif (intent !== null) return { ...data, session: null }\n\n\t\t\t\tconst session = await login(data)\n\t\t\t\tif (!session) {\n\t\t\t\t\tctx.addIssue({\n\t\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\t\tmessage: 'Invalid username or password',\n\t\t\t\t\t})\n\t\t\t\t\treturn z.NEVER\n\t\t\t\t}\n\n\t\t\t\treturn { ...data, session }\n\t\t\t}),\n\t\tasync: true,\n\t})\n\n\tif (submission.status !== 'success' || !submission.value.session) {\n\t\treturn json(\n\t\t\t{ result: submission.reply({ hideFields: ['password'] }) },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\n\tconst { session, remember, redirectTo } = submission.value\n\n\treturn handleNewSession({\n\t\trequest,\n\t\tsession,\n\t\tremember: remember ?? false,\n\t\tredirectTo,\n\t})\n}\n\nexport default function LoginPage() {\n\tconst actionData = useActionData<typeof action>()\n\tconst isPending = useIsPending()\n\tconst [searchParams] = useSearchParams()\n\tconst redirectTo = searchParams.get('redirectTo')\n\n\tconst [form, fields] = useForm({\n\t\tid: 'login-form',\n\t\tconstraint: getZodConstraint(LoginFormSchema),\n\t\tdefaultValue: { redirectTo },\n\t\tlastResult: actionData?.result,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: LoginFormSchema })\n\t\t},\n\t\tshouldRevalidate: 'onBlur',\n\t})\n\n\treturn (\n\t\t<div className=\"flex min-h-full flex-col justify-center pb-32 pt-20\">\n\t\t\t<div className=\"mx-auto w-full max-w-md\">\n\t\t\t\t<div className=\"flex flex-col gap-3 text-center\">\n\t\t\t\t\t<h1 className=\"text-h1\">Welcome back!</h1>\n\t\t\t\t\t<p className=\"text-body-md text-muted-foreground\">\n\t\t\t\t\t\tPlease enter your details.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<Spacer size=\"xs\" />\n\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"mx-auto w-full max-w-md px-8\">\n\t\t\t\t\t\t<Form method=\"POST\" {...getFormProps(form)}>\n\t\t\t\t\t\t\t<HoneypotInputs />\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tlabelProps={{ children: 'Username' }}\n\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t...getInputProps(fields.username, { type: 'text' }),\n\t\t\t\t\t\t\t\t\tautoFocus: true,\n\t\t\t\t\t\t\t\t\tclassName: 'lowercase',\n\t\t\t\t\t\t\t\t\tautoComplete: 'username',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\terrors={fields.username.errors}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tlabelProps={{ children: 'Password' }}\n\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t...getInputProps(fields.password, {\n\t\t\t\t\t\t\t\t\t\ttype: 'password',\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\tautoComplete: 'current-password',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\terrors={fields.password.errors}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<div className=\"flex justify-between\">\n\t\t\t\t\t\t\t\t<CheckboxField\n\t\t\t\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\t\t\t\thtmlFor: fields.remember.id,\n\t\t\t\t\t\t\t\t\t\tchildren: 'Remember me',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tbuttonProps={getInputProps(fields.remember, {\n\t\t\t\t\t\t\t\t\t\ttype: 'checkbox',\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\terrors={fields.remember.errors}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\tto=\"/forgot-password\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"text-body-xs font-semibold\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tForgot password?\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t{...getInputProps(fields.redirectTo, { type: 'hidden' })}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<ErrorList errors={form.errors} id={form.errorId} />\n\n\t\t\t\t\t\t\t<div className=\"flex items-center justify-between gap-6 pt-3\">\n\t\t\t\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t\t\t\tclassName=\"w-full\"\n\t\t\t\t\t\t\t\t\tstatus={isPending ? 'pending' : form.status ?? 'idle'}\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tdisabled={isPending}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tLog in\n\t\t\t\t\t\t\t\t</StatusButton>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t<ul className=\"mt-5 flex flex-col gap-5 border-b-2 border-t-2 border-border py-3\">\n\t\t\t\t\t\t\t{providerNames.map(providerName => (\n\t\t\t\t\t\t\t\t<li key={providerName}>\n\t\t\t\t\t\t\t\t\t<ProviderConnectionForm\n\t\t\t\t\t\t\t\t\t\ttype=\"Login\"\n\t\t\t\t\t\t\t\t\t\tproviderName={providerName}\n\t\t\t\t\t\t\t\t\t\tredirectTo={redirectTo}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<div className=\"flex items-center justify-center gap-2 pt-6\">\n\t\t\t\t\t\t\t<span className=\"text-muted-foreground\">New here?</span>\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\tto={\n\t\t\t\t\t\t\t\t\tredirectTo\n\t\t\t\t\t\t\t\t\t\t? `/signup?${encodeURIComponent(redirectTo)}`\n\t\t\t\t\t\t\t\t\t\t: '/signup'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tCreate an account\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport const meta: MetaFunction = () => {\n\treturn [{ title: 'Login to Epic Notes' }]\n}\n\nexport function ErrorBoundary() {\n\treturn <GeneralErrorBoundary />\n}\n"],"names":["LoginFormSchema","z","UsernameSchema","PasswordSchema","LoginPage","actionData","isPending","useIsPending","searchParams","redirectTo","form","fields","useForm","getZodConstraint","formData","parseWithZod","session","jsx","jsxs","Spacer","getFormProps","HoneypotInputs","Field","getInputProps","CheckboxField","Link","ErrorList","StatusButton","providerNames","providerName","ProviderConnectionForm","meta","ErrorBoundary","GeneralErrorBoundary"],"mappings":"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"}