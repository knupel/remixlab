{"version":3,"file":"performance-Q0p3jXRI.js","sources":["../../../node_modules/@sentry/utils/esm/aggregate-errors.js","../../../node_modules/@sentry/utils/esm/dsn.js","../../../node_modules/@sentry/utils/esm/error.js","../../../node_modules/@sentry/utils/esm/instrument/_handlers.js","../../../node_modules/@sentry/utils/esm/instrument/console.js","../../../node_modules/@sentry/utils/esm/instrument/dom.js","../../../node_modules/@sentry/utils/esm/supports.js","../../../node_modules/@sentry/utils/esm/instrument/fetch.js","../../../node_modules/@sentry/utils/esm/instrument/globalError.js","../../../node_modules/@sentry/utils/esm/instrument/globalUnhandledRejection.js","../../../node_modules/@sentry/utils/esm/vendor/supportsHistory.js","../../../node_modules/@sentry/utils/esm/instrument/history.js","../../../node_modules/@sentry/utils/esm/instrument/xhr.js","../../../node_modules/@sentry/utils/esm/promisebuffer.js","../../../node_modules/@sentry/utils/esm/url.js","../../../node_modules/@sentry/utils/esm/severity.js","../../../node_modules/@sentry/utils/esm/envelope.js","../../../node_modules/@sentry/utils/esm/clientreport.js","../../../node_modules/@sentry/utils/esm/ratelimit.js","../../../node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js","../../../node_modules/@sentry/core/esm/utils/hasTracingEnabled.js","../../../node_modules/@sentry/core/esm/tracing/trace.js","../../../node_modules/@sentry/core/esm/semanticAttributes.js","../../../node_modules/@sentry/core/esm/envelope.js","../../../node_modules/@sentry/core/esm/api.js","../../../node_modules/@sentry/core/esm/integration.js","../../../node_modules/@sentry/core/esm/metrics/utils.js","../../../node_modules/@sentry/core/esm/metrics/envelope.js","../../../node_modules/@sentry/core/esm/baseclient.js","../../../node_modules/@sentry/core/esm/sdk.js","../../../node_modules/@sentry/core/esm/transports/base.js","../../../node_modules/@sentry/core/esm/utils/sdkMetadata.js","../../../node_modules/@sentry/core/esm/integrations/inboundfilters.js","../../../node_modules/@sentry/core/esm/integrations/functiontostring.js","../../../node_modules/@sentry-internal/tracing/esm/browser/browserTracingIntegration.js","../../../node_modules/@sentry/browser/esm/helpers.js","../../../node_modules/@sentry/browser/esm/debug-build.js","../../../node_modules/@sentry/browser/esm/eventbuilder.js","../../../node_modules/@sentry/browser/esm/userfeedback.js","../../../node_modules/@sentry/browser/esm/client.js","../../../node_modules/@sentry/browser/esm/transports/utils.js","../../../node_modules/@sentry/browser/esm/transports/fetch.js","../../../node_modules/@sentry/browser/esm/transports/xhr.js","../../../node_modules/@sentry/browser/esm/stack-parsers.js","../../../node_modules/@sentry/browser/esm/integrations/breadcrumbs.js","../../../node_modules/@sentry/browser/esm/integrations/dedupe.js","../../../node_modules/@sentry/browser/esm/integrations/globalhandlers.js","../../../node_modules/@sentry/browser/esm/integrations/httpcontext.js","../../../node_modules/@sentry/browser/esm/integrations/linkederrors.js","../../../node_modules/@sentry/browser/esm/integrations/trycatch.js","../../../node_modules/@sentry/browser/esm/sdk.js","../../../node_modules/react-is/cjs/react-is.production.min.js","../../../node_modules/react-is/index.js","../../../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../../../node_modules/@sentry/react/esm/debug-build.js","../../../node_modules/@sentry/react/esm/errorboundary.js","../../../node_modules/@sentry/remix/esm/utils/debug-build.js","../../../node_modules/@sentry/remix/esm/utils/futureFlags.js","../../../node_modules/@sentry/remix/esm/client/performance.js"],"sourcesContent":["import { isInstanceOf } from './is.js';\nimport { truncate } from './string.js';\n\n/**\n * Creates exceptions inside `event.exception.values` for errors that are nested on properties based on the `key` parameter.\n */\nfunction applyAggregateErrorsToEvent(\n  exceptionFromErrorImplementation,\n  parser,\n  maxValueLimit = 250,\n  key,\n  limit,\n  event,\n  hint,\n) {\n  if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return;\n  }\n\n  // Generally speaking the last item in `event.exception.values` is the exception originating from the original Error\n  const originalException =\n    event.exception.values.length > 0 ? event.exception.values[event.exception.values.length - 1] : undefined;\n\n  // We only create exception grouping if there is an exception in the event.\n  if (originalException) {\n    event.exception.values = truncateAggregateExceptions(\n      aggregateExceptionsFromError(\n        exceptionFromErrorImplementation,\n        parser,\n        limit,\n        hint.originalException ,\n        key,\n        event.exception.values,\n        originalException,\n        0,\n      ),\n      maxValueLimit,\n    );\n  }\n}\n\nfunction aggregateExceptionsFromError(\n  exceptionFromErrorImplementation,\n  parser,\n  limit,\n  error,\n  key,\n  prevExceptions,\n  exception,\n  exceptionId,\n) {\n  if (prevExceptions.length >= limit + 1) {\n    return prevExceptions;\n  }\n\n  let newExceptions = [...prevExceptions];\n\n  // Recursively call this function in order to walk down a chain of errors\n  if (isInstanceOf(error[key], Error)) {\n    applyExceptionGroupFieldsForParentException(exception, exceptionId);\n    const newException = exceptionFromErrorImplementation(parser, error[key]);\n    const newExceptionId = newExceptions.length;\n    applyExceptionGroupFieldsForChildException(newException, key, newExceptionId, exceptionId);\n    newExceptions = aggregateExceptionsFromError(\n      exceptionFromErrorImplementation,\n      parser,\n      limit,\n      error[key],\n      key,\n      [newException, ...newExceptions],\n      newException,\n      newExceptionId,\n    );\n  }\n\n  // This will create exception grouping for AggregateErrors\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\n  if (Array.isArray(error.errors)) {\n    error.errors.forEach((childError, i) => {\n      if (isInstanceOf(childError, Error)) {\n        applyExceptionGroupFieldsForParentException(exception, exceptionId);\n        const newException = exceptionFromErrorImplementation(parser, childError);\n        const newExceptionId = newExceptions.length;\n        applyExceptionGroupFieldsForChildException(newException, `errors[${i}]`, newExceptionId, exceptionId);\n        newExceptions = aggregateExceptionsFromError(\n          exceptionFromErrorImplementation,\n          parser,\n          limit,\n          childError,\n          key,\n          [newException, ...newExceptions],\n          newException,\n          newExceptionId,\n        );\n      }\n    });\n  }\n\n  return newExceptions;\n}\n\nfunction applyExceptionGroupFieldsForParentException(exception, exceptionId) {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    ...(exception.type === 'AggregateError' && { is_exception_group: true }),\n    exception_id: exceptionId,\n  };\n}\n\nfunction applyExceptionGroupFieldsForChildException(\n  exception,\n  source,\n  exceptionId,\n  parentId,\n) {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    type: 'chained',\n    source,\n    exception_id: exceptionId,\n    parent_id: parentId,\n  };\n}\n\n/**\n * Truncate the message (exception.value) of all exceptions in the event.\n * Because this event processor is ran after `applyClientOptions`,\n * we need to truncate the message of the added exceptions here.\n */\nfunction truncateAggregateExceptions(exceptions, maxValueLength) {\n  return exceptions.map(exception => {\n    if (exception.value) {\n      exception.value = truncate(exception.value, maxValueLength);\n    }\n    return exception;\n  });\n}\n\nexport { applyAggregateErrorsToEvent };\n//# sourceMappingURL=aggregate-errors.js.map\n","import { DEBUG_BUILD } from './debug-build.js';\nimport { consoleSandbox, logger } from './logger.js';\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol) {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nfunction dsnToString(dsn, withPassword = false) {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents or undefined if @param str is not a valid DSN string\n */\nfunction dsnFromString(str) {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    // This should be logged to the console\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.error(`Invalid Sentry Dsn: ${str}`);\n    });\n    return undefined;\n  }\n\n  const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() ;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol , publicKey });\n}\n\nfunction dsnFromComponents(components) {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn) {\n  if (!DEBUG_BUILD) {\n    return true;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents = ['protocol', 'publicKey', 'host', 'projectId'];\n  const hasMissingRequiredComponent = requiredComponents.find(component => {\n    if (!dsn[component]) {\n      logger.error(`Invalid Sentry Dsn: ${component} missing`);\n      return true;\n    }\n    return false;\n  });\n\n  if (hasMissingRequiredComponent) {\n    return false;\n  }\n\n  if (!projectId.match(/^\\d+$/)) {\n    logger.error(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n    return false;\n  }\n\n  if (!isValidProtocol(protocol)) {\n    logger.error(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n    return false;\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    logger.error(`Invalid Sentry Dsn: Invalid port ${port}`);\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Creates a valid Sentry Dsn object, identifying a Sentry instance and project.\n * @returns a valid DsnComponents object or `undefined` if @param from is an invalid DSN source\n */\nfunction makeDsn(from) {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  if (!components || !validateDsn(components)) {\n    return undefined;\n  }\n  return components;\n}\n\nexport { dsnFromString, dsnToString, makeDsn };\n//# sourceMappingURL=dsn.js.map\n","/** An error emitted by Sentry SDKs and related utilities. */\nclass SentryError extends Error {\n  /** Display name of this error instance. */\n\n   constructor( message, logLevel = 'warn') {\n    super(message);this.message = message;\n    this.name = new.target.prototype.constructor.name;\n    // This sets the prototype to be `Error`, not `SentryError`. It's unclear why we do this, but commenting this line\n    // out causes various (seemingly totally unrelated) playwright tests consistently time out. FYI, this makes\n    // instances of `SentryError` fail `obj instanceof SentryError` checks.\n    Object.setPrototypeOf(this, new.target.prototype);\n    this.logLevel = logLevel;\n  }\n}\n\nexport { SentryError };\n//# sourceMappingURL=error.js.map\n","import { DEBUG_BUILD } from '../debug-build.js';\nimport { logger } from '../logger.js';\nimport { getFunctionName } from '../stacktrace.js';\n\n// We keep the handlers globally\nconst handlers = {};\nconst instrumented = {};\n\n/** Add a handler function. */\nfunction addHandler(type, handler) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(handler);\n}\n\n/**\n * Reset all instrumentation handlers.\n * This can be used by tests to ensure we have a clean slate of instrumentation handlers.\n */\nfunction resetInstrumentationHandlers() {\n  Object.keys(handlers).forEach(key => {\n    handlers[key ] = undefined;\n  });\n}\n\n/** Maybe run an instrumentation function, unless it was already called. */\nfunction maybeInstrument(type, instrumentFn) {\n  if (!instrumented[type]) {\n    instrumentFn();\n    instrumented[type] = true;\n  }\n}\n\n/** Trigger handlers for a given instrumentation type. */\nfunction triggerHandlers(type, data) {\n  const typeHandlers = type && handlers[type];\n  if (!typeHandlers) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\nexport { addHandler, maybeInstrument, resetInstrumentationHandlers, triggerHandlers };\n//# sourceMappingURL=_handlers.js.map\n","import { CONSOLE_LEVELS, originalConsoleMethods } from '../logger.js';\nimport { fill } from '../object.js';\nimport { GLOBAL_OBJ } from '../worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers.js';\n\n/**\n * Add an instrumentation handler for when a console.xxx method is called.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addConsoleInstrumentationHandler(handler) {\n  const type = 'console';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentConsole);\n}\n\nfunction instrumentConsole() {\n  if (!('console' in GLOBAL_OBJ)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level) {\n    if (!(level in GLOBAL_OBJ.console)) {\n      return;\n    }\n\n    fill(GLOBAL_OBJ.console, level, function (originalConsoleMethod) {\n      originalConsoleMethods[level] = originalConsoleMethod;\n\n      return function (...args) {\n        const handlerData = { args, level };\n        triggerHandlers('console', handlerData);\n\n        const log = originalConsoleMethods[level];\n        log && log.apply(GLOBAL_OBJ.console, args);\n      };\n    });\n  });\n}\n\nexport { addConsoleInstrumentationHandler };\n//# sourceMappingURL=console.js.map\n","import { uuid4 } from '../misc.js';\nimport { fill, addNonEnumerableProperty } from '../object.js';\nimport { GLOBAL_OBJ } from '../worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers.js';\n\nconst WINDOW = GLOBAL_OBJ ;\nconst DEBOUNCE_DURATION = 1000;\n\nlet debounceTimerID;\nlet lastCapturedEventType;\nlet lastCapturedEventTargetId;\n\n/**\n * Add an instrumentation handler for when a click or a keypress happens.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addClickKeypressInstrumentationHandler(handler) {\n  const type = 'dom';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentDOM);\n}\n\n/** Exported for tests only. */\nfunction instrumentDOM() {\n  if (!WINDOW.document) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  WINDOW.document.addEventListener('click', globalDOMEventHandler, false);\n  WINDOW.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const proto = (WINDOW )[target] && (WINDOW )[target].prototype;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener) {\n      return function (\n\n        type,\n        listener,\n        options,\n      ) {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const el = this ;\n            const handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount++;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener) {\n        return function (\n\n          type,\n          listener,\n          options,\n        ) {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              const el = this ;\n              const handlers = el.__sentry_instrumentation_handlers__ || {};\n              const handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount--;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\n/**\n * Check whether the event is similar to the last captured one. For example, two click events on the same button.\n */\nfunction isSimilarToLastCapturedEvent(event) {\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (event.type !== lastCapturedEventType) {\n    return false;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (!event.target || (event.target )._sentryId !== lastCapturedEventTargetId) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return true;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(eventType, target) {\n  // We are only interested in filtering `keypress` events for now.\n  if (eventType !== 'keypress') {\n    return false;\n  }\n\n  if (!target || !target.tagName) {\n    return true;\n  }\n\n  // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n  // e.g.tabbing through elements, hotkeys, etc.\n  if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n */\nfunction makeDOMEventHandler(\n  handler,\n  globalListener = false,\n) {\n  return (event) => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || event['_sentryCaptured']) {\n      return;\n    }\n\n    const target = getEventTarget(event);\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event.type, target)) {\n      return;\n    }\n\n    // Mark event as \"seen\"\n    addNonEnumerableProperty(event, '_sentryCaptured', true);\n\n    if (target && !target._sentryId) {\n      // Add UUID to event target so we can identify if\n      addNonEnumerableProperty(target, '_sentryId', uuid4());\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no last captured event, it means that we can safely capture the new event and store it for future comparisons.\n    // If there is a last captured event, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    if (!isSimilarToLastCapturedEvent(event)) {\n      const handlerData = { event, name, global: globalListener };\n      handler(handlerData);\n      lastCapturedEventType = event.type;\n      lastCapturedEventTargetId = target ? target._sentryId : undefined;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = WINDOW.setTimeout(() => {\n      lastCapturedEventTargetId = undefined;\n      lastCapturedEventType = undefined;\n    }, DEBOUNCE_DURATION);\n  };\n}\n\nfunction getEventTarget(event) {\n  try {\n    return event.target ;\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n    return null;\n  }\n}\n\nexport { addClickKeypressInstrumentationHandler, instrumentDOM };\n//# sourceMappingURL=dom.js.map\n","import { DEBUG_BUILD } from './debug-build.js';\nimport { logger } from './logger.js';\nimport { getGlobalObject } from './worldwide.js';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsErrorEvent() {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMError() {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-expect-error It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMException() {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsFetch() {\n  if (!('fetch' in WINDOW)) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isNativeFetch(func) {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nfunction supportsNativeFetch() {\n  if (typeof EdgeRuntime === 'string') {\n    return true;\n  }\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFetch(WINDOW.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement ) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      DEBUG_BUILD &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReportingObserver() {\n  return 'ReportingObserver' in WINDOW;\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReferrerPolicy() {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' ,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport { isNativeFetch, supportsDOMError, supportsDOMException, supportsErrorEvent, supportsFetch, supportsNativeFetch, supportsReferrerPolicy, supportsReportingObserver };\n//# sourceMappingURL=supports.js.map\n","import { fill } from '../object.js';\nimport { supportsNativeFetch } from '../supports.js';\nimport { GLOBAL_OBJ } from '../worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers.js';\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addFetchInstrumentationHandler(handler) {\n  const type = 'fetch';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentFetch);\n}\n\nfunction instrumentFetch() {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(GLOBAL_OBJ, 'fetch', function (originalFetch) {\n    return function (...args) {\n      const { method, url } = parseFetchArgs(args);\n\n      const handlerData = {\n        args,\n        fetchData: {\n          method,\n          url,\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(GLOBAL_OBJ, args).then(\n        (response) => {\n          const finishedHandlerData = {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          };\n\n          triggerHandlers('fetch', finishedHandlerData);\n          return response;\n        },\n        (error) => {\n          const erroredHandlerData = {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          };\n\n          triggerHandlers('fetch', erroredHandlerData);\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\nfunction hasProp(obj, prop) {\n  return !!obj && typeof obj === 'object' && !!(obj )[prop];\n}\n\nfunction getUrlFromResource(resource) {\n  if (typeof resource === 'string') {\n    return resource;\n  }\n\n  if (!resource) {\n    return '';\n  }\n\n  if (hasProp(resource, 'url')) {\n    return resource.url;\n  }\n\n  if (resource.toString) {\n    return resource.toString();\n  }\n\n  return '';\n}\n\n/**\n * Parses the fetch arguments to find the used Http method and the url of the request.\n * Exported for tests only.\n */\nfunction parseFetchArgs(fetchArgs) {\n  if (fetchArgs.length === 0) {\n    return { method: 'GET', url: '' };\n  }\n\n  if (fetchArgs.length === 2) {\n    const [url, options] = fetchArgs ;\n\n    return {\n      url: getUrlFromResource(url),\n      method: hasProp(options, 'method') ? String(options.method).toUpperCase() : 'GET',\n    };\n  }\n\n  const arg = fetchArgs[0];\n  return {\n    url: getUrlFromResource(arg ),\n    method: hasProp(arg, 'method') ? String(arg.method).toUpperCase() : 'GET',\n  };\n}\n\nexport { addFetchInstrumentationHandler, parseFetchArgs };\n//# sourceMappingURL=fetch.js.map\n","import { GLOBAL_OBJ } from '../worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers.js';\n\nlet _oldOnErrorHandler = null;\n\n/**\n * Add an instrumentation handler for when an error is captured by the global error handler.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addGlobalErrorInstrumentationHandler(handler) {\n  const type = 'error';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentError);\n}\n\nfunction instrumentError() {\n  _oldOnErrorHandler = GLOBAL_OBJ.onerror;\n\n  GLOBAL_OBJ.onerror = function (\n    msg,\n    url,\n    line,\n    column,\n    error,\n  ) {\n    const handlerData = {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    };\n    triggerHandlers('error', handlerData);\n\n    if (_oldOnErrorHandler && !_oldOnErrorHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  GLOBAL_OBJ.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n\nexport { addGlobalErrorInstrumentationHandler };\n//# sourceMappingURL=globalError.js.map\n","import { GLOBAL_OBJ } from '../worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers.js';\n\nlet _oldOnUnhandledRejectionHandler = null;\n\n/**\n * Add an instrumentation handler for when an unhandled promise rejection is captured.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addGlobalUnhandledRejectionInstrumentationHandler(\n  handler,\n) {\n  const type = 'unhandledrejection';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentUnhandledRejection);\n}\n\nfunction instrumentUnhandledRejection() {\n  _oldOnUnhandledRejectionHandler = GLOBAL_OBJ.onunhandledrejection;\n\n  GLOBAL_OBJ.onunhandledrejection = function (e) {\n    const handlerData = e;\n    triggerHandlers('unhandledrejection', handlerData);\n\n    if (_oldOnUnhandledRejectionHandler && !_oldOnUnhandledRejectionHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n\n  GLOBAL_OBJ.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;\n}\n\nexport { addGlobalUnhandledRejectionInstrumentationHandler };\n//# sourceMappingURL=globalUnhandledRejection.js.map\n","import { getGlobalObject } from '../worldwide.js';\n\n// Based on https://github.com/angular/angular.js/pull/13945/files\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsHistory() {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const chrome = (WINDOW ).chrome;\n  const isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  const hasHistoryApi = 'history' in WINDOW && !!WINDOW.history.pushState && !!WINDOW.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n\nexport { supportsHistory };\n//# sourceMappingURL=supportsHistory.js.map\n","import { fill } from '../object.js';\nimport '../debug-build.js';\nimport '../logger.js';\nimport { GLOBAL_OBJ } from '../worldwide.js';\nimport { supportsHistory } from '../vendor/supportsHistory.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers.js';\n\nconst WINDOW = GLOBAL_OBJ ;\n\nlet lastHref;\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addHistoryInstrumentationHandler(handler) {\n  const type = 'history';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentHistory);\n}\n\nfunction instrumentHistory() {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  const oldOnPopState = WINDOW.onpopstate;\n  WINDOW.onpopstate = function ( ...args) {\n    const to = WINDOW.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    const handlerData = { from, to };\n    triggerHandlers('history', handlerData);\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  function historyReplacementFunction(originalHistoryFunction) {\n    return function ( ...args) {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        const handlerData = { from, to };\n        triggerHandlers('history', handlerData);\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(WINDOW.history, 'pushState', historyReplacementFunction);\n  fill(WINDOW.history, 'replaceState', historyReplacementFunction);\n}\n\nexport { addHistoryInstrumentationHandler };\n//# sourceMappingURL=history.js.map\n","import { isString } from '../is.js';\nimport { fill } from '../object.js';\nimport { GLOBAL_OBJ } from '../worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers.js';\n\nconst WINDOW = GLOBAL_OBJ ;\n\nconst SENTRY_XHR_DATA_KEY = '__sentry_xhr_v3__';\n\n/**\n * Add an instrumentation handler for when an XHR request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addXhrInstrumentationHandler(handler) {\n  const type = 'xhr';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentXHR);\n}\n\n/** Exported only for tests. */\nfunction instrumentXHR() {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (!(WINDOW ).XMLHttpRequest) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function (originalOpen) {\n    return function ( ...args) {\n      const startTimestamp = Date.now();\n\n      // open() should always be called with two or more arguments\n      // But to be on the safe side, we actually validate this and bail out if we don't have a method & url\n      const method = isString(args[0]) ? args[0].toUpperCase() : undefined;\n      const url = parseUrl(args[1]);\n\n      if (!method || !url) {\n        return originalOpen.apply(this, args);\n      }\n\n      this[SENTRY_XHR_DATA_KEY] = {\n        method,\n        url,\n        request_headers: {},\n      };\n\n      // if Sentry key appears in URL, don't capture it as a request\n      if (method === 'POST' && url.match(/sentry_key/)) {\n        this.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler = () => {\n        // For whatever reason, this is not the same instance here as from the outer method\n        const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n        if (!xhrInfo) {\n          return;\n        }\n\n        if (this.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = this.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          const handlerData = {\n            args: [method, url],\n            endTimestamp: Date.now(),\n            startTimestamp,\n            xhr: this,\n          };\n          triggerHandlers('xhr', handlerData);\n        }\n      };\n\n      if ('onreadystatechange' in this && typeof this.onreadystatechange === 'function') {\n        fill(this, 'onreadystatechange', function (original) {\n          return function ( ...readyStateArgs) {\n            onreadystatechangeHandler();\n            return original.apply(this, readyStateArgs);\n          };\n        });\n      } else {\n        this.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      // Intercepting `setRequestHeader` to access the request headers of XHR instance.\n      // This will only work for user/library defined headers, not for the default/browser-assigned headers.\n      // Request cookies are also unavailable for XHR, as `Cookie` header can't be defined by `setRequestHeader`.\n      fill(this, 'setRequestHeader', function (original) {\n        return function ( ...setRequestHeaderArgs) {\n          const [header, value] = setRequestHeaderArgs;\n\n          const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n          if (xhrInfo && isString(header) && isString(value)) {\n            xhrInfo.request_headers[header.toLowerCase()] = value;\n          }\n\n          return original.apply(this, setRequestHeaderArgs);\n        };\n      });\n\n      return originalOpen.apply(this, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function (originalSend) {\n    return function ( ...args) {\n      const sentryXhrData = this[SENTRY_XHR_DATA_KEY];\n\n      if (!sentryXhrData) {\n        return originalSend.apply(this, args);\n      }\n\n      if (args[0] !== undefined) {\n        sentryXhrData.body = args[0];\n      }\n\n      const handlerData = {\n        args: [sentryXhrData.method, sentryXhrData.url],\n        startTimestamp: Date.now(),\n        xhr: this,\n      };\n      triggerHandlers('xhr', handlerData);\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nfunction parseUrl(url) {\n  if (isString(url)) {\n    return url;\n  }\n\n  try {\n    // url can be a string or URL\n    // but since URL is not available in IE11, we do not check for it,\n    // but simply assume it is an URL and return `toString()` from it (which returns the full URL)\n    // If that fails, we just return undefined\n    return (url ).toString();\n  } catch (e2) {} // eslint-disable-line no-empty\n\n  return undefined;\n}\n\nexport { SENTRY_XHR_DATA_KEY, addXhrInstrumentationHandler, instrumentXHR };\n//# sourceMappingURL=xhr.js.map\n","import { SentryError } from './error.js';\nimport { rejectedSyncPromise, SyncPromise, resolvedSyncPromise } from './syncpromise.js';\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nfunction makePromiseBuffer(limit) {\n  const buffer = [];\n\n  function isReady() {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task) {\n    return buffer.splice(buffer.indexOf(task), 1)[0];\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer) {\n    if (!isReady()) {\n      return rejectedSyncPromise(new SentryError('Not adding Promise because buffer limit was reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout) {\n    return new SyncPromise((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void resolvedSyncPromise(item).then(() => {\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n\nexport { makePromiseBuffer };\n//# sourceMappingURL=promisebuffer.js.map\n","/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nfunction parseUrl(url) {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    search: query,\n    hash: fragment,\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nfunction stripUrlQueryAndFragment(urlPath) {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Returns number of URL segments of a passed string URL.\n */\nfunction getNumberOfUrlSegments(url) {\n  // split at '/' or at '\\/' to split regex urls correctly\n  return url.split(/\\\\?\\//).filter(s => s.length > 0 && s !== ',').length;\n}\n\n/**\n * Takes a URL object and returns a sanitized string which is safe to use as span description\n * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data\n */\nfunction getSanitizedUrlString(url) {\n  const { protocol, host, path } = url;\n\n  const filteredHost =\n    (host &&\n      host\n        // Always filter out authority\n        .replace(/^.*@/, '[filtered]:[filtered]@')\n        // Don't show standard :80 (http) and :443 (https) ports to reduce the noise\n        // TODO: Use new URL global if it exists\n        .replace(/(:80)$/, '')\n        .replace(/(:443)$/, '')) ||\n    '';\n\n  return `${protocol ? `${protocol}://` : ''}${filteredHost}${path}`;\n}\n\nexport { getNumberOfUrlSegments, getSanitizedUrlString, parseUrl, stripUrlQueryAndFragment };\n//# sourceMappingURL=url.js.map\n","// Note: Ideally the `SeverityLevel` type would be derived from `validSeverityLevels`, but that would mean either\n//\n// a) moving `validSeverityLevels` to `@sentry/types`,\n// b) moving the`SeverityLevel` type here, or\n// c) importing `validSeverityLevels` from here into `@sentry/types`.\n//\n// Option A would make `@sentry/types` a runtime dependency of `@sentry/utils` (not good), and options B and C would\n// create a circular dependency between `@sentry/types` and `@sentry/utils` (also not good). So a TODO accompanying the\n// type, reminding anyone who changes it to change this list also, will have to do.\n\nconst validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a member of the deprecated {@link Severity} enum.\n *\n * @deprecated `severityFromString` is deprecated. Please use `severityLevelFromString` instead.\n *\n * @param level String representation of Severity\n * @returns Severity\n */\nfunction severityFromString(level) {\n  return severityLevelFromString(level) ;\n}\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nfunction severityLevelFromString(level) {\n  return (level === 'warn' ? 'warning' : validSeverityLevels.includes(level) ? level : 'log') ;\n}\n\nexport { severityFromString, severityLevelFromString, validSeverityLevels };\n//# sourceMappingURL=severity.js.map\n","import { dsnToString } from './dsn.js';\nimport { normalize } from './normalize.js';\nimport { dropUndefinedKeys } from './object.js';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction createEnvelope(headers, items = []) {\n  return [headers, items] ;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction addItemToEnvelope(envelope, newItem) {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] ;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n *\n * If the callback returns true, the rest of the items will be skipped.\n */\nfunction forEachEnvelopeItem(\n  envelope,\n  callback,\n) {\n  const envelopeItems = envelope[1];\n\n  for (const envelopeItem of envelopeItems) {\n    const envelopeItemType = envelopeItem[0].type;\n    const result = callback(envelopeItem, envelopeItemType);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the envelope contains any of the given envelope item types\n */\nfunction envelopeContainsItemType(envelope, types) {\n  return forEachEnvelopeItem(envelope, (_, type) => types.includes(type));\n}\n\n/**\n * Encode a string to UTF8.\n */\nfunction encodeUTF8(input, textEncoder) {\n  const utf8 = textEncoder || new TextEncoder();\n  return utf8.encode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nfunction serializeEnvelope(envelope, textEncoder) {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts = JSON.stringify(envHeaders);\n\n  function append(next) {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts, textEncoder), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next, textEncoder) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item;\n\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n\n    if (typeof payload === 'string' || payload instanceof Uint8Array) {\n      append(payload);\n    } else {\n      let stringifiedPayload;\n      try {\n        stringifiedPayload = JSON.stringify(payload);\n      } catch (e) {\n        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.strinify()` still\n        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a\n        // performance impact but in this case a performance hit is better than throwing.\n        stringifiedPayload = JSON.stringify(normalize(payload));\n      }\n      append(stringifiedPayload);\n    }\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers) {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\n/**\n * Parses an envelope\n */\nfunction parseEnvelope(\n  env,\n  textEncoder,\n  textDecoder,\n) {\n  let buffer = typeof env === 'string' ? textEncoder.encode(env) : env;\n\n  function readBinary(length) {\n    const bin = buffer.subarray(0, length);\n    // Replace the buffer with the remaining data excluding trailing newline\n    buffer = buffer.subarray(length + 1);\n    return bin;\n  }\n\n  function readJson() {\n    let i = buffer.indexOf(0xa);\n    // If we couldn't find a newline, we must have found the end of the buffer\n    if (i < 0) {\n      i = buffer.length;\n    }\n\n    return JSON.parse(textDecoder.decode(readBinary(i))) ;\n  }\n\n  const envelopeHeader = readJson();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items = [];\n\n  while (buffer.length) {\n    const itemHeader = readJson();\n    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;\n\n    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);\n  }\n\n  return [envelopeHeader, items];\n}\n\n/**\n * Creates attachment envelope items\n */\nfunction createAttachmentEnvelopeItem(\n  attachment,\n  textEncoder,\n) {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data, textEncoder) : attachment.data;\n\n  return [\n    dropUndefinedKeys({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n  profile: 'profile',\n  replay_event: 'replay',\n  replay_recording: 'replay',\n  check_in: 'monitor',\n  feedback: 'feedback',\n  span: 'span',\n  // TODO: This is a temporary workaround until we have a proper data category for metrics\n  statsd: 'unknown',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nfunction envelopeItemTypeToDataCategory(type) {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n/** Extracts the minimal SDK info from from the metadata or an events */\nfunction getSdkMetadataForEnvelopeHeader(metadataOrEvent) {\n  if (!metadataOrEvent || !metadataOrEvent.sdk) {\n    return;\n  }\n  const { name, version } = metadataOrEvent.sdk;\n  return { name, version };\n}\n\n/**\n * Creates event envelope headers, based on event, sdk info and tunnel\n * Note: This function was extracted from the core package to make it available in Replay\n */\nfunction createEventEnvelopeHeaders(\n  event,\n  sdkInfo,\n  tunnel,\n  dsn,\n) {\n  const dynamicSamplingContext = event.sdkProcessingMetadata && event.sdkProcessingMetadata.dynamicSamplingContext;\n  return {\n    event_id: event.event_id ,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n    ...(dynamicSamplingContext && {\n      trace: dropUndefinedKeys({ ...dynamicSamplingContext }),\n    }),\n  };\n}\n\nexport { addItemToEnvelope, createAttachmentEnvelopeItem, createEnvelope, createEventEnvelopeHeaders, envelopeContainsItemType, envelopeItemTypeToDataCategory, forEachEnvelopeItem, getSdkMetadataForEnvelopeHeader, parseEnvelope, serializeEnvelope };\n//# sourceMappingURL=envelope.js.map\n","import { createEnvelope } from './envelope.js';\nimport { dateTimestampInSeconds } from './time.js';\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nfunction createClientReportEnvelope(\n  discarded_events,\n  dsn,\n  timestamp,\n) {\n  const clientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return createEnvelope(dsn ? { dsn } : {}, [clientReportItem]);\n}\n\nexport { createClientReportEnvelope };\n//# sourceMappingURL=clientreport.js.map\n","// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\n\nconst DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nfunction parseRetryAfterHeader(header, now = Date.now()) {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that the given category is disabled until for rate limiting.\n * In case no category-specific limit is set but a general rate limit across all categories is active,\n * that time is returned.\n *\n * @return the time in ms that the category is disabled until or 0 if there's no active rate limit.\n */\nfunction disabledUntil(limits, category) {\n  return limits[category] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nfunction isRateLimited(limits, category, now = Date.now()) {\n  return disabledUntil(limits, category) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n *\n * @return the updated RateLimits object.\n */\nfunction updateRateLimits(\n  limits,\n  { statusCode, headers },\n  now = Date.now(),\n) {\n  const updatedRateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  const retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories] = limit.split(':', 2);\n      const headerDelay = parseInt(retryAfter, 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of categories.split(';')) {\n          updatedRateLimits[category] = now + delay;\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n\nexport { DEFAULT_RETRY_AFTER, disabledUntil, isRateLimited, parseRetryAfterHeader, updateRateLimits };\n//# sourceMappingURL=ratelimit.js.map\n","/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n * See https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The value of the expression\n */\nfunction _optionalChain(ops) {\n  let lastAccessLHS = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    const op = ops[i] ;\n    const fn = ops[i + 1] ;\n    i += 2;\n    // by checking for loose equality to `null`, we catch both `null` and `undefined`\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      // really we're meaning to return `undefined` as an actual value here, but it saves bytes not to write it\n      return;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = fn((...args) => (value ).call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n}\n\n// Sucrase version\n// function _optionalChain(ops) {\n//   let lastAccessLHS = undefined;\n//   let value = ops[0];\n//   let i = 1;\n//   while (i < ops.length) {\n//     const op = ops[i];\n//     const fn = ops[i + 1];\n//     i += 2;\n//     if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n//       return undefined;\n//     }\n//     if (op === 'access' || op === 'optionalAccess') {\n//       lastAccessLHS = value;\n//       value = fn(value);\n//     } else if (op === 'call' || op === 'optionalCall') {\n//       value = fn((...args) => value.call(lastAccessLHS, ...args));\n//       lastAccessLHS = undefined;\n//     }\n//   }\n//   return value;\n// }\n\nexport { _optionalChain };\n//# sourceMappingURL=_optionalChain.js.map\n","import { getClient } from '../exports.js';\n\n// Treeshakable guard to remove all code related to tracing\n\n/**\n * Determines if tracing is currently enabled.\n *\n * Tracing is enabled when at least one of `tracesSampleRate` and `tracesSampler` is defined in the SDK config.\n */\nfunction hasTracingEnabled(\n  maybeOptions,\n) {\n  if (typeof __SENTRY_TRACING__ === 'boolean' && !__SENTRY_TRACING__) {\n    return false;\n  }\n\n  const client = getClient();\n  const options = maybeOptions || (client && client.getOptions());\n  return !!options && (options.enableTracing || 'tracesSampleRate' in options || 'tracesSampler' in options);\n}\n\nexport { hasTracingEnabled };\n//# sourceMappingURL=hasTracingEnabled.js.map\n","import { tracingContextFromHeaders, logger, dropUndefinedKeys, addNonEnumerableProperty } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { getCurrentHub, runWithAsyncContext, getIsolationScope } from '../hub.js';\nimport { spanToJSON, spanIsSampled, spanTimeInputToSeconds } from '../utils/spanUtils.js';\nimport './errors.js';\nimport './spanstatus.js';\nimport { getDynamicSamplingContextFromSpan } from './dynamicSamplingContext.js';\nimport { getCurrentScope, withScope } from '../exports.js';\nimport { handleCallbackErrors } from '../utils/handleCallbackErrors.js';\nimport { hasTracingEnabled } from '../utils/hasTracingEnabled.js';\n\n/**\n * Wraps a function with a transaction/span and finishes the span after the function is done.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n *\n * This function is meant to be used internally and may break at any time. Use at your own risk.\n *\n * @internal\n * @private\n *\n * @deprecated Use `startSpan` instead.\n */\nfunction trace(\n  context,\n  callback,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onError = () => {},\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  afterFinish = () => {},\n) {\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = getCurrentHub();\n  const scope = getCurrentScope();\n  // eslint-disable-next-line deprecation/deprecation\n  const parentSpan = scope.getSpan();\n\n  const spanContext = normalizeContext(context);\n  const activeSpan = createChildSpanOrTransaction(hub, {\n    parentSpan,\n    spanContext,\n    forceTransaction: false,\n    scope,\n  });\n\n  // eslint-disable-next-line deprecation/deprecation\n  scope.setSpan(activeSpan);\n\n  return handleCallbackErrors(\n    () => callback(activeSpan),\n    error => {\n      activeSpan && activeSpan.setStatus('internal_error');\n      onError(error, activeSpan);\n    },\n    () => {\n      activeSpan && activeSpan.end();\n      // eslint-disable-next-line deprecation/deprecation\n      scope.setSpan(parentSpan);\n      afterFinish();\n    },\n  );\n}\n\n/**\n * Wraps a function with a transaction/span and finishes the span after the function is done.\n * The created span is the active span and will be used as parent by other spans created inside the function\n * and can be accessed via `Sentry.getSpan()`, as long as the function is executed while the scope is active.\n *\n * If you want to create a span that is not set as active, use {@link startInactiveSpan}.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n */\nfunction startSpan(context, callback) {\n  const spanContext = normalizeContext(context);\n\n  return runWithAsyncContext(() => {\n    return withScope(context.scope, scope => {\n      // eslint-disable-next-line deprecation/deprecation\n      const hub = getCurrentHub();\n      // eslint-disable-next-line deprecation/deprecation\n      const parentSpan = scope.getSpan();\n\n      const shouldSkipSpan = context.onlyIfParent && !parentSpan;\n      const activeSpan = shouldSkipSpan\n        ? undefined\n        : createChildSpanOrTransaction(hub, {\n            parentSpan,\n            spanContext,\n            forceTransaction: context.forceTransaction,\n            scope,\n          });\n\n      return handleCallbackErrors(\n        () => callback(activeSpan),\n        () => {\n          // Only update the span status if it hasn't been changed yet\n          if (activeSpan) {\n            const { status } = spanToJSON(activeSpan);\n            if (!status || status === 'ok') {\n              activeSpan.setStatus('internal_error');\n            }\n          }\n        },\n        () => activeSpan && activeSpan.end(),\n      );\n    });\n  });\n}\n\n/**\n * @deprecated Use {@link startSpan} instead.\n */\nconst startActiveSpan = startSpan;\n\n/**\n * Similar to `Sentry.startSpan`. Wraps a function with a transaction/span, but does not finish the span\n * after the function is done automatically. You'll have to call `span.end()` manually.\n *\n * The created span is the active span and will be used as parent by other spans created inside the function\n * and can be accessed via `Sentry.getActiveSpan()`, as long as the function is executed while the scope is active.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n */\nfunction startSpanManual(\n  context,\n  callback,\n) {\n  const spanContext = normalizeContext(context);\n\n  return runWithAsyncContext(() => {\n    return withScope(context.scope, scope => {\n      // eslint-disable-next-line deprecation/deprecation\n      const hub = getCurrentHub();\n      // eslint-disable-next-line deprecation/deprecation\n      const parentSpan = scope.getSpan();\n\n      const shouldSkipSpan = context.onlyIfParent && !parentSpan;\n      const activeSpan = shouldSkipSpan\n        ? undefined\n        : createChildSpanOrTransaction(hub, {\n            parentSpan,\n            spanContext,\n            forceTransaction: context.forceTransaction,\n            scope,\n          });\n\n      function finishAndSetSpan() {\n        activeSpan && activeSpan.end();\n      }\n\n      return handleCallbackErrors(\n        () => callback(activeSpan, finishAndSetSpan),\n        () => {\n          // Only update the span status if it hasn't been changed yet, and the span is not yet finished\n          if (activeSpan && activeSpan.isRecording()) {\n            const { status } = spanToJSON(activeSpan);\n            if (!status || status === 'ok') {\n              activeSpan.setStatus('internal_error');\n            }\n          }\n        },\n      );\n    });\n  });\n}\n\n/**\n * Creates a span. This span is not set as active, so will not get automatic instrumentation spans\n * as children or be able to be accessed via `Sentry.getSpan()`.\n *\n * If you want to create a span that is set as active, use {@link startSpan}.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate` or `tracesSampler`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n */\nfunction startInactiveSpan(context) {\n  if (!hasTracingEnabled()) {\n    return undefined;\n  }\n\n  const spanContext = normalizeContext(context);\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = getCurrentHub();\n  const parentSpan = context.scope\n    ? // eslint-disable-next-line deprecation/deprecation\n      context.scope.getSpan()\n    : getActiveSpan();\n\n  const shouldSkipSpan = context.onlyIfParent && !parentSpan;\n\n  if (shouldSkipSpan) {\n    return undefined;\n  }\n\n  const scope = context.scope || getCurrentScope();\n\n  // Even though we don't actually want to make this span active on the current scope,\n  // we need to make it active on a temporary scope that we use for event processing\n  // as otherwise, it won't pick the correct span for the event when processing it\n  const temporaryScope = (scope ).clone();\n\n  return createChildSpanOrTransaction(hub, {\n    parentSpan,\n    spanContext,\n    forceTransaction: context.forceTransaction,\n    scope: temporaryScope,\n  });\n}\n\n/**\n * Returns the currently active span.\n */\nfunction getActiveSpan() {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentScope().getSpan();\n}\n\nconst continueTrace = (\n  {\n    sentryTrace,\n    baggage,\n  }\n\n,\n  callback,\n) => {\n  // TODO(v8): Change this function so it doesn't do anything besides setting the propagation context on the current scope:\n  /*\n    return withScope((scope) => {\n      const propagationContext = propagationContextFromHeaders(sentryTrace, baggage);\n      scope.setPropagationContext(propagationContext);\n      return callback();\n    })\n  */\n\n  const currentScope = getCurrentScope();\n\n  // eslint-disable-next-line deprecation/deprecation\n  const { traceparentData, dynamicSamplingContext, propagationContext } = tracingContextFromHeaders(\n    sentryTrace,\n    baggage,\n  );\n\n  currentScope.setPropagationContext(propagationContext);\n\n  if (DEBUG_BUILD && traceparentData) {\n    logger.log(`[Tracing] Continuing trace ${traceparentData.traceId}.`);\n  }\n\n  const transactionContext = {\n    ...traceparentData,\n    metadata: dropUndefinedKeys({\n      dynamicSamplingContext,\n    }),\n  };\n\n  if (!callback) {\n    return transactionContext;\n  }\n\n  return runWithAsyncContext(() => {\n    return callback(transactionContext);\n  });\n};\n\nfunction createChildSpanOrTransaction(\n  hub,\n  {\n    parentSpan,\n    spanContext,\n    forceTransaction,\n    scope,\n  }\n\n,\n) {\n  if (!hasTracingEnabled()) {\n    return undefined;\n  }\n\n  const isolationScope = getIsolationScope();\n\n  let span;\n  if (parentSpan && !forceTransaction) {\n    // eslint-disable-next-line deprecation/deprecation\n    span = parentSpan.startChild(spanContext);\n  } else if (parentSpan) {\n    // If we forced a transaction but have a parent span, make sure to continue from the parent span, not the scope\n    const dsc = getDynamicSamplingContextFromSpan(parentSpan);\n    const { traceId, spanId: parentSpanId } = parentSpan.spanContext();\n    const sampled = spanIsSampled(parentSpan);\n\n    // eslint-disable-next-line deprecation/deprecation\n    span = hub.startTransaction({\n      traceId,\n      parentSpanId,\n      parentSampled: sampled,\n      ...spanContext,\n      metadata: {\n        dynamicSamplingContext: dsc,\n        // eslint-disable-next-line deprecation/deprecation\n        ...spanContext.metadata,\n      },\n    });\n  } else {\n    const { traceId, dsc, parentSpanId, sampled } = {\n      ...isolationScope.getPropagationContext(),\n      ...scope.getPropagationContext(),\n    };\n\n    // eslint-disable-next-line deprecation/deprecation\n    span = hub.startTransaction({\n      traceId,\n      parentSpanId,\n      parentSampled: sampled,\n      ...spanContext,\n      metadata: {\n        dynamicSamplingContext: dsc,\n        // eslint-disable-next-line deprecation/deprecation\n        ...spanContext.metadata,\n      },\n    });\n  }\n\n  // We always set this as active span on the scope\n  // In the case of this being an inactive span, we ensure to pass a detached scope in here in the first place\n  // But by having this here, we can ensure that the lookup through `getCapturedScopesOnSpan` results in the correct scope & span combo\n  // eslint-disable-next-line deprecation/deprecation\n  scope.setSpan(span);\n\n  setCapturedScopesOnSpan(span, scope, isolationScope);\n\n  return span;\n}\n\n/**\n * This converts StartSpanOptions to TransactionContext.\n * For the most part (for now) we accept the same options,\n * but some of them need to be transformed.\n *\n * Eventually the StartSpanOptions will be more aligned with OpenTelemetry.\n */\nfunction normalizeContext(context) {\n  if (context.startTime) {\n    const ctx = { ...context };\n    ctx.startTimestamp = spanTimeInputToSeconds(context.startTime);\n    delete ctx.startTime;\n    return ctx;\n  }\n\n  return context;\n}\n\nconst SCOPE_ON_START_SPAN_FIELD = '_sentryScope';\nconst ISOLATION_SCOPE_ON_START_SPAN_FIELD = '_sentryIsolationScope';\n\nfunction setCapturedScopesOnSpan(span, scope, isolationScope) {\n  if (span) {\n    addNonEnumerableProperty(span, ISOLATION_SCOPE_ON_START_SPAN_FIELD, isolationScope);\n    addNonEnumerableProperty(span, SCOPE_ON_START_SPAN_FIELD, scope);\n  }\n}\n\n/**\n * Grabs the scope and isolation scope off a span that were active when the span was started.\n */\nfunction getCapturedScopesOnSpan(span) {\n  return {\n    scope: (span )[SCOPE_ON_START_SPAN_FIELD],\n    isolationScope: (span )[ISOLATION_SCOPE_ON_START_SPAN_FIELD],\n  };\n}\n\nexport { continueTrace, getActiveSpan, getCapturedScopesOnSpan, startActiveSpan, startInactiveSpan, startSpan, startSpanManual, trace };\n//# sourceMappingURL=trace.js.map\n","/**\n * Use this attribute to represent the source of a span.\n * Should be one of: custom, url, route, view, component, task, unknown\n *\n */\nconst SEMANTIC_ATTRIBUTE_SENTRY_SOURCE = 'sentry.source';\n\n/**\n * Use this attribute to represent the sample rate used for a span.\n */\nconst SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE = 'sentry.sample_rate';\n\n/**\n * Use this attribute to represent the operation of a span.\n */\nconst SEMANTIC_ATTRIBUTE_SENTRY_OP = 'sentry.op';\n\n/**\n * Use this attribute to represent the origin of a span.\n */\nconst SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN = 'sentry.origin';\n\n/**\n * The id of the profile that this span occured in.\n */\nconst SEMANTIC_ATTRIBUTE_PROFILE_ID = 'profile_id';\n\nexport { SEMANTIC_ATTRIBUTE_PROFILE_ID, SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE };\n//# sourceMappingURL=semanticAttributes.js.map\n","import { getSdkMetadataForEnvelopeHeader, dsnToString, createEnvelope, createEventEnvelopeHeaders } from '@sentry/utils';\n\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event, sdkInfo) {\n  if (!sdkInfo) {\n    return event;\n  }\n  event.sdk = event.sdk || {};\n  event.sdk.name = event.sdk.name || sdkInfo.name;\n  event.sdk.version = event.sdk.version || sdkInfo.version;\n  event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];\n  event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];\n  return event;\n}\n\n/** Creates an envelope from a Session */\nfunction createSessionEnvelope(\n  session,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n  const envelopeHeaders = {\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n  };\n\n  const envelopeItem =\n    'aggregates' in session ? [{ type: 'sessions' }, session] : [{ type: 'session' }, session.toJSON()];\n\n  return createEnvelope(envelopeHeaders, [envelopeItem]);\n}\n\n/**\n * Create an Envelope from an event.\n */\nfunction createEventEnvelope(\n  event,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n\n  /*\n    Note: Due to TS, event.type may be `replay_event`, theoretically.\n    In practice, we never call `createEventEnvelope` with `replay_event` type,\n    and we'd have to adjut a looot of types to make this work properly.\n    We want to avoid casting this around, as that could lead to bugs (e.g. when we add another type)\n    So the safe choice is to really guard against the replay_event type here.\n  */\n  const eventType = event.type && event.type !== 'replay_event' ? event.type : 'event';\n\n  enhanceEventWithSdkInfo(event, metadata && metadata.sdk);\n\n  const envelopeHeaders = createEventEnvelopeHeaders(event, sdkInfo, tunnel, dsn);\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete event.sdkProcessingMetadata;\n\n  const eventItem = [{ type: eventType }, event];\n  return createEnvelope(envelopeHeaders, [eventItem]);\n}\n\nexport { createEventEnvelope, createSessionEnvelope };\n//# sourceMappingURL=envelope.js.map\n","import { makeDsn, dsnToString, urlEncode } from '@sentry/utils';\n\nconst SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn) {\n  const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  const port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn) {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn, sdkInfo) {\n  return urlEncode({\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    sentry_key: dsn.publicKey,\n    sentry_version: SENTRY_API_VERSION,\n    ...(sdkInfo && { sentry_client: `${sdkInfo.name}/${sdkInfo.version}` }),\n  });\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nfunction getEnvelopeEndpointWithUrlEncodedAuth(\n  dsn,\n  // TODO (v8): Remove `tunnelOrOptions` in favor of `options`, and use the substitute code below\n  // options: ClientOptions = {} as ClientOptions,\n  tunnelOrOptions = {} ,\n) {\n  // TODO (v8): Use this code instead\n  // const { tunnel, _metadata = {} } = options;\n  // return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, _metadata.sdk)}`;\n\n  const tunnel = typeof tunnelOrOptions === 'string' ? tunnelOrOptions : tunnelOrOptions.tunnel;\n  const sdkInfo =\n    typeof tunnelOrOptions === 'string' || !tunnelOrOptions._metadata ? undefined : tunnelOrOptions._metadata.sdk;\n\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nfunction getReportDialogEndpoint(\n  dsnLike,\n  dialogOptions\n\n,\n) {\n  const dsn = makeDsn(dsnLike);\n  if (!dsn) {\n    return '';\n  }\n\n  const endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (const key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'onClose') {\n      continue;\n    }\n\n    if (key === 'user') {\n      const user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] )}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n\nexport { getEnvelopeEndpointWithUrlEncodedAuth, getReportDialogEndpoint };\n//# sourceMappingURL=api.js.map\n","import { arrayify, logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { addGlobalEventProcessor } from './eventProcessors.js';\nimport { getClient } from './exports.js';\nimport { getCurrentHub } from './hub.js';\n\nconst installedIntegrations = [];\n\n/** Map of integrations assigned to a client */\n\n/**\n * Remove duplicates from the given array, preferring the last instance of any duplicate. Not guaranteed to\n * preseve the order of integrations in the array.\n *\n * @private\n */\nfunction filterDuplicates(integrations) {\n  const integrationsByName = {};\n\n  integrations.forEach(currentInstance => {\n    const { name } = currentInstance;\n\n    const existingInstance = integrationsByName[name];\n\n    // We want integrations later in the array to overwrite earlier ones of the same type, except that we never want a\n    // default instance to overwrite an existing user instance\n    if (existingInstance && !existingInstance.isDefaultInstance && currentInstance.isDefaultInstance) {\n      return;\n    }\n\n    integrationsByName[name] = currentInstance;\n  });\n\n  return Object.keys(integrationsByName).map(k => integrationsByName[k]);\n}\n\n/** Gets integrations to install */\nfunction getIntegrationsToSetup(options) {\n  const defaultIntegrations = options.defaultIntegrations || [];\n  const userIntegrations = options.integrations;\n\n  // We flag default instances, so that later we can tell them apart from any user-created instances of the same class\n  defaultIntegrations.forEach(integration => {\n    integration.isDefaultInstance = true;\n  });\n\n  let integrations;\n\n  if (Array.isArray(userIntegrations)) {\n    integrations = [...defaultIntegrations, ...userIntegrations];\n  } else if (typeof userIntegrations === 'function') {\n    integrations = arrayify(userIntegrations(defaultIntegrations));\n  } else {\n    integrations = defaultIntegrations;\n  }\n\n  const finalIntegrations = filterDuplicates(integrations);\n\n  // The `Debug` integration prints copies of the `event` and `hint` which will be passed to `beforeSend` or\n  // `beforeSendTransaction`. It therefore has to run after all other integrations, so that the changes of all event\n  // processors will be reflected in the printed values. For lack of a more elegant way to guarantee that, we therefore\n  // locate it and, assuming it exists, pop it out of its current spot and shove it onto the end of the array.\n  const debugIndex = findIndex(finalIntegrations, integration => integration.name === 'Debug');\n  if (debugIndex !== -1) {\n    const [debugInstance] = finalIntegrations.splice(debugIndex, 1);\n    finalIntegrations.push(debugInstance);\n  }\n\n  return finalIntegrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nfunction setupIntegrations(client, integrations) {\n  const integrationIndex = {};\n\n  integrations.forEach(integration => {\n    // guard against empty provided integrations\n    if (integration) {\n      setupIntegration(client, integration, integrationIndex);\n    }\n  });\n\n  return integrationIndex;\n}\n\n/**\n * Execute the `afterAllSetup` hooks of the given integrations.\n */\nfunction afterSetupIntegrations(client, integrations) {\n  for (const integration of integrations) {\n    // guard against empty provided integrations\n    if (integration && integration.afterAllSetup) {\n      integration.afterAllSetup(client);\n    }\n  }\n}\n\n/** Setup a single integration.  */\nfunction setupIntegration(client, integration, integrationIndex) {\n  if (integrationIndex[integration.name]) {\n    DEBUG_BUILD && logger.log(`Integration skipped because it was already installed: ${integration.name}`);\n    return;\n  }\n  integrationIndex[integration.name] = integration;\n\n  // `setupOnce` is only called the first time\n  if (installedIntegrations.indexOf(integration.name) === -1) {\n    // eslint-disable-next-line deprecation/deprecation\n    integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n    installedIntegrations.push(integration.name);\n  }\n\n  // `setup` is run for each client\n  if (integration.setup && typeof integration.setup === 'function') {\n    integration.setup(client);\n  }\n\n  if (client.on && typeof integration.preprocessEvent === 'function') {\n    const callback = integration.preprocessEvent.bind(integration) ;\n    client.on('preprocessEvent', (event, hint) => callback(event, hint, client));\n  }\n\n  if (client.addEventProcessor && typeof integration.processEvent === 'function') {\n    const callback = integration.processEvent.bind(integration) ;\n\n    const processor = Object.assign((event, hint) => callback(event, hint, client), {\n      id: integration.name,\n    });\n\n    client.addEventProcessor(processor);\n  }\n\n  DEBUG_BUILD && logger.log(`Integration installed: ${integration.name}`);\n}\n\n/** Add an integration to the current hub's client. */\nfunction addIntegration(integration) {\n  const client = getClient();\n\n  if (!client || !client.addIntegration) {\n    DEBUG_BUILD && logger.warn(`Cannot add integration \"${integration.name}\" because no SDK Client is available.`);\n    return;\n  }\n\n  client.addIntegration(integration);\n}\n\n// Polyfill for Array.findIndex(), which is not supported in ES5\nfunction findIndex(arr, callback) {\n  for (let i = 0; i < arr.length; i++) {\n    if (callback(arr[i]) === true) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\n/**\n * Convert a new integration function to the legacy class syntax.\n * In v8, we can remove this and instead export the integration functions directly.\n *\n * @deprecated This will be removed in v8!\n */\nfunction convertIntegrationFnToClass(\n  name,\n  fn,\n) {\n  return Object.assign(\n    function ConvertedIntegration(...args) {\n      return fn(...args);\n    },\n    { id: name },\n  ) ;\n}\n\n/**\n * Define an integration function that can be used to create an integration instance.\n * Note that this by design hides the implementation details of the integration, as they are considered internal.\n */\nfunction defineIntegration(fn) {\n  return fn;\n}\n\nexport { addIntegration, afterSetupIntegrations, convertIntegrationFnToClass, defineIntegration, getIntegrationsToSetup, installedIntegrations, setupIntegration, setupIntegrations };\n//# sourceMappingURL=integration.js.map\n","import { dropUndefinedKeys } from '@sentry/utils';\nimport { NAME_AND_TAG_KEY_NORMALIZATION_REGEX, TAG_VALUE_NORMALIZATION_REGEX } from './constants.js';\n\n/**\n * Generate bucket key from metric properties.\n */\nfunction getBucketKey(\n  metricType,\n  name,\n  unit,\n  tags,\n) {\n  const stringifiedTags = Object.entries(dropUndefinedKeys(tags)).sort((a, b) => a[0].localeCompare(b[0]));\n  return `${metricType}${name}${unit}${stringifiedTags}`;\n}\n\n/* eslint-disable no-bitwise */\n/**\n * Simple hash function for strings.\n */\nfunction simpleHash(s) {\n  let rv = 0;\n  for (let i = 0; i < s.length; i++) {\n    const c = s.charCodeAt(i);\n    rv = (rv << 5) - rv + c;\n    rv &= rv;\n  }\n  return rv >>> 0;\n}\n/* eslint-enable no-bitwise */\n\n/**\n * Serialize metrics buckets into a string based on statsd format.\n *\n * Example of format:\n * metric.name@second:1:1.2|d|#a:value,b:anothervalue|T12345677\n * Segments:\n * name: metric.name\n * unit: second\n * value: [1, 1.2]\n * type of metric: d (distribution)\n * tags: { a: value, b: anothervalue }\n * timestamp: 12345677\n */\nfunction serializeMetricBuckets(metricBucketItems) {\n  let out = '';\n  for (const item of metricBucketItems) {\n    const tagEntries = Object.entries(item.tags);\n    const maybeTags = tagEntries.length > 0 ? `|#${tagEntries.map(([key, value]) => `${key}:${value}`).join(',')}` : '';\n    out += `${item.name}@${item.unit}:${item.metric}|${item.metricType}${maybeTags}|T${item.timestamp}\\n`;\n  }\n  return out;\n}\n\n/**\n * Sanitizes tags.\n */\nfunction sanitizeTags(unsanitizedTags) {\n  const tags = {};\n  for (const key in unsanitizedTags) {\n    if (Object.prototype.hasOwnProperty.call(unsanitizedTags, key)) {\n      const sanitizedKey = key.replace(NAME_AND_TAG_KEY_NORMALIZATION_REGEX, '_');\n      tags[sanitizedKey] = String(unsanitizedTags[key]).replace(TAG_VALUE_NORMALIZATION_REGEX, '');\n    }\n  }\n  return tags;\n}\n\nexport { getBucketKey, sanitizeTags, serializeMetricBuckets, simpleHash };\n//# sourceMappingURL=utils.js.map\n","import { dsnToString, createEnvelope } from '@sentry/utils';\nimport { serializeMetricBuckets } from './utils.js';\n\n/**\n * Create envelope from a metric aggregate.\n */\nfunction createMetricEnvelope(\n  metricBucketItems,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const headers = {\n    sent_at: new Date().toISOString(),\n  };\n\n  if (metadata && metadata.sdk) {\n    headers.sdk = {\n      name: metadata.sdk.name,\n      version: metadata.sdk.version,\n    };\n  }\n\n  if (!!tunnel && dsn) {\n    headers.dsn = dsnToString(dsn);\n  }\n\n  const item = createMetricEnvelopeItem(metricBucketItems);\n  return createEnvelope(headers, [item]);\n}\n\nfunction createMetricEnvelopeItem(metricBucketItems) {\n  const payload = serializeMetricBuckets(metricBucketItems);\n  const metricHeaders = {\n    type: 'statsd',\n    length: payload.length,\n  };\n  return [metricHeaders, payload];\n}\n\nexport { createMetricEnvelope };\n//# sourceMappingURL=envelope.js.map\n","import { makeDsn, logger, checkOrSetAlreadyCaught, isParameterizedString, isPrimitive, resolvedSyncPromise, addItemToEnvelope, createAttachmentEnvelopeItem, SyncPromise, rejectedSyncPromise, SentryError, isThenable, isPlainObject } from '@sentry/utils';\nimport { getEnvelopeEndpointWithUrlEncodedAuth } from './api.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { createEventEnvelope, createSessionEnvelope } from './envelope.js';\nimport { getClient } from './exports.js';\nimport { getIsolationScope } from './hub.js';\nimport { setupIntegration, afterSetupIntegrations, setupIntegrations } from './integration.js';\nimport { createMetricEnvelope } from './metrics/envelope.js';\nimport { updateSession } from './session.js';\nimport { getDynamicSamplingContextFromClient } from './tracing/dynamicSamplingContext.js';\nimport { prepareEvent } from './utils/prepareEvent.js';\n\nconst ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nclass BaseClient {\n  /**\n   * A reference to a metrics aggregator\n   *\n   * @experimental Note this is alpha API. It may experience breaking changes in the future.\n   */\n\n  /** Options passed to the SDK. */\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n\n  /** Array of set up integrations. */\n\n  /** Indicates whether this client's integrations have been set up. */\n\n  /** Number of calls being processed */\n\n  /** Holds flushable  */\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n   constructor(options) {\n    this._options = options;\n    this._integrations = {};\n    this._integrationsInitialized = false;\n    this._numProcessing = 0;\n    this._outcomes = {};\n    this._hooks = {};\n    this._eventProcessors = [];\n\n    if (options.dsn) {\n      this._dsn = makeDsn(options.dsn);\n    } else {\n      DEBUG_BUILD && logger.warn('No DSN provided, client will not send events.');\n    }\n\n    if (this._dsn) {\n      const url = getEnvelopeEndpointWithUrlEncodedAuth(this._dsn, options);\n      this._transport = options.transport({\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n   captureException(exception, hint, scope) {\n    // ensure we haven't captured this very object before\n    if (checkOrSetAlreadyCaught(exception)) {\n      DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    this._process(\n      this.eventFromException(exception, hint)\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n    hint,\n    scope,\n  ) {\n    let eventId = hint && hint.event_id;\n\n    const eventMessage = isParameterizedString(message) ? message : String(message);\n\n    const promisedEvent = isPrimitive(message)\n      ? this.eventFromMessage(eventMessage, level, hint)\n      : this.eventFromException(message, hint);\n\n    this._process(\n      promisedEvent\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint, scope) {\n    // ensure we haven't captured this very object before\n    if (hint && hint.originalException && checkOrSetAlreadyCaught(hint.originalException)) {\n      DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanScope = sdkProcessingMetadata.capturedSpanScope;\n\n    this._process(\n      this._captureEvent(event, hint, capturedSpanScope || scope).then(result => {\n        eventId = result;\n      }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(session) {\n    if (!(typeof session.release === 'string')) {\n      DEBUG_BUILD && logger.warn('Discarded session because of missing or non-string release');\n    } else {\n      this.sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      updateSession(session, { init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getDsn() {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getOptions() {\n    return this._options;\n  }\n\n  /**\n   * @see SdkMetadata in @sentry/types\n   *\n   * @return The metadata of the SDK\n   */\n   getSdkMetadata() {\n    return this._options._metadata;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransport() {\n    return this._transport;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   flush(timeout) {\n    const transport = this._transport;\n    if (transport) {\n      if (this.metricsAggregator) {\n        this.metricsAggregator.flush();\n      }\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return resolvedSyncPromise(true);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   close(timeout) {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      if (this.metricsAggregator) {\n        this.metricsAggregator.close();\n      }\n      return result;\n    });\n  }\n\n  /** Get all installed event processors. */\n   getEventProcessors() {\n    return this._eventProcessors;\n  }\n\n  /** @inheritDoc */\n   addEventProcessor(eventProcessor) {\n    this._eventProcessors.push(eventProcessor);\n  }\n\n  /**\n   * This is an internal function to setup all integrations that should run on the client.\n   * @deprecated Use `client.init()` instead.\n   */\n   setupIntegrations(forceInitialize) {\n    if ((forceInitialize && !this._integrationsInitialized) || (this._isEnabled() && !this._integrationsInitialized)) {\n      this._setupIntegrations();\n    }\n  }\n\n  /** @inheritdoc */\n   init() {\n    if (this._isEnabled()) {\n      this._setupIntegrations();\n    }\n  }\n\n  /**\n   * Gets an installed integration by its `id`.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `id` was installed.\n   * @deprecated Use `getIntegrationByName()` instead.\n   */\n   getIntegrationById(integrationId) {\n    return this.getIntegrationByName(integrationId);\n  }\n\n  /**\n   * Gets an installed integration by its name.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `name` was installed.\n   */\n   getIntegrationByName(integrationName) {\n    return this._integrations[integrationName] ;\n  }\n\n  /**\n   * Returns the client's instance of the given integration class, it any.\n   * @deprecated Use `getIntegrationByName()` instead.\n   */\n   getIntegration(integration) {\n    try {\n      return (this._integrations[integration.id] ) || null;\n    } catch (_oO) {\n      DEBUG_BUILD && logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addIntegration(integration) {\n    const isAlreadyInstalled = this._integrations[integration.name];\n\n    // This hook takes care of only installing if not already installed\n    setupIntegration(this, integration, this._integrations);\n    // Here we need to check manually to make sure to not run this multiple times\n    if (!isAlreadyInstalled) {\n      afterSetupIntegrations(this, [integration]);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendEvent(event, hint = {}) {\n    this.emit('beforeSendEvent', event, hint);\n\n    let env = createEventEnvelope(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n    for (const attachment of hint.attachments || []) {\n      env = addItemToEnvelope(\n        env,\n        createAttachmentEnvelopeItem(\n          attachment,\n          this._options.transportOptions && this._options.transportOptions.textEncoder,\n        ),\n      );\n    }\n\n    const promise = this._sendEnvelope(env);\n    if (promise) {\n      promise.then(sendResponse => this.emit('afterSendEvent', event, sendResponse), null);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendSession(session) {\n    const env = createSessionEnvelope(session, this._dsn, this._options._metadata, this._options.tunnel);\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(env);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   recordDroppedEvent(reason, category, _event) {\n    // Note: we use `event` in replay, where we overwrite this hook.\n\n    if (this._options.sendClientReports) {\n      // We want to track each category (error, transaction, session, replay_event) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      const key = `${reason}:${category}`;\n      DEBUG_BUILD && logger.log(`Adding outcome: \"${key}\"`);\n\n      // The following works because undefined + 1 === NaN and NaN is falsy\n      this._outcomes[key] = this._outcomes[key] + 1 || 1;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureAggregateMetrics(metricBucketItems) {\n    DEBUG_BUILD && logger.log(`Flushing aggregated metrics, number of metrics: ${metricBucketItems.length}`);\n    const metricsEnvelope = createMetricEnvelope(\n      metricBucketItems,\n      this._dsn,\n      this._options._metadata,\n      this._options.tunnel,\n    );\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(metricsEnvelope);\n  }\n\n  // Keep on() & emit() signatures in sync with types' client.ts interface\n  /* eslint-disable @typescript-eslint/unified-signatures */\n\n  /** @inheritdoc */\n\n  /** @inheritdoc */\n   on(hook, callback) {\n    if (!this._hooks[hook]) {\n      this._hooks[hook] = [];\n    }\n\n    // @ts-expect-error We assue the types are correct\n    this._hooks[hook].push(callback);\n  }\n\n  /** @inheritdoc */\n\n  /** @inheritdoc */\n   emit(hook, ...rest) {\n    if (this._hooks[hook]) {\n      this._hooks[hook].forEach(callback => callback(...rest));\n    }\n  }\n\n  /* eslint-enable @typescript-eslint/unified-signatures */\n\n  /** Setup integrations for this client. */\n   _setupIntegrations() {\n    const { integrations } = this._options;\n    this._integrations = setupIntegrations(this, integrations);\n    afterSetupIntegrations(this, integrations);\n\n    // TODO v8: We don't need this flag anymore\n    this._integrationsInitialized = true;\n  }\n\n  /** Updates existing session based on the provided event */\n   _updateSessionFromEvent(session, event) {\n    let crashed = false;\n    let errored = false;\n    const exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    const sessionNonTerminal = session.status === 'ok';\n    const shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      updateSession(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n   _isClientDoneProcessing(timeout) {\n    return new SyncPromise(resolve => {\n      let ticked = 0;\n      const tick = 1;\n\n      const interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a transport is present. */\n   _isEnabled() {\n    return this.getOptions().enabled !== false && this._transport !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n   _prepareEvent(\n    event,\n    hint,\n    scope,\n    isolationScope = getIsolationScope(),\n  ) {\n    const options = this.getOptions();\n    const integrations = Object.keys(this._integrations);\n    if (!hint.integrations && integrations.length > 0) {\n      hint.integrations = integrations;\n    }\n\n    this.emit('preprocessEvent', event, hint);\n\n    return prepareEvent(options, event, hint, scope, this, isolationScope).then(evt => {\n      if (evt === null) {\n        return evt;\n      }\n\n      const propagationContext = {\n        ...isolationScope.getPropagationContext(),\n        ...(scope ? scope.getPropagationContext() : undefined),\n      };\n\n      const trace = evt.contexts && evt.contexts.trace;\n      if (!trace && propagationContext) {\n        const { traceId: trace_id, spanId, parentSpanId, dsc } = propagationContext;\n        evt.contexts = {\n          trace: {\n            trace_id,\n            span_id: spanId,\n            parent_span_id: parentSpanId,\n          },\n          ...evt.contexts,\n        };\n\n        const dynamicSamplingContext = dsc ? dsc : getDynamicSamplingContextFromClient(trace_id, this, scope);\n\n        evt.sdkProcessingMetadata = {\n          dynamicSamplingContext,\n          ...evt.sdkProcessingMetadata,\n        };\n      }\n      return evt;\n    });\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n   _captureEvent(event, hint = {}, scope) {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        if (DEBUG_BUILD) {\n          // If something's gone wrong, log the error as a warning. If it's just us having used a `SentryError` for\n          // control flow, log just the message (no stack) as a log-level log.\n          const sentryError = reason ;\n          if (sentryError.logLevel === 'log') {\n            logger.log(sentryError.message);\n          } else {\n            logger.warn(sentryError);\n          }\n        }\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n   _processEvent(event, hint, scope) {\n    const options = this.getOptions();\n    const { sampleRate } = options;\n\n    const isTransaction = isTransactionEvent(event);\n    const isError = isErrorEvent(event);\n    const eventType = event.type || 'error';\n    const beforeSendLabel = `before send for type \\`${eventType}\\``;\n\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    if (isError && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error', event);\n      return rejectedSyncPromise(\n        new SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n          'log',\n        ),\n      );\n    }\n\n    const dataCategory = eventType === 'replay_event' ? 'replay' : eventType;\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanIsolationScope = sdkProcessingMetadata.capturedSpanIsolationScope;\n\n    return this._prepareEvent(event, hint, scope, capturedSpanIsolationScope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', dataCategory, event);\n          throw new SentryError('An event processor returned `null`, will not send event.', 'log');\n        }\n\n        const isInternalException = hint.data && (hint.data ).__sentry__ === true;\n        if (isInternalException) {\n          return prepared;\n        }\n\n        const result = processBeforeSend(options, prepared, hint);\n        return _validateBeforeSendResult(result, beforeSendLabel);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', dataCategory, event);\n          throw new SentryError(`${beforeSendLabel} returned \\`null\\`, will not send event.`, 'log');\n        }\n\n        const session = scope && scope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        // None of the Sentry built event processor will update transaction name,\n        // so if the transaction name has been changed by an event processor, we know\n        // it has to come from custom event processor added by a user\n        const transactionInfo = processedEvent.transaction_info;\n        if (isTransaction && transactionInfo && processedEvent.transaction !== event.transaction) {\n          const source = 'custom';\n          processedEvent.transaction_info = {\n            ...transactionInfo,\n            source,\n          };\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason,\n        });\n        throw new SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n   _process(promise) {\n    this._numProcessing++;\n    void promise.then(\n      value => {\n        this._numProcessing--;\n        return value;\n      },\n      reason => {\n        this._numProcessing--;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * @inheritdoc\n   */\n   _sendEnvelope(envelope) {\n    this.emit('beforeEnvelope', envelope);\n\n    if (this._isEnabled() && this._transport) {\n      return this._transport.send(envelope).then(null, reason => {\n        DEBUG_BUILD && logger.error('Error while sending event:', reason);\n      });\n    } else {\n      DEBUG_BUILD && logger.error('Transport disabled');\n    }\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n   _clearOutcomes() {\n    const outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.keys(outcomes).map(key => {\n      const [reason, category] = key.split(':') ;\n      return {\n        reason,\n        category,\n        quantity: outcomes[key],\n      };\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n\n}\n\n/**\n * Verifies that return value of configured `beforeSend` or `beforeSendTransaction` is of expected type, and returns the value if so.\n */\nfunction _validateBeforeSendResult(\n  beforeSendResult,\n  beforeSendLabel,\n) {\n  const invalidValueError = `${beforeSendLabel} must return \\`null\\` or a valid event.`;\n  if (isThenable(beforeSendResult)) {\n    return beforeSendResult.then(\n      event => {\n        if (!isPlainObject(event) && event !== null) {\n          throw new SentryError(invalidValueError);\n        }\n        return event;\n      },\n      e => {\n        throw new SentryError(`${beforeSendLabel} rejected with ${e}`);\n      },\n    );\n  } else if (!isPlainObject(beforeSendResult) && beforeSendResult !== null) {\n    throw new SentryError(invalidValueError);\n  }\n  return beforeSendResult;\n}\n\n/**\n * Process the matching `beforeSendXXX` callback.\n */\nfunction processBeforeSend(\n  options,\n  event,\n  hint,\n) {\n  const { beforeSend, beforeSendTransaction } = options;\n\n  if (isErrorEvent(event) && beforeSend) {\n    return beforeSend(event, hint);\n  }\n\n  if (isTransactionEvent(event) && beforeSendTransaction) {\n    return beforeSendTransaction(event, hint);\n  }\n\n  return event;\n}\n\nfunction isErrorEvent(event) {\n  return event.type === undefined;\n}\n\nfunction isTransactionEvent(event) {\n  return event.type === 'transaction';\n}\n\n/**\n * Add an event processor to the current client.\n * This event processor will run for all events processed by this client.\n */\nfunction addEventProcessor(callback) {\n  const client = getClient();\n\n  if (!client || !client.addEventProcessor) {\n    return;\n  }\n\n  client.addEventProcessor(callback);\n}\n\nexport { BaseClient, addEventProcessor };\n//# sourceMappingURL=baseclient.js.map\n","import { logger, consoleSandbox } from '@sentry/utils';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { getCurrentScope } from './exports.js';\nimport { getCurrentHub } from './hub.js';\n\n/** A class object that can instantiate Client objects. */\n\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\nfunction initAndBind(\n  clientClass,\n  options,\n) {\n  if (options.debug === true) {\n    if (DEBUG_BUILD) {\n      logger.enable();\n    } else {\n      // use `console.warn` rather than `logger.warn` since by non-debug bundles have all `logger.x` statements stripped\n      consoleSandbox(() => {\n        // eslint-disable-next-line no-console\n        console.warn('[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.');\n      });\n    }\n  }\n  const scope = getCurrentScope();\n  scope.update(options.initialScope);\n\n  const client = new clientClass(options);\n  setCurrentClient(client);\n  initializeClient(client);\n}\n\n/**\n * Make the given client the current client.\n */\nfunction setCurrentClient(client) {\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = getCurrentHub();\n  // eslint-disable-next-line deprecation/deprecation\n  const top = hub.getStackTop();\n  top.client = client;\n  top.scope.setClient(client);\n}\n\n/**\n * Initialize the client for the current scope.\n * Make sure to call this after `setCurrentClient()`.\n */\nfunction initializeClient(client) {\n  if (client.init) {\n    client.init();\n    // TODO v8: Remove this fallback\n    // eslint-disable-next-line deprecation/deprecation\n  } else if (client.setupIntegrations) {\n    // eslint-disable-next-line deprecation/deprecation\n    client.setupIntegrations();\n  }\n}\n\nexport { initAndBind, setCurrentClient };\n//# sourceMappingURL=sdk.js.map\n","import { makePromiseBuffer, forEachEnvelopeItem, envelopeItemTypeToDataCategory, isRateLimited, resolvedSyncPromise, createEnvelope, SentryError, logger, serializeEnvelope, updateRateLimits } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\n\nconst DEFAULT_TRANSPORT_BUFFER_SIZE = 30;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nfunction createTransport(\n  options,\n  makeRequest,\n  buffer = makePromiseBuffer(\n    options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE,\n  ),\n) {\n  let rateLimits = {};\n  const flush = (timeout) => buffer.drain(timeout);\n\n  function send(envelope) {\n    const filteredEnvelopeItems = [];\n\n    // Drop rate limited items from envelope\n    forEachEnvelopeItem(envelope, (item, type) => {\n      const envelopeItemDataCategory = envelopeItemTypeToDataCategory(type);\n      if (isRateLimited(rateLimits, envelopeItemDataCategory)) {\n        const event = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent('ratelimit_backoff', envelopeItemDataCategory, event);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return resolvedSyncPromise();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const filteredEnvelope = createEnvelope(envelope[0], filteredEnvelopeItems );\n\n    // Creates client report for each item in an envelope\n    const recordEnvelopeLoss = (reason) => {\n      forEachEnvelopeItem(filteredEnvelope, (item, type) => {\n        const event = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent(reason, envelopeItemTypeToDataCategory(type), event);\n      });\n    };\n\n    const requestTask = () =>\n      makeRequest({ body: serializeEnvelope(filteredEnvelope, options.textEncoder) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            DEBUG_BUILD && logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = updateRateLimits(rateLimits, response);\n          return response;\n        },\n        error => {\n          recordEnvelopeLoss('network_error');\n          throw error;\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error instanceof SentryError) {\n          DEBUG_BUILD && logger.error('Skipped sending event because buffer is full.');\n          recordEnvelopeLoss('queue_overflow');\n          return resolvedSyncPromise();\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  // We use this to identifify if the transport is the base transport\n  // TODO (v8): Remove this again as we'll no longer need it\n  send.__sentry__baseTransport__ = true;\n\n  return {\n    send,\n    flush,\n  };\n}\n\nfunction getEventForEnvelopeItem(item, type) {\n  if (type !== 'event' && type !== 'transaction') {\n    return undefined;\n  }\n\n  return Array.isArray(item) ? (item )[1] : undefined;\n}\n\nexport { DEFAULT_TRANSPORT_BUFFER_SIZE, createTransport };\n//# sourceMappingURL=base.js.map\n","import { SDK_VERSION } from '../version.js';\n\n/**\n * A builder for the SDK metadata in the options for the SDK initialization.\n *\n * Note: This function is identical to `buildMetadata` in Remix and NextJS and SvelteKit.\n * We don't extract it for bundle size reasons.\n * @see https://github.com/getsentry/sentry-javascript/pull/7404\n * @see https://github.com/getsentry/sentry-javascript/pull/4196\n *\n * If you make changes to this function consider updating the others as well.\n *\n * @param options SDK options object that gets mutated\n * @param names list of package names\n */\nfunction applySdkMetadata(options, name, names = [name], source = 'npm') {\n  const metadata = options._metadata || {};\n\n  if (!metadata.sdk) {\n    metadata.sdk = {\n      name: `sentry.javascript.${name}`,\n      packages: names.map(name => ({\n        name: `${source}:@sentry/${name}`,\n        version: SDK_VERSION,\n      })),\n      version: SDK_VERSION,\n    };\n  }\n\n  options._metadata = metadata;\n}\n\nexport { applySdkMetadata };\n//# sourceMappingURL=sdkMetadata.js.map\n","import { logger, getEventDescription, stringMatchesSomePattern } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { convertIntegrationFnToClass, defineIntegration } from '../integration.js';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n\nconst DEFAULT_IGNORE_TRANSACTIONS = [\n  /^.*\\/healthcheck$/,\n  /^.*\\/healthy$/,\n  /^.*\\/live$/,\n  /^.*\\/ready$/,\n  /^.*\\/heartbeat$/,\n  /^.*\\/health$/,\n  /^.*\\/healthz$/,\n];\n\n/** Options for the InboundFilters integration */\n\nconst INTEGRATION_NAME = 'InboundFilters';\nconst _inboundFiltersIntegration = ((options = {}) => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(event, _hint, client) {\n      const clientOptions = client.getOptions();\n      const mergedOptions = _mergeOptions(options, clientOptions);\n      return _shouldDropEvent(event, mergedOptions) ? null : event;\n    },\n  };\n}) ;\n\nconst inboundFiltersIntegration = defineIntegration(_inboundFiltersIntegration);\n\n/**\n * Inbound filters configurable by the user.\n * @deprecated Use `inboundFiltersIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst InboundFilters = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  inboundFiltersIntegration,\n)\n\n;\n\nfunction _mergeOptions(\n  internalOptions = {},\n  clientOptions = {},\n) {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...(internalOptions.disableErrorDefaults ? [] : DEFAULT_IGNORE_ERRORS),\n    ],\n    ignoreTransactions: [\n      ...(internalOptions.ignoreTransactions || []),\n      ...(clientOptions.ignoreTransactions || []),\n      ...(internalOptions.disableTransactionDefaults ? [] : DEFAULT_IGNORE_TRANSACTIONS),\n    ],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\nfunction _shouldDropEvent(event, options) {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    DEBUG_BUILD &&\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isIgnoredTransaction(event, options.ignoreTransactions)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreTransactions\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event, ignoreErrors) {\n  // If event.type, this is not an error\n  if (event.type || !ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message => stringMatchesSomePattern(message, ignoreErrors));\n}\n\nfunction _isIgnoredTransaction(event, ignoreTransactions) {\n  if (event.type !== 'transaction' || !ignoreTransactions || !ignoreTransactions.length) {\n    return false;\n  }\n\n  const name = event.transaction;\n  return name ? stringMatchesSomePattern(name, ignoreTransactions) : false;\n}\n\nfunction _isDeniedUrl(event, denyUrls) {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? false : stringMatchesSomePattern(url, denyUrls);\n}\n\nfunction _isAllowedUrl(event, allowUrls) {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? true : stringMatchesSomePattern(url, allowUrls);\n}\n\nfunction _getPossibleEventMessages(event) {\n  const possibleMessages = [];\n\n  if (event.message) {\n    possibleMessages.push(event.message);\n  }\n\n  let lastException;\n  try {\n    // @ts-expect-error Try catching to save bundle size\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    lastException = event.exception.values[event.exception.values.length - 1];\n  } catch (e) {\n    // try catching to save bundle size checking existence of variables\n  }\n\n  if (lastException) {\n    if (lastException.value) {\n      possibleMessages.push(lastException.value);\n      if (lastException.type) {\n        possibleMessages.push(`${lastException.type}: ${lastException.value}`);\n      }\n    }\n  }\n\n  if (DEBUG_BUILD && possibleMessages.length === 0) {\n    logger.error(`Could not extract message for event ${getEventDescription(event)}`);\n  }\n\n  return possibleMessages;\n}\n\nfunction _isSentryError(event) {\n  try {\n    // @ts-expect-error can't be a sentry error if undefined\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames = []) {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event) {\n  try {\n    let frames;\n    try {\n      // @ts-expect-error we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    DEBUG_BUILD && logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\n\nexport { InboundFilters, inboundFiltersIntegration };\n//# sourceMappingURL=inboundfilters.js.map\n","import { getOriginalFunction } from '@sentry/utils';\nimport { getClient } from '../exports.js';\nimport { convertIntegrationFnToClass, defineIntegration } from '../integration.js';\n\nlet originalFunctionToString;\n\nconst INTEGRATION_NAME = 'FunctionToString';\n\nconst SETUP_CLIENTS = new WeakMap();\n\nconst _functionToStringIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      originalFunctionToString = Function.prototype.toString;\n\n      // intrinsics (like Function.prototype) might be immutable in some environments\n      // e.g. Node with --frozen-intrinsics, XS (an embedded JavaScript engine) or SES (a JavaScript proposal)\n      try {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Function.prototype.toString = function ( ...args) {\n          const originalFunction = getOriginalFunction(this);\n          const context =\n            SETUP_CLIENTS.has(getClient() ) && originalFunction !== undefined ? originalFunction : this;\n          return originalFunctionToString.apply(context, args);\n        };\n      } catch (e) {\n        // ignore errors here, just don't patch this\n      }\n    },\n    setup(client) {\n      SETUP_CLIENTS.set(client, true);\n    },\n  };\n}) ;\n\n/**\n * Patch toString calls to return proper name for wrapped functions.\n *\n * ```js\n * Sentry.init({\n *   integrations: [\n *     functionToStringIntegration(),\n *   ],\n * });\n * ```\n */\nconst functionToStringIntegration = defineIntegration(_functionToStringIntegration);\n\n/**\n * Patch toString calls to return proper name for wrapped functions.\n *\n * @deprecated Use `functionToStringIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst FunctionToString = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  functionToStringIntegration,\n) ;\n\n// eslint-disable-next-line deprecation/deprecation\n\nexport { FunctionToString, functionToStringIntegration };\n//# sourceMappingURL=functiontostring.js.map\n","import { TRACING_DEFAULTS, addTracingExtensions, spanToJSON, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, getActiveSpan, getCurrentHub, startIdleTransaction, getActiveTransaction, getClient, getCurrentScope } from '@sentry/core';\nimport { logger, browserPerformanceTimeOrigin, addHistoryInstrumentationHandler, propagationContextFromHeaders, getDomElement } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../common/debug-build.js';\nimport { registerBackgroundTabDetection } from './backgroundtab.js';\nimport { addPerformanceInstrumentationHandler } from './instrument.js';\nimport { startTrackingWebVitals, startTrackingINP, startTrackingLongTasks, startTrackingInteractions, addPerformanceEntries } from './metrics/index.js';\nimport { defaultRequestInstrumentationOptions, instrumentOutgoingRequests } from './request.js';\nimport { WINDOW } from './types.js';\n\nconst BROWSER_TRACING_INTEGRATION_ID = 'BrowserTracing';\n\n/** Options for Browser Tracing integration */\n\nconst DEFAULT_BROWSER_TRACING_OPTIONS = {\n  ...TRACING_DEFAULTS,\n  instrumentNavigation: true,\n  instrumentPageLoad: true,\n  markBackgroundSpan: true,\n  enableLongTask: true,\n  enableInp: false,\n  _experiments: {},\n  ...defaultRequestInstrumentationOptions,\n};\n\n/**\n * The Browser Tracing integration automatically instruments browser pageload/navigation\n * actions as transactions, and captures requests, metrics and errors as spans.\n *\n * The integration can be configured with a variety of options, and can be extended to use\n * any routing library. This integration uses {@see IdleTransaction} to create transactions.\n *\n * We explicitly export the proper type here, as this has to be extended in some cases.\n */\nconst browserTracingIntegration = ((_options = {}) => {\n  const _hasSetTracePropagationTargets = DEBUG_BUILD\n    ? !!(\n        // eslint-disable-next-line deprecation/deprecation\n        (_options.tracePropagationTargets || _options.tracingOrigins)\n      )\n    : false;\n\n  addTracingExtensions();\n\n  // TODO (v8): remove this block after tracingOrigins is removed\n  // Set tracePropagationTargets to tracingOrigins if specified by the user\n  // In case both are specified, tracePropagationTargets takes precedence\n  // eslint-disable-next-line deprecation/deprecation\n  if (!_options.tracePropagationTargets && _options.tracingOrigins) {\n    // eslint-disable-next-line deprecation/deprecation\n    _options.tracePropagationTargets = _options.tracingOrigins;\n  }\n\n  const options = {\n    ...DEFAULT_BROWSER_TRACING_OPTIONS,\n    ..._options,\n  };\n\n  const _collectWebVitals = startTrackingWebVitals();\n\n  /** Stores a mapping of interactionIds from PerformanceEventTimings to the origin interaction path */\n  const interactionIdtoRouteNameMapping = {};\n  if (options.enableInp) {\n    startTrackingINP(interactionIdtoRouteNameMapping);\n  }\n\n  if (options.enableLongTask) {\n    startTrackingLongTasks();\n  }\n  if (options._experiments.enableInteractions) {\n    startTrackingInteractions();\n  }\n\n  const latestRoute\n\n = {\n    name: undefined,\n    context: undefined,\n  };\n\n  /** Create routing idle transaction. */\n  function _createRouteTransaction(context) {\n    // eslint-disable-next-line deprecation/deprecation\n    const hub = getCurrentHub();\n\n    const { beforeStartSpan, idleTimeout, finalTimeout, heartbeatInterval } = options;\n\n    const isPageloadTransaction = context.op === 'pageload';\n\n    let expandedContext;\n    if (isPageloadTransaction) {\n      const sentryTrace = isPageloadTransaction ? getMetaContent('sentry-trace') : '';\n      const baggage = isPageloadTransaction ? getMetaContent('baggage') : undefined;\n      const { traceId, dsc, parentSpanId, sampled } = propagationContextFromHeaders(sentryTrace, baggage);\n      expandedContext = {\n        traceId,\n        parentSpanId,\n        parentSampled: sampled,\n        ...context,\n        metadata: {\n          // eslint-disable-next-line deprecation/deprecation\n          ...context.metadata,\n          dynamicSamplingContext: dsc,\n        },\n        trimEnd: true,\n      };\n    } else {\n      expandedContext = {\n        trimEnd: true,\n        ...context,\n      };\n    }\n\n    const finalContext = beforeStartSpan ? beforeStartSpan(expandedContext) : expandedContext;\n\n    // If `beforeStartSpan` set a custom name, record that fact\n    // eslint-disable-next-line deprecation/deprecation\n    finalContext.metadata =\n      finalContext.name !== expandedContext.name\n        ? // eslint-disable-next-line deprecation/deprecation\n          { ...finalContext.metadata, source: 'custom' }\n        : // eslint-disable-next-line deprecation/deprecation\n          finalContext.metadata;\n\n    latestRoute.name = finalContext.name;\n    latestRoute.context = finalContext;\n\n    if (finalContext.sampled === false) {\n      DEBUG_BUILD && logger.log(`[Tracing] Will not send ${finalContext.op} transaction because of beforeNavigate.`);\n    }\n\n    DEBUG_BUILD && logger.log(`[Tracing] Starting ${finalContext.op} transaction on scope`);\n\n    const { location } = WINDOW;\n\n    const idleTransaction = startIdleTransaction(\n      hub,\n      finalContext,\n      idleTimeout,\n      finalTimeout,\n      true,\n      { location }, // for use in the tracesSampler\n      heartbeatInterval,\n      isPageloadTransaction, // should wait for finish signal if it's a pageload transaction\n    );\n\n    if (isPageloadTransaction && WINDOW.document) {\n      WINDOW.document.addEventListener('readystatechange', () => {\n        if (['interactive', 'complete'].includes(WINDOW.document.readyState)) {\n          idleTransaction.sendAutoFinishSignal();\n        }\n      });\n\n      if (['interactive', 'complete'].includes(WINDOW.document.readyState)) {\n        idleTransaction.sendAutoFinishSignal();\n      }\n    }\n\n    idleTransaction.registerBeforeFinishCallback(transaction => {\n      _collectWebVitals();\n      addPerformanceEntries(transaction);\n    });\n\n    return idleTransaction ;\n  }\n\n  return {\n    name: BROWSER_TRACING_INTEGRATION_ID,\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    setupOnce: () => {},\n    afterAllSetup(client) {\n      const clientOptions = client.getOptions();\n\n      const { markBackgroundSpan, traceFetch, traceXHR, shouldCreateSpanForRequest, enableHTTPTimings, _experiments } =\n        options;\n\n      const clientOptionsTracePropagationTargets = clientOptions && clientOptions.tracePropagationTargets;\n      // There are three ways to configure tracePropagationTargets:\n      // 1. via top level client option `tracePropagationTargets`\n      // 2. via BrowserTracing option `tracePropagationTargets`\n      // 3. via BrowserTracing option `tracingOrigins` (deprecated)\n      //\n      // To avoid confusion, favour top level client option `tracePropagationTargets`, and fallback to\n      // BrowserTracing option `tracePropagationTargets` and then `tracingOrigins` (deprecated).\n      // This is done as it minimizes bundle size (we don't have to have undefined checks).\n      //\n      // If both 1 and either one of 2 or 3 are set (from above), we log out a warning.\n      // eslint-disable-next-line deprecation/deprecation\n      const tracePropagationTargets = clientOptionsTracePropagationTargets || options.tracePropagationTargets;\n      if (DEBUG_BUILD && _hasSetTracePropagationTargets && clientOptionsTracePropagationTargets) {\n        logger.warn(\n          '[Tracing] The `tracePropagationTargets` option was set in the BrowserTracing integration and top level `Sentry.init`. The top level `Sentry.init` value is being used.',\n        );\n      }\n\n      let activeSpan;\n      let startingUrl = WINDOW.location && WINDOW.location.href;\n\n      if (client.on) {\n        client.on('startNavigationSpan', (context) => {\n          if (activeSpan) {\n            DEBUG_BUILD && logger.log(`[Tracing] Finishing current transaction with op: ${spanToJSON(activeSpan).op}`);\n            // If there's an open transaction on the scope, we need to finish it before creating an new one.\n            activeSpan.end();\n          }\n          activeSpan = _createRouteTransaction({\n            op: 'navigation',\n            ...context,\n          });\n        });\n\n        client.on('startPageLoadSpan', (context) => {\n          if (activeSpan) {\n            DEBUG_BUILD && logger.log(`[Tracing] Finishing current transaction with op: ${spanToJSON(activeSpan).op}`);\n            // If there's an open transaction on the scope, we need to finish it before creating an new one.\n            activeSpan.end();\n          }\n          activeSpan = _createRouteTransaction({\n            op: 'pageload',\n            ...context,\n          });\n        });\n      }\n\n      if (options.instrumentPageLoad && client.emit && WINDOW.location) {\n        const context = {\n          name: WINDOW.location.pathname,\n          // pageload should always start at timeOrigin (and needs to be in s, not ms)\n          startTimestamp: browserPerformanceTimeOrigin ? browserPerformanceTimeOrigin / 1000 : undefined,\n          origin: 'auto.pageload.browser',\n          attributes: {\n            [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n          },\n        };\n        startBrowserTracingPageLoadSpan(client, context);\n      }\n\n      if (options.instrumentNavigation && client.emit && WINDOW.location) {\n        addHistoryInstrumentationHandler(({ to, from }) => {\n          /**\n           * This early return is there to account for some cases where a navigation transaction starts right after\n           * long-running pageload. We make sure that if `from` is undefined and a valid `startingURL` exists, we don't\n           * create an uneccessary navigation transaction.\n           *\n           * This was hard to duplicate, but this behavior stopped as soon as this fix was applied. This issue might also\n           * only be caused in certain development environments where the usage of a hot module reloader is causing\n           * errors.\n           */\n          if (from === undefined && startingUrl && startingUrl.indexOf(to) !== -1) {\n            startingUrl = undefined;\n            return;\n          }\n\n          if (from !== to) {\n            startingUrl = undefined;\n            const context = {\n              name: WINDOW.location.pathname,\n              origin: 'auto.navigation.browser',\n              attributes: {\n                [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n              },\n            };\n\n            startBrowserTracingNavigationSpan(client, context);\n          }\n        });\n      }\n\n      if (markBackgroundSpan) {\n        registerBackgroundTabDetection();\n      }\n\n      if (_experiments.enableInteractions) {\n        registerInteractionListener(options, latestRoute);\n      }\n\n      if (options.enableInp) {\n        registerInpInteractionListener(interactionIdtoRouteNameMapping, latestRoute);\n      }\n\n      instrumentOutgoingRequests({\n        traceFetch,\n        traceXHR,\n        tracePropagationTargets,\n        shouldCreateSpanForRequest,\n        enableHTTPTimings,\n      });\n    },\n    // TODO v8: Remove this again\n    // This is private API that we use to fix converted BrowserTracing integrations in Next.js & SvelteKit\n    options,\n  };\n}) ;\n\n/**\n * Manually start a page load span.\n * This will only do something if the BrowserTracing integration has been setup.\n */\nfunction startBrowserTracingPageLoadSpan(client, spanOptions) {\n  if (!client.emit) {\n    return;\n  }\n\n  client.emit('startPageLoadSpan', spanOptions);\n\n  const span = getActiveSpan();\n  const op = span && spanToJSON(span).op;\n  return op === 'pageload' ? span : undefined;\n}\n\n/**\n * Manually start a navigation span.\n * This will only do something if the BrowserTracing integration has been setup.\n */\nfunction startBrowserTracingNavigationSpan(client, spanOptions) {\n  if (!client.emit) {\n    return;\n  }\n\n  client.emit('startNavigationSpan', spanOptions);\n\n  const span = getActiveSpan();\n  const op = span && spanToJSON(span).op;\n  return op === 'navigation' ? span : undefined;\n}\n\n/** Returns the value of a meta tag */\nfunction getMetaContent(metaName) {\n  // Can't specify generic to `getDomElement` because tracing can be used\n  // in a variety of environments, have to disable `no-unsafe-member-access`\n  // as a result.\n  const metaTag = getDomElement(`meta[name=${metaName}]`);\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return metaTag ? metaTag.getAttribute('content') : undefined;\n}\n\n/** Start listener for interaction transactions */\nfunction registerInteractionListener(\n  options,\n  latestRoute\n\n,\n) {\n  let inflightInteractionTransaction;\n  const registerInteractionTransaction = () => {\n    const { idleTimeout, finalTimeout, heartbeatInterval } = options;\n    const op = 'ui.action.click';\n\n    // eslint-disable-next-line deprecation/deprecation\n    const currentTransaction = getActiveTransaction();\n    if (currentTransaction && currentTransaction.op && ['navigation', 'pageload'].includes(currentTransaction.op)) {\n      DEBUG_BUILD &&\n        logger.warn(\n          `[Tracing] Did not create ${op} transaction because a pageload or navigation transaction is in progress.`,\n        );\n      return undefined;\n    }\n\n    if (inflightInteractionTransaction) {\n      inflightInteractionTransaction.setFinishReason('interactionInterrupted');\n      inflightInteractionTransaction.end();\n      inflightInteractionTransaction = undefined;\n    }\n\n    if (!latestRoute.name) {\n      DEBUG_BUILD && logger.warn(`[Tracing] Did not create ${op} transaction because _latestRouteName is missing.`);\n      return undefined;\n    }\n\n    const { location } = WINDOW;\n\n    const context = {\n      name: latestRoute.name,\n      op,\n      trimEnd: true,\n      data: {\n        [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: latestRoute.context ? getSource(latestRoute.context) : 'url',\n      },\n    };\n\n    inflightInteractionTransaction = startIdleTransaction(\n      // eslint-disable-next-line deprecation/deprecation\n      getCurrentHub(),\n      context,\n      idleTimeout,\n      finalTimeout,\n      true,\n      { location }, // for use in the tracesSampler\n      heartbeatInterval,\n    );\n  };\n\n  ['click'].forEach(type => {\n    addEventListener(type, registerInteractionTransaction, { once: false, capture: true });\n  });\n}\n\nfunction isPerformanceEventTiming(entry) {\n  return 'duration' in entry;\n}\n\n/** We store up to 10 interaction candidates max to cap memory usage. This is the same cap as getINP from web-vitals */\nconst MAX_INTERACTIONS = 10;\n\n/** Creates a listener on interaction entries, and maps interactionIds to the origin path of the interaction */\nfunction registerInpInteractionListener(\n  interactionIdtoRouteNameMapping,\n  latestRoute\n\n,\n) {\n  addPerformanceInstrumentationHandler('event', ({ entries }) => {\n    const client = getClient();\n    // We need to get the replay, user, and activeTransaction from the current scope\n    // so that we can associate replay id, profile id, and a user display to the span\n    const replay =\n      client !== undefined && client.getIntegrationByName !== undefined\n        ? (client.getIntegrationByName('Replay') )\n        : undefined;\n    const replayId = replay !== undefined ? replay.getReplayId() : undefined;\n    // eslint-disable-next-line deprecation/deprecation\n    const activeTransaction = getActiveTransaction();\n    const currentScope = getCurrentScope();\n    const user = currentScope !== undefined ? currentScope.getUser() : undefined;\n    for (const entry of entries) {\n      if (isPerformanceEventTiming(entry)) {\n        const duration = entry.duration;\n        const keys = Object.keys(interactionIdtoRouteNameMapping);\n        const minInteractionId =\n          keys.length > 0\n            ? keys.reduce((a, b) => {\n                return interactionIdtoRouteNameMapping[a].duration < interactionIdtoRouteNameMapping[b].duration\n                  ? a\n                  : b;\n              })\n            : undefined;\n        if (minInteractionId === undefined || duration > interactionIdtoRouteNameMapping[minInteractionId].duration) {\n          const interactionId = entry.interactionId;\n          const routeName = latestRoute.name;\n          const parentContext = latestRoute.context;\n          if (interactionId && routeName && parentContext) {\n            if (minInteractionId && Object.keys(interactionIdtoRouteNameMapping).length >= MAX_INTERACTIONS) {\n              // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n              delete interactionIdtoRouteNameMapping[minInteractionId];\n            }\n            interactionIdtoRouteNameMapping[interactionId] = {\n              routeName,\n              duration,\n              parentContext,\n              user,\n              activeTransaction,\n              replayId,\n            };\n          }\n        }\n      }\n    }\n  });\n}\n\nfunction getSource(context) {\n  const sourceFromAttributes = context.attributes && context.attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n  // eslint-disable-next-line deprecation/deprecation\n  const sourceFromData = context.data && context.data[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n  // eslint-disable-next-line deprecation/deprecation\n  const sourceFromMetadata = context.metadata && context.metadata.source;\n\n  return sourceFromAttributes || sourceFromData || sourceFromMetadata;\n}\n\nexport { BROWSER_TRACING_INTEGRATION_ID, browserTracingIntegration, getMetaContent, startBrowserTracingNavigationSpan, startBrowserTracingPageLoadSpan };\n//# sourceMappingURL=browserTracingIntegration.js.map\n","import '@sentry-internal/tracing';\nimport { withScope, captureException } from '@sentry/core';\nimport { GLOBAL_OBJ, getOriginalFunction, markFunctionWrapped, addNonEnumerableProperty, addExceptionTypeValue, addExceptionMechanism } from '@sentry/utils';\n\nconst WINDOW = GLOBAL_OBJ ;\n\nlet ignoreOnError = 0;\n\n/**\n * @hidden\n */\nfunction shouldIgnoreOnError() {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nfunction ignoreNextOnError() {\n  // onerror should trigger before setTimeout\n  ignoreOnError++;\n  setTimeout(() => {\n    ignoreOnError--;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nfunction wrap(\n  fn,\n  options\n\n = {},\n  before,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    const wrapper = fn.__sentry_wrapped__;\n    if (wrapper) {\n      return wrapper;\n    }\n\n    // We don't wanna wrap it twice\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  /* eslint-disable prefer-rest-params */\n  // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  const sentryWrapped = function () {\n    const args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      const wrappedArguments = args.map((arg) => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope(scope => {\n        scope.addEventProcessor(event => {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  };\n  /* eslint-enable prefer-rest-params */\n\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // eslint-disable-line no-empty\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  markFunctionWrapped(sentryWrapped, fn);\n\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') ;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get() {\n          return fn.name;\n        },\n      });\n    }\n    // eslint-disable-next-line no-empty\n  } catch (_oO) {}\n\n  return sentryWrapped;\n}\n\nexport { WINDOW, ignoreNextOnError, shouldIgnoreOnError, wrap };\n//# sourceMappingURL=helpers.js.map\n","/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nexport { DEBUG_BUILD };\n//# sourceMappingURL=debug-build.js.map\n","import { getClient } from '@sentry/core';\nimport { addExceptionMechanism, resolvedSyncPromise, isErrorEvent, isDOMError, isDOMException, addExceptionTypeValue, isError, isPlainObject, isEvent, isParameterizedString, normalizeToSize, extractExceptionKeysForMessage } from '@sentry/utils';\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nfunction exceptionFromError(stackParser, ex) {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  const frames = parseStackFrames(stackParser, ex);\n\n  const exception = {\n    type: ex && ex.name,\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\n/**\n * @hidden\n */\nfunction eventFromPlainObject(\n  stackParser,\n  exception,\n  syntheticException,\n  isUnhandledRejection,\n) {\n  const client = getClient();\n  const normalizeDepth = client && client.getOptions().normalizeDepth;\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: getNonErrorObjectExceptionValue(exception, { isUnhandledRejection }),\n        },\n      ],\n    },\n    extra: {\n      __serialized__: normalizeToSize(exception, normalizeDepth),\n    },\n  };\n\n  if (syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      (event.exception ).values[0].stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\n/**\n * @hidden\n */\nfunction eventFromError(stackParser, ex) {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nfunction parseStackFrames(\n  stackParser,\n  ex,\n) {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace || ex.stack || '';\n\n  const popSize = getPopSize(ex);\n\n  try {\n    return stackParser(stacktrace, popSize);\n  } catch (e) {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nconst reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\nfunction getPopSize(ex) {\n  if (ex) {\n    if (typeof ex.framesToPop === 'number') {\n      return ex.framesToPop;\n    }\n\n    if (reactMinifiedRegexp.test(ex.message)) {\n      return 1;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex) {\n  const message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nfunction eventFromException(\n  stackParser,\n  exception,\n  hint,\n  attachStacktrace,\n) {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  addExceptionMechanism(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nfunction eventFromMessage(\n  stackParser,\n  message,\n  // eslint-disable-next-line deprecation/deprecation\n  level = 'info',\n  hint,\n  attachStacktrace,\n) {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * @hidden\n */\nfunction eventFromUnknownInput(\n  stackParser,\n  exception,\n  syntheticException,\n  attachStacktrace,\n  isUnhandledRejection,\n) {\n  let event;\n\n  if (isErrorEvent(exception ) && (exception ).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception ;\n    return eventFromError(stackParser, errorEvent.error );\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if (isDOMError(exception) || isDOMException(exception )) {\n    const domException = exception ;\n\n    if ('stack' in (exception )) {\n      event = eventFromError(stackParser, exception );\n    } else {\n      const name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n      const message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      addExceptionTypeValue(event, message);\n    }\n    if ('code' in domException) {\n      // eslint-disable-next-line deprecation/deprecation\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    const objectException = exception ;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception , syntheticException, attachStacktrace);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\n/**\n * @hidden\n */\nfunction eventFromString(\n  stackParser,\n  message,\n  syntheticException,\n  attachStacktrace,\n) {\n  const event = {};\n\n  if (attachStacktrace && syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: message, stacktrace: { frames } }],\n      };\n    }\n  }\n\n  if (isParameterizedString(message)) {\n    const { __sentry_template_string__, __sentry_template_values__ } = message;\n\n    event.logentry = {\n      message: __sentry_template_string__,\n      params: __sentry_template_values__,\n    };\n    return event;\n  }\n\n  event.message = message;\n  return event;\n}\n\nfunction getNonErrorObjectExceptionValue(\n  exception,\n  { isUnhandledRejection },\n) {\n  const keys = extractExceptionKeysForMessage(exception);\n  const captureType = isUnhandledRejection ? 'promise rejection' : 'exception';\n\n  // Some ErrorEvent instances do not have an `error` property, which is why they are not handled before\n  // We still want to try to get a decent message for these cases\n  if (isErrorEvent(exception)) {\n    return `Event \\`ErrorEvent\\` captured as ${captureType} with message \\`${exception.message}\\``;\n  }\n\n  if (isEvent(exception)) {\n    const className = getObjectClassName(exception);\n    return `Event \\`${className}\\` (type=${exception.type}) captured as ${captureType}`;\n  }\n\n  return `Object captured as ${captureType} with keys: ${keys}`;\n}\n\nfunction getObjectClassName(obj) {\n  try {\n    const prototype = Object.getPrototypeOf(obj);\n    return prototype ? prototype.constructor.name : undefined;\n  } catch (e) {\n    // ignore errors here\n  }\n}\n\nexport { eventFromError, eventFromException, eventFromMessage, eventFromPlainObject, eventFromString, eventFromUnknownInput, exceptionFromError, parseStackFrames };\n//# sourceMappingURL=eventbuilder.js.map\n","import { dsnToString, createEnvelope } from '@sentry/utils';\n\n/**\n * Creates an envelope from a user feedback.\n */\nfunction createUserFeedbackEnvelope(\n  feedback,\n  {\n    metadata,\n    tunnel,\n    dsn,\n  }\n\n,\n) {\n  const headers = {\n    event_id: feedback.event_id,\n    sent_at: new Date().toISOString(),\n    ...(metadata &&\n      metadata.sdk && {\n        sdk: {\n          name: metadata.sdk.name,\n          version: metadata.sdk.version,\n        },\n      }),\n    ...(!!tunnel && !!dsn && { dsn: dsnToString(dsn) }),\n  };\n  const item = createUserFeedbackEnvelopeItem(feedback);\n\n  return createEnvelope(headers, [item]);\n}\n\nfunction createUserFeedbackEnvelopeItem(feedback) {\n  const feedbackHeaders = {\n    type: 'user_report',\n  };\n  return [feedbackHeaders, feedback];\n}\n\nexport { createUserFeedbackEnvelope };\n//# sourceMappingURL=userfeedback.js.map\n","import { BaseClient, applySdkMetadata } from '@sentry/core';\nimport { getSDKSource, logger, createClientReportEnvelope, dsnToString } from '@sentry/utils';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { eventFromException, eventFromMessage } from './eventbuilder.js';\nimport { WINDOW } from './helpers.js';\nimport { createUserFeedbackEnvelope } from './userfeedback.js';\n\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see @sentry/types Options for more information.\n */\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nclass BrowserClient extends BaseClient {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n   constructor(options) {\n    const sdkSource = WINDOW.SENTRY_SDK_SOURCE || getSDKSource();\n    applySdkMetadata(options, 'browser', ['browser'], sdkSource);\n\n    super(options);\n\n    if (options.sendClientReports && WINDOW.document) {\n      WINDOW.document.addEventListener('visibilitychange', () => {\n        if (WINDOW.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n        }\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromException(exception, hint) {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level = 'info',\n    hint,\n  ) {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * Sends user feedback to Sentry.\n   */\n   captureUserFeedback(feedback) {\n    if (!this._isEnabled()) {\n      DEBUG_BUILD && logger.warn('SDK not enabled, will not capture user feedback.');\n      return;\n    }\n\n    const envelope = createUserFeedbackEnvelope(feedback, {\n      metadata: this.getSdkMetadata(),\n      dsn: this.getDsn(),\n      tunnel: this.getOptions().tunnel,\n    });\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(envelope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   _prepareEvent(event, hint, scope) {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, hint, scope);\n  }\n\n  /**\n   * Sends client reports as an envelope.\n   */\n   _flushOutcomes() {\n    const outcomes = this._clearOutcomes();\n\n    if (outcomes.length === 0) {\n      DEBUG_BUILD && logger.log('No outcomes to send');\n      return;\n    }\n\n    // This is really the only place where we want to check for a DSN and only send outcomes then\n    if (!this._dsn) {\n      DEBUG_BUILD && logger.log('No dsn provided, will not send outcomes');\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('Sending outcomes:', outcomes);\n\n    const envelope = createClientReportEnvelope(outcomes, this._options.tunnel && dsnToString(this._dsn));\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(envelope);\n  }\n}\n\nexport { BrowserClient };\n//# sourceMappingURL=client.js.map\n","import { isNativeFetch, logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { WINDOW } from '../helpers.js';\n\nlet cachedFetchImpl = undefined;\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * const f = window.fetch;\n * window.fetch = function () {\n *   const p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nfunction getNativeFetchImplementation() {\n  if (cachedFetchImpl) {\n    return cachedFetchImpl;\n  }\n\n  /* eslint-disable @typescript-eslint/unbound-method */\n\n  // Fast path to avoid DOM I/O\n  if (isNativeFetch(WINDOW.fetch)) {\n    return (cachedFetchImpl = WINDOW.fetch.bind(WINDOW));\n  }\n\n  const document = WINDOW.document;\n  let fetchImpl = WINDOW.fetch;\n  // eslint-disable-next-line deprecation/deprecation\n  if (document && typeof document.createElement === 'function') {\n    try {\n      const sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      const contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow.fetch) {\n        fetchImpl = contentWindow.fetch;\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      DEBUG_BUILD && logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', e);\n    }\n  }\n\n  return (cachedFetchImpl = fetchImpl.bind(WINDOW));\n  /* eslint-enable @typescript-eslint/unbound-method */\n}\n\n/** Clears cached fetch impl */\nfunction clearCachedFetchImplementation() {\n  cachedFetchImpl = undefined;\n}\n\nexport { clearCachedFetchImplementation, getNativeFetchImplementation };\n//# sourceMappingURL=utils.js.map\n","import { createTransport } from '@sentry/core';\nimport { rejectedSyncPromise } from '@sentry/utils';\nimport { getNativeFetchImplementation, clearCachedFetchImplementation } from './utils.js';\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nfunction makeFetchTransport(\n  options,\n  nativeFetch = getNativeFetchImplementation(),\n) {\n  let pendingBodySize = 0;\n  let pendingCount = 0;\n\n  function makeRequest(request) {\n    const requestSize = request.body.length;\n    pendingBodySize += requestSize;\n    pendingCount++;\n\n    const requestOptions = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'origin',\n      headers: options.headers,\n      // Outgoing requests are usually cancelled when navigating to a different page, causing a \"TypeError: Failed to\n      // fetch\" error and sending a \"network_error\" client-outcome - in Chrome, the request status shows \"(cancelled)\".\n      // The `keepalive` flag keeps outgoing requests alive, even when switching pages. We want this since we're\n      // frequently sending events right before the user is switching pages (eg. whenfinishing navigation transactions).\n      // Gotchas:\n      // - `keepalive` isn't supported by Firefox\n      // - As per spec (https://fetch.spec.whatwg.org/#http-network-or-cache-fetch):\n      //   If the sum of contentLength and inflightKeepaliveBytes is greater than 64 kibibytes, then return a network error.\n      //   We will therefore only activate the flag when we're below that limit.\n      // There is also a limit of requests that can be open at the same time, so we also limit this to 15\n      // See https://github.com/getsentry/sentry-javascript/pull/7553 for details\n      keepalive: pendingBodySize <= 60000 && pendingCount < 15,\n      ...options.fetchOptions,\n    };\n\n    try {\n      return nativeFetch(options.url, requestOptions).then(response => {\n        pendingBodySize -= requestSize;\n        pendingCount--;\n        return {\n          statusCode: response.status,\n          headers: {\n            'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n            'retry-after': response.headers.get('Retry-After'),\n          },\n        };\n      });\n    } catch (e) {\n      clearCachedFetchImplementation();\n      pendingBodySize -= requestSize;\n      pendingCount--;\n      return rejectedSyncPromise(e);\n    }\n  }\n\n  return createTransport(options, makeRequest);\n}\n\nexport { makeFetchTransport };\n//# sourceMappingURL=fetch.js.map\n","import { createTransport } from '@sentry/core';\nimport { SyncPromise } from '@sentry/utils';\n\n/**\n * The DONE ready state for XmlHttpRequest\n *\n * Defining it here as a constant b/c XMLHttpRequest.DONE is not always defined\n * (e.g. during testing, it is `undefined`)\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState}\n */\nconst XHR_READYSTATE_DONE = 4;\n\n/**\n * Creates a Transport that uses the XMLHttpRequest API to send events to Sentry.\n */\nfunction makeXHRTransport(options) {\n  function makeRequest(request) {\n    return new SyncPromise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n\n      xhr.onerror = reject;\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === XHR_READYSTATE_DONE) {\n          resolve({\n            statusCode: xhr.status,\n            headers: {\n              'x-sentry-rate-limits': xhr.getResponseHeader('X-Sentry-Rate-Limits'),\n              'retry-after': xhr.getResponseHeader('Retry-After'),\n            },\n          });\n        }\n      };\n\n      xhr.open('POST', options.url);\n\n      for (const header in options.headers) {\n        if (Object.prototype.hasOwnProperty.call(options.headers, header)) {\n          xhr.setRequestHeader(header, options.headers[header]);\n        }\n      }\n\n      xhr.send(request.body);\n    });\n  }\n\n  return createTransport(options, makeRequest);\n}\n\nexport { makeXHRTransport };\n//# sourceMappingURL=xhr.js.map\n","import { createStackParser } from '@sentry/utils';\n\n// global reference to slice\nconst UNKNOWN_FUNCTION = '?';\n\nconst OPERA10_PRIORITY = 10;\nconst OPERA11_PRIORITY = 20;\nconst CHROME_PRIORITY = 30;\nconst WINJS_PRIORITY = 40;\nconst GECKO_PRIORITY = 50;\n\nfunction createFrame(filename, func, lineno, colno) {\n  const frame = {\n    filename,\n    function: func,\n    in_app: true, // All browser frames are considered in_app\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nconst chromeRegex =\n  /^\\s*at (?:(.+?\\)(?: \\[.+\\])?|.*?) ?\\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\\/)?.*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nconst chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\nconst chrome = line => {\n  const parts = chromeRegex.exec(line);\n\n  if (parts) {\n    const isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      const subMatch = chromeEvalRegex.exec(parts[2]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nconst chromeStackLineParser = [CHROME_PRIORITY, chrome];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:[-a-z]+)?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nconst gecko = line => {\n  const parts = geckoREgex.exec(line);\n\n  if (parts) {\n    const isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      const subMatch = geckoEvalRegex.exec(parts[3]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nconst geckoStackLineParser = [GECKO_PRIORITY, gecko];\n\nconst winjsRegex = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:[-a-z]+):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nconst winjs = line => {\n  const parts = winjsRegex.exec(line);\n\n  return parts\n    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nconst winjsStackLineParser = [WINJS_PRIORITY, winjs];\n\nconst opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nconst opera10 = line => {\n  const parts = opera10Regex.exec(line);\n  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nconst opera10StackLineParser = [OPERA10_PRIORITY, opera10];\n\nconst opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nconst opera11 = line => {\n  const parts = opera11Regex.exec(line);\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nconst opera11StackLineParser = [OPERA11_PRIORITY, opera11];\n\nconst defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser, winjsStackLineParser];\n\nconst defaultStackParser = createStackParser(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nconst extractSafariExtensionDetails = (func, filename) => {\n  const isSafariExtension = func.indexOf('safari-extension') !== -1;\n  const isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? func.split('@')[0] : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n\nexport { chromeStackLineParser, defaultStackLineParsers, defaultStackParser, geckoStackLineParser, opera10StackLineParser, opera11StackLineParser, winjsStackLineParser };\n//# sourceMappingURL=stack-parsers.js.map\n","import { defineIntegration, convertIntegrationFnToClass, getClient, addBreadcrumb } from '@sentry/core';\nimport { addConsoleInstrumentationHandler, addClickKeypressInstrumentationHandler, addXhrInstrumentationHandler, addFetchInstrumentationHandler, addHistoryInstrumentationHandler, getEventDescription, logger, htmlTreeAsString, getComponentName, severityLevelFromString, safeJoin, SENTRY_XHR_DATA_KEY, parseUrl } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { WINDOW } from '../helpers.js';\n\n/* eslint-disable max-lines */\n\n/** maxStringLength gets capped to prevent 100 breadcrumbs exceeding 1MB event payload size */\nconst MAX_ALLOWED_STRING_LENGTH = 1024;\n\nconst INTEGRATION_NAME = 'Breadcrumbs';\n\nconst _breadcrumbsIntegration = ((options = {}) => {\n  const _options = {\n    console: true,\n    dom: true,\n    fetch: true,\n    history: true,\n    sentry: true,\n    xhr: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      if (_options.console) {\n        addConsoleInstrumentationHandler(_getConsoleBreadcrumbHandler(client));\n      }\n      if (_options.dom) {\n        addClickKeypressInstrumentationHandler(_getDomBreadcrumbHandler(client, _options.dom));\n      }\n      if (_options.xhr) {\n        addXhrInstrumentationHandler(_getXhrBreadcrumbHandler(client));\n      }\n      if (_options.fetch) {\n        addFetchInstrumentationHandler(_getFetchBreadcrumbHandler(client));\n      }\n      if (_options.history) {\n        addHistoryInstrumentationHandler(_getHistoryBreadcrumbHandler(client));\n      }\n      if (_options.sentry && client.on) {\n        client.on('beforeSendEvent', _getSentryBreadcrumbHandler(client));\n      }\n    },\n  };\n}) ;\n\nconst breadcrumbsIntegration = defineIntegration(_breadcrumbsIntegration);\n\n/**\n * Default Breadcrumbs instrumentations\n *\n * @deprecated Use `breadcrumbsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst Breadcrumbs = convertIntegrationFnToClass(INTEGRATION_NAME, breadcrumbsIntegration)\n\n;\n\n/**\n * Adds a breadcrumb for Sentry events or transactions if this option is enabled.\n */\nfunction _getSentryBreadcrumbHandler(client) {\n  return function addSentryBreadcrumb(event) {\n    if (getClient() !== client) {\n      return;\n    }\n\n    addBreadcrumb(\n      {\n        category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n        event_id: event.event_id,\n        level: event.level,\n        message: getEventDescription(event),\n      },\n      {\n        event,\n      },\n    );\n  };\n}\n\n/**\n * A HOC that creaes a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\nfunction _getDomBreadcrumbHandler(\n  client,\n  dom,\n) {\n  return function _innerDomBreadcrumb(handlerData) {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let target;\n    let componentName;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    let maxStringLength =\n      typeof dom === 'object' && typeof dom.maxStringLength === 'number' ? dom.maxStringLength : undefined;\n    if (maxStringLength && maxStringLength > MAX_ALLOWED_STRING_LENGTH) {\n      DEBUG_BUILD &&\n        logger.warn(\n          `\\`dom.maxStringLength\\` cannot exceed ${MAX_ALLOWED_STRING_LENGTH}, but a value of ${maxStringLength} was configured. Sentry will use ${MAX_ALLOWED_STRING_LENGTH} instead.`,\n        );\n      maxStringLength = MAX_ALLOWED_STRING_LENGTH;\n    }\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      const event = handlerData.event ;\n      const element = _isEvent(event) ? event.target : event;\n\n      target = htmlTreeAsString(element, { keyAttrs, maxStringLength });\n      componentName = getComponentName(element);\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    const breadcrumb = {\n      category: `ui.${handlerData.name}`,\n      message: target,\n    };\n\n    if (componentName) {\n      breadcrumb.data = { 'ui.component_name': componentName };\n    }\n\n    addBreadcrumb(breadcrumb, {\n      event: handlerData.event,\n      name: handlerData.name,\n      global: handlerData.global,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\nfunction _getConsoleBreadcrumbHandler(client) {\n  return function _consoleBreadcrumb(handlerData) {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const breadcrumb = {\n      category: 'console',\n      data: {\n        arguments: handlerData.args,\n        logger: 'console',\n      },\n      level: severityLevelFromString(handlerData.level),\n      message: safeJoin(handlerData.args, ' '),\n    };\n\n    if (handlerData.level === 'assert') {\n      if (handlerData.args[0] === false) {\n        breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n        breadcrumb.data.arguments = handlerData.args.slice(1);\n      } else {\n        // Don't capture a breadcrumb for passed assertions\n        return;\n      }\n    }\n\n    addBreadcrumb(breadcrumb, {\n      input: handlerData.args,\n      level: handlerData.level,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\nfunction _getXhrBreadcrumbHandler(client) {\n  return function _xhrBreadcrumb(handlerData) {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    const sentryXhrData = handlerData.xhr[SENTRY_XHR_DATA_KEY];\n\n    // We only capture complete, non-sentry requests\n    if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n      return;\n    }\n\n    const { method, url, status_code, body } = sentryXhrData;\n\n    const data = {\n      method,\n      url,\n      status_code,\n    };\n\n    const hint = {\n      xhr: handlerData.xhr,\n      input: body,\n      startTimestamp,\n      endTimestamp,\n    };\n\n    addBreadcrumb(\n      {\n        category: 'xhr',\n        data,\n        type: 'http',\n      },\n      hint,\n    );\n  };\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\nfunction _getFetchBreadcrumbHandler(client) {\n  return function _fetchBreadcrumb(handlerData) {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    // We only capture complete fetch requests\n    if (!endTimestamp) {\n      return;\n    }\n\n    if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n      // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n      return;\n    }\n\n    if (handlerData.error) {\n      const data = handlerData.fetchData;\n      const hint = {\n        data: handlerData.error,\n        input: handlerData.args,\n        startTimestamp,\n        endTimestamp,\n      };\n\n      addBreadcrumb(\n        {\n          category: 'fetch',\n          data,\n          level: 'error',\n          type: 'http',\n        },\n        hint,\n      );\n    } else {\n      const response = handlerData.response ;\n      const data = {\n        ...handlerData.fetchData,\n        status_code: response && response.status,\n      };\n      const hint = {\n        input: handlerData.args,\n        response,\n        startTimestamp,\n        endTimestamp,\n      };\n      addBreadcrumb(\n        {\n          category: 'fetch',\n          data,\n          type: 'http',\n        },\n        hint,\n      );\n    }\n  };\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\nfunction _getHistoryBreadcrumbHandler(client) {\n  return function _historyBreadcrumb(handlerData) {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let from = handlerData.from;\n    let to = handlerData.to;\n    const parsedLoc = parseUrl(WINDOW.location.href);\n    let parsedFrom = from ? parseUrl(from) : undefined;\n    const parsedTo = parseUrl(to);\n\n    // Initial pushState doesn't provide `from` information\n    if (!parsedFrom || !parsedFrom.path) {\n      parsedFrom = parsedLoc;\n    }\n\n    // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n      to = parsedTo.relative;\n    }\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n      from = parsedFrom.relative;\n    }\n\n    addBreadcrumb({\n      category: 'navigation',\n      data: {\n        from,\n        to,\n      },\n    });\n  };\n}\n\nfunction _isEvent(event) {\n  return !!event && !!(event ).target;\n}\n\nexport { Breadcrumbs, breadcrumbsIntegration };\n//# sourceMappingURL=breadcrumbs.js.map\n","import { defineIntegration, convertIntegrationFnToClass } from '@sentry/core';\nimport { logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\n\nconst INTEGRATION_NAME = 'Dedupe';\n\nconst _dedupeIntegration = (() => {\n  let previousEvent;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(currentEvent) {\n      // We want to ignore any non-error type events, e.g. transactions or replays\n      // These should never be deduped, and also not be compared against as _previousEvent.\n      if (currentEvent.type) {\n        return currentEvent;\n      }\n\n      // Juuust in case something goes wrong\n      try {\n        if (_shouldDropEvent(currentEvent, previousEvent)) {\n          DEBUG_BUILD && logger.warn('Event dropped due to being a duplicate of previously captured event.');\n          return null;\n        }\n      } catch (_oO) {} // eslint-disable-line no-empty\n\n      return (previousEvent = currentEvent);\n    },\n  };\n}) ;\n\nconst dedupeIntegration = defineIntegration(_dedupeIntegration);\n\n/**\n * Deduplication filter.\n * @deprecated Use `dedupeIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst Dedupe = convertIntegrationFnToClass(INTEGRATION_NAME, dedupeIntegration)\n\n;\n\nfunction _shouldDropEvent(currentEvent, previousEvent) {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction _isSameMessageEvent(currentEvent, previousEvent) {\n  const currentMessage = currentEvent.message;\n  const previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameExceptionEvent(currentEvent, previousEvent) {\n  const previousException = _getExceptionFromEvent(previousEvent);\n  const currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameStacktrace(currentEvent, previousEvent) {\n  let currentFrames = _getFramesFromEvent(currentEvent);\n  let previousFrames = _getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames ;\n  previousFrames = previousFrames ;\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    const frameA = previousFrames[i];\n    const frameB = currentFrames[i];\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction _isSameFingerprint(currentEvent, previousEvent) {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint ;\n  previousFingerprint = previousFingerprint ;\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch (_oO) {\n    return false;\n  }\n}\n\nfunction _getExceptionFromEvent(event) {\n  return event.exception && event.exception.values && event.exception.values[0];\n}\n\nfunction _getFramesFromEvent(event) {\n  const exception = event.exception;\n\n  if (exception) {\n    try {\n      // @ts-expect-error Object could be undefined\n      return exception.values[0].stacktrace.frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n\nexport { Dedupe, dedupeIntegration };\n//# sourceMappingURL=dedupe.js.map\n","import { defineIntegration, convertIntegrationFnToClass, getClient, captureEvent } from '@sentry/core';\nimport { addGlobalErrorInstrumentationHandler, isString, addGlobalUnhandledRejectionInstrumentationHandler, isPrimitive, isErrorEvent, getLocationHref, logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { eventFromUnknownInput } from '../eventbuilder.js';\nimport { shouldIgnoreOnError } from '../helpers.js';\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n\nconst INTEGRATION_NAME = 'GlobalHandlers';\n\nconst _globalHandlersIntegration = ((options = {}) => {\n  const _options = {\n    onerror: true,\n    onunhandledrejection: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      Error.stackTraceLimit = 50;\n    },\n    setup(client) {\n      if (_options.onerror) {\n        _installGlobalOnErrorHandler(client);\n        globalHandlerLog('onerror');\n      }\n      if (_options.onunhandledrejection) {\n        _installGlobalOnUnhandledRejectionHandler(client);\n        globalHandlerLog('onunhandledrejection');\n      }\n    },\n  };\n}) ;\n\nconst globalHandlersIntegration = defineIntegration(_globalHandlersIntegration);\n\n/**\n * Global handlers.\n * @deprecated Use `globalHandlersIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst GlobalHandlers = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  globalHandlersIntegration,\n)\n\n;\n\nfunction _installGlobalOnErrorHandler(client) {\n  addGlobalErrorInstrumentationHandler(data => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const { msg, url, line, column, error } = data;\n\n    const event =\n      error === undefined && isString(msg)\n        ? _eventFromIncompleteOnError(msg, url, line, column)\n        : _enhanceEventWithInitialFrame(\n            eventFromUnknownInput(stackParser, error || msg, undefined, attachStacktrace, false),\n            url,\n            line,\n            column,\n          );\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onerror',\n      },\n    });\n  });\n}\n\nfunction _installGlobalOnUnhandledRejectionHandler(client) {\n  addGlobalUnhandledRejectionInstrumentationHandler(e => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const error = _getUnhandledRejectionError(e );\n\n    const event = isPrimitive(error)\n      ? _eventFromRejectionWithPrimitive(error)\n      : eventFromUnknownInput(stackParser, error, undefined, attachStacktrace, true);\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onunhandledrejection',\n      },\n    });\n  });\n}\n\nfunction _getUnhandledRejectionError(error) {\n  if (isPrimitive(error)) {\n    return error;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const e = error ;\n\n  // dig the object of the rejection out of known event types\n  try {\n    // PromiseRejectionEvents store the object of the rejection under 'reason'\n    // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n    if ('reason' in e) {\n      return e.reason;\n    }\n\n    // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n    // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n    // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n    // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n    // https://github.com/getsentry/sentry-javascript/issues/2380\n    else if ('detail' in e && 'reason' in e.detail) {\n      return e.detail.reason;\n    }\n  } catch (e2) {} // eslint-disable-line no-empty\n\n  return error;\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason) {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\n/**\n * This function creates a stack from an old, error-less onerror handler.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _eventFromIncompleteOnError(msg, url, line, column) {\n  const ERROR_TYPES_RE =\n    /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n\n  // If 'message' is ErrorEvent, get real message from inside\n  let message = isErrorEvent(msg) ? msg.message : msg;\n  let name = 'Error';\n\n  const groups = message.match(ERROR_TYPES_RE);\n  if (groups) {\n    name = groups[1];\n    message = groups[2];\n  }\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: name,\n          value: message,\n        },\n      ],\n    },\n  };\n\n  return _enhanceEventWithInitialFrame(event, url, line, column);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _enhanceEventWithInitialFrame(event, url, line, column) {\n  // event.exception\n  const e = (event.exception = event.exception || {});\n  // event.exception.values\n  const ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  const ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  const ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  const ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  const colno = isNaN(parseInt(column, 10)) ? undefined : column;\n  const lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n  const filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: '?',\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type) {\n  DEBUG_BUILD && logger.log(`Global Handler attached: ${type}`);\n}\n\nfunction getOptions() {\n  const client = getClient();\n  const options = (client && client.getOptions()) || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return options;\n}\n\nexport { GlobalHandlers, globalHandlersIntegration };\n//# sourceMappingURL=globalhandlers.js.map\n","import { defineIntegration, convertIntegrationFnToClass } from '@sentry/core';\nimport { WINDOW } from '../helpers.js';\n\nconst INTEGRATION_NAME = 'HttpContext';\n\nconst _httpContextIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    preprocessEvent(event) {\n      // if none of the information we want exists, don't bother\n      if (!WINDOW.navigator && !WINDOW.location && !WINDOW.document) {\n        return;\n      }\n\n      // grab as much info as exists and add it to the event\n      const url = (event.request && event.request.url) || (WINDOW.location && WINDOW.location.href);\n      const { referrer } = WINDOW.document || {};\n      const { userAgent } = WINDOW.navigator || {};\n\n      const headers = {\n        ...(event.request && event.request.headers),\n        ...(referrer && { Referer: referrer }),\n        ...(userAgent && { 'User-Agent': userAgent }),\n      };\n      const request = { ...event.request, ...(url && { url }), headers };\n\n      event.request = request;\n    },\n  };\n}) ;\n\nconst httpContextIntegration = defineIntegration(_httpContextIntegration);\n\n/**\n * HttpContext integration collects information about HTTP request headers.\n * @deprecated Use `httpContextIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst HttpContext = convertIntegrationFnToClass(INTEGRATION_NAME, httpContextIntegration)\n\n;\n\nexport { HttpContext, httpContextIntegration };\n//# sourceMappingURL=httpcontext.js.map\n","import { defineIntegration, convertIntegrationFnToClass } from '@sentry/core';\nimport { applyAggregateErrorsToEvent } from '@sentry/utils';\nimport { exceptionFromError } from '../eventbuilder.js';\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\nconst INTEGRATION_NAME = 'LinkedErrors';\n\nconst _linkedErrorsIntegration = ((options = {}) => {\n  const limit = options.limit || DEFAULT_LIMIT;\n  const key = options.key || DEFAULT_KEY;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    preprocessEvent(event, hint, client) {\n      const options = client.getOptions();\n\n      applyAggregateErrorsToEvent(\n        // This differs from the LinkedErrors integration in core by using a different exceptionFromError function\n        exceptionFromError,\n        options.stackParser,\n        options.maxValueLength,\n        key,\n        limit,\n        event,\n        hint,\n      );\n    },\n  };\n}) ;\n\nconst linkedErrorsIntegration = defineIntegration(_linkedErrorsIntegration);\n\n/**\n * Aggregrate linked errors in an event.\n * @deprecated Use `linkedErrorsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst LinkedErrors = convertIntegrationFnToClass(INTEGRATION_NAME, linkedErrorsIntegration)\n\n;\n\nexport { LinkedErrors, linkedErrorsIntegration };\n//# sourceMappingURL=linkederrors.js.map\n","import { defineIntegration, convertIntegrationFnToClass } from '@sentry/core';\nimport { fill, getFunctionName, getOriginalFunction } from '@sentry/utils';\nimport { WINDOW, wrap } from '../helpers.js';\n\nconst DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'BroadcastChannel',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'SharedWorker',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\nconst INTEGRATION_NAME = 'TryCatch';\n\nconst _browserApiErrorsIntegration = ((options = {}) => {\n  const _options = {\n    XMLHttpRequest: true,\n    eventTarget: true,\n    requestAnimationFrame: true,\n    setInterval: true,\n    setTimeout: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO: This currently only works for the first client this is setup\n    // We may want to adjust this to check for client etc.\n    setupOnce() {\n      if (_options.setTimeout) {\n        fill(WINDOW, 'setTimeout', _wrapTimeFunction);\n      }\n\n      if (_options.setInterval) {\n        fill(WINDOW, 'setInterval', _wrapTimeFunction);\n      }\n\n      if (_options.requestAnimationFrame) {\n        fill(WINDOW, 'requestAnimationFrame', _wrapRAF);\n      }\n\n      if (_options.XMLHttpRequest && 'XMLHttpRequest' in WINDOW) {\n        fill(XMLHttpRequest.prototype, 'send', _wrapXHR);\n      }\n\n      const eventTargetOption = _options.eventTarget;\n      if (eventTargetOption) {\n        const eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n        eventTarget.forEach(_wrapEventTarget);\n      }\n    },\n  };\n}) ;\n\nconst browserApiErrorsIntegration = defineIntegration(_browserApiErrorsIntegration);\n\n/**\n * Wrap timer functions and event targets to catch errors and provide better meta data.\n * @deprecated Use `browserApiErrorsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst TryCatch = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  browserApiErrorsIntegration,\n)\n\n;\n\nfunction _wrapTimeFunction(original) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function ( ...args) {\n    const originalCallback = args[0];\n    args[0] = wrap(originalCallback, {\n      mechanism: {\n        data: { function: getFunctionName(original) },\n        handled: false,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _wrapRAF(original) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function ( callback) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return original.apply(this, [\n      wrap(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: getFunctionName(original),\n          },\n          handled: false,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\nfunction _wrapXHR(originalSend) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function ( ...args) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const xhr = this;\n    const xmlHttpRequestProps = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        fill(xhr, prop, function (original) {\n          const wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: getFunctionName(original),\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before TryCatch, get the name of original function\n          const originalFunction = getOriginalFunction(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = getFunctionName(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\nfunction _wrapEventTarget(target) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const globalObject = WINDOW ;\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const proto = globalObject[target] && globalObject[target].prototype;\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n  if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n    return;\n  }\n\n  fill(proto, 'addEventListener', function (original,)\n\n {\n    return function (\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      eventName,\n      fn,\n      options,\n    ) {\n      try {\n        if (typeof fn.handleEvent === 'function') {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          fn.handleEvent = wrap(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch (err) {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      return original.apply(this, [\n        eventName,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        wrap(fn , {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: getFunctionName(fn),\n              target,\n            },\n            handled: false,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  fill(\n    proto,\n    'removeEventListener',\n    function (\n      originalRemoveEventListener,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ) {\n      return function (\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n        eventName,\n        fn,\n        options,\n      ) {\n        /**\n         * There are 2 possible scenarios here:\n         *\n         * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n         * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n         * as a pass-through, and call original `removeEventListener` with it.\n         *\n         * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n         * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n         * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n         * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n         * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n         *\n         * When someone adds a handler prior to initialization, and then do it again, but after,\n         * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n         * to get rid of the initial handler and it'd stick there forever.\n         */\n        const wrappedEventHandler = fn ;\n        try {\n          const originalEventHandler = wrappedEventHandler && wrappedEventHandler.__sentry_wrapped__;\n          if (originalEventHandler) {\n            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n          }\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n      };\n    },\n  );\n}\n\nexport { TryCatch, browserApiErrorsIntegration };\n//# sourceMappingURL=trycatch.js.map\n","import { inboundFiltersIntegration, functionToStringIntegration, getIntegrationsToSetup, initAndBind, getReportDialogEndpoint, getCurrentHub, startSession, captureSession, getClient } from '@sentry/core';\nimport { stackParserFromStackParserOptions, supportsFetch, logger, addHistoryInstrumentationHandler } from '@sentry/utils';\nimport { BrowserClient } from './client.js';\nimport { DEBUG_BUILD } from './debug-build.js';\nimport { WINDOW, wrap as wrap$1 } from './helpers.js';\nimport { breadcrumbsIntegration } from './integrations/breadcrumbs.js';\nimport { dedupeIntegration } from './integrations/dedupe.js';\nimport { globalHandlersIntegration } from './integrations/globalhandlers.js';\nimport { httpContextIntegration } from './integrations/httpcontext.js';\nimport { linkedErrorsIntegration } from './integrations/linkederrors.js';\nimport { browserApiErrorsIntegration } from './integrations/trycatch.js';\nimport { defaultStackParser } from './stack-parsers.js';\nimport { makeFetchTransport } from './transports/fetch.js';\nimport { makeXHRTransport } from './transports/xhr.js';\n\n/** @deprecated Use `getDefaultIntegrations(options)` instead. */\nconst defaultIntegrations = [\n  inboundFiltersIntegration(),\n  functionToStringIntegration(),\n  browserApiErrorsIntegration(),\n  breadcrumbsIntegration(),\n  globalHandlersIntegration(),\n  linkedErrorsIntegration(),\n  dedupeIntegration(),\n  httpContextIntegration(),\n];\n\n/** Get the default integrations for the browser SDK. */\nfunction getDefaultIntegrations(_options) {\n  // We return a copy of the defaultIntegrations here to avoid mutating this\n  return [\n    // eslint-disable-next-line deprecation/deprecation\n    ...defaultIntegrations,\n  ];\n}\n\n/**\n * A magic string that build tooling can leverage in order to inject a release value into the SDK.\n */\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nfunction init(options = {}) {\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = getDefaultIntegrations();\n  }\n  if (options.release === undefined) {\n    // This allows build tooling to find-and-replace __SENTRY_RELEASE__ to inject a release value\n    if (typeof __SENTRY_RELEASE__ === 'string') {\n      options.release = __SENTRY_RELEASE__;\n    }\n\n    // This supports the variable that sentry-webpack-plugin injects\n    if (WINDOW.SENTRY_RELEASE && WINDOW.SENTRY_RELEASE.id) {\n      options.release = WINDOW.SENTRY_RELEASE.id;\n    }\n  }\n  if (options.autoSessionTracking === undefined) {\n    options.autoSessionTracking = true;\n  }\n  if (options.sendClientReports === undefined) {\n    options.sendClientReports = true;\n  }\n\n  const clientOptions = {\n    ...options,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup(options),\n    transport: options.transport || (supportsFetch() ? makeFetchTransport : makeXHRTransport),\n  };\n\n  initAndBind(BrowserClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n}\n\nconst showReportDialog = (\n  // eslint-disable-next-line deprecation/deprecation\n  options = {},\n  // eslint-disable-next-line deprecation/deprecation\n  hub = getCurrentHub(),\n) => {\n  // doesn't work without a document (React Native)\n  if (!WINDOW.document) {\n    DEBUG_BUILD && logger.error('Global document not defined in showReportDialog call');\n    return;\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  const { client, scope } = hub.getStackTop();\n  const dsn = options.dsn || (client && client.getDsn());\n  if (!dsn) {\n    DEBUG_BUILD && logger.error('DSN not configured for showReportDialog call');\n    return;\n  }\n\n  if (scope) {\n    options.user = {\n      ...scope.getUser(),\n      ...options.user,\n    };\n  }\n\n  // TODO(v8): Remove this entire if statement. `eventId` will be a required option.\n  // eslint-disable-next-line deprecation/deprecation\n  if (!options.eventId) {\n    // eslint-disable-next-line deprecation/deprecation\n    options.eventId = hub.lastEventId();\n  }\n\n  const script = WINDOW.document.createElement('script');\n  script.async = true;\n  script.crossOrigin = 'anonymous';\n  script.src = getReportDialogEndpoint(dsn, options);\n\n  if (options.onLoad) {\n    script.onload = options.onLoad;\n  }\n\n  const { onClose } = options;\n  if (onClose) {\n    const reportDialogClosedMessageHandler = (event) => {\n      if (event.data === '__sentry_reportdialog_closed__') {\n        try {\n          onClose();\n        } finally {\n          WINDOW.removeEventListener('message', reportDialogClosedMessageHandler);\n        }\n      }\n    };\n    WINDOW.addEventListener('message', reportDialogClosedMessageHandler);\n  }\n\n  const injectionPoint = WINDOW.document.head || WINDOW.document.body;\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  } else {\n    DEBUG_BUILD && logger.error('Not injecting report dialog. No injection point found in HTML');\n  }\n};\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction forceLoad() {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction onLoad(callback) {\n  callback();\n}\n\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @deprecated This function will be removed in v8.\n * It is not part of Sentry's official API and it's easily replaceable by using a try/catch block\n * and calling Sentry.captureException.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\n// TODO(v8): Remove this function\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction wrap(fn) {\n  return wrap$1(fn)();\n}\n\n/**\n * Enable automatic Session Tracking for the initial page load.\n */\nfunction startSessionTracking() {\n  if (typeof WINDOW.document === 'undefined') {\n    DEBUG_BUILD && logger.warn('Session tracking in non-browser environment with @sentry/browser is not supported.');\n    return;\n  }\n\n  // The session duration for browser sessions does not track a meaningful\n  // concept that can be used as a metric.\n  // Automatically captured sessions are akin to page views, and thus we\n  // discard their duration.\n  startSession({ ignoreDuration: true });\n  captureSession();\n\n  // We want to create a session for every navigation as well\n  addHistoryInstrumentationHandler(({ from, to }) => {\n    // Don't create an additional session for the initial route or if the location did not change\n    if (from !== undefined && from !== to) {\n      startSession({ ignoreDuration: true });\n      captureSession();\n    }\n  });\n}\n\n/**\n * Captures user feedback and sends it to Sentry.\n */\nfunction captureUserFeedback(feedback) {\n  const client = getClient();\n  if (client) {\n    client.captureUserFeedback(feedback);\n  }\n}\n\nexport { captureUserFeedback, defaultIntegrations, forceLoad, getDefaultIntegrations, init, onLoad, showReportDialog, wrap };\n//# sourceMappingURL=sdk.js.map\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nexport { DEBUG_BUILD };\n//# sourceMappingURL=debug-build.js.map\n","import { getClient, showReportDialog, withScope, captureException } from '@sentry/browser';\nimport { isError, logger } from '@sentry/utils';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport * as React from 'react';\nimport { DEBUG_BUILD } from './debug-build.js';\n\nconst _jsxFileName = \"/home/runner/work/sentry-javascript/sentry-javascript/packages/react/src/errorboundary.tsx\";\n\nfunction isAtLeastReact17(version) {\n  const major = version.match(/^([^.]+)/);\n  return major !== null && parseInt(major[0]) >= 17;\n}\n\nconst UNKNOWN_COMPONENT = 'unknown';\n\nconst INITIAL_STATE = {\n  componentStack: null,\n  error: null,\n  eventId: null,\n};\n\nfunction setCause(error, cause) {\n  const seenErrors = new WeakMap();\n\n  function recurse(error, cause) {\n    // If we've already seen the error, there is a recursive loop somewhere in the error's\n    // cause chain. Let's just bail out then to prevent a stack overflow.\n    if (seenErrors.has(error)) {\n      return;\n    }\n    if (error.cause) {\n      seenErrors.set(error, true);\n      return recurse(error.cause, cause);\n    }\n    error.cause = cause;\n  }\n\n  recurse(error, cause);\n}\n\n/**\n * A ErrorBoundary component that logs errors to Sentry. Requires React >= 16.\n * NOTE: If you are a Sentry user, and you are seeing this stack frame, it means the\n * Sentry React SDK ErrorBoundary caught an error invoking your application code. This\n * is expected behavior and NOT indicative of a bug with the Sentry React SDK.\n */\nclass ErrorBoundary extends React.Component {\n\n   constructor(props) {\n    super(props);ErrorBoundary.prototype.__init.call(this);\n    this.state = INITIAL_STATE;\n    this._openFallbackReportDialog = true;\n\n    const client = getClient();\n    if (client && client.on && props.showDialog) {\n      this._openFallbackReportDialog = false;\n      client.on('afterSendEvent', event => {\n        if (!event.type && event.event_id === this._lastEventId) {\n          // eslint-disable-next-line deprecation/deprecation\n          showReportDialog({ ...props.dialogOptions, eventId: this._lastEventId });\n        }\n      });\n    }\n  }\n\n   componentDidCatch(error, { componentStack }) {\n    const { beforeCapture, onError, showDialog, dialogOptions } = this.props;\n    withScope(scope => {\n      // If on React version >= 17, create stack trace from componentStack param and links\n      // to to the original error using `error.cause` otherwise relies on error param for stacktrace.\n      // Linking errors requires the `LinkedErrors` integration be enabled.\n      // See: https://reactjs.org/blog/2020/08/10/react-v17-rc.html#native-component-stacks\n      //\n      // Although `componentDidCatch` is typed to accept an `Error` object, it can also be invoked\n      // with non-error objects. This is why we need to check if the error is an error-like object.\n      // See: https://github.com/getsentry/sentry-javascript/issues/6167\n      if (isAtLeastReact17(React.version) && isError(error)) {\n        const errorBoundaryError = new Error(error.message);\n        errorBoundaryError.name = `React ErrorBoundary ${error.name}`;\n        errorBoundaryError.stack = componentStack;\n\n        // Using the `LinkedErrors` integration to link the errors together.\n        setCause(error, errorBoundaryError);\n      }\n\n      if (beforeCapture) {\n        beforeCapture(scope, error, componentStack);\n      }\n\n      const eventId = captureException(error, {\n        captureContext: {\n          contexts: { react: { componentStack } },\n        },\n        mechanism: { handled: false },\n      });\n\n      if (onError) {\n        onError(error, componentStack, eventId);\n      }\n      if (showDialog) {\n        this._lastEventId = eventId;\n        if (this._openFallbackReportDialog) {\n          showReportDialog({ ...dialogOptions, eventId });\n        }\n      }\n\n      // componentDidCatch is used over getDerivedStateFromError\n      // so that componentStack is accessible through state.\n      this.setState({ error, componentStack, eventId });\n    });\n  }\n\n   componentDidMount() {\n    const { onMount } = this.props;\n    if (onMount) {\n      onMount();\n    }\n  }\n\n   componentWillUnmount() {\n    const { error, componentStack, eventId } = this.state;\n    const { onUnmount } = this.props;\n    if (onUnmount) {\n      onUnmount(error, componentStack, eventId);\n    }\n  }\n\n   __init() {this.resetErrorBoundary = () => {\n    const { onReset } = this.props;\n    const { error, componentStack, eventId } = this.state;\n    if (onReset) {\n      onReset(error, componentStack, eventId);\n    }\n    this.setState(INITIAL_STATE);\n  };}\n\n   render() {\n    const { fallback, children } = this.props;\n    const state = this.state;\n\n    if (state.error) {\n      let element = undefined;\n      if (typeof fallback === 'function') {\n        element = fallback({\n          error: state.error,\n          componentStack: state.componentStack,\n          resetError: this.resetErrorBoundary,\n          eventId: state.eventId,\n        });\n      } else {\n        element = fallback;\n      }\n\n      if (React.isValidElement(element)) {\n        return element;\n      }\n\n      if (fallback) {\n        DEBUG_BUILD && logger.warn('fallback did not produce a valid ReactElement');\n      }\n\n      // Fail gracefully if no fallback provided or is not valid\n      return null;\n    }\n\n    if (typeof children === 'function') {\n      return (children )();\n    }\n    return children;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction withErrorBoundary(\n  WrappedComponent,\n  errorBoundaryOptions,\n) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const componentDisplayName = WrappedComponent.displayName || WrappedComponent.name || UNKNOWN_COMPONENT;\n\n  const Wrapped = (props) => (\n    React.createElement(ErrorBoundary, { ...errorBoundaryOptions, __self: this, __source: {fileName: _jsxFileName, lineNumber: 238}}\n      , React.createElement(WrappedComponent, { ...props, __self: this, __source: {fileName: _jsxFileName, lineNumber: 239}} )\n    )\n  );\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  Wrapped.displayName = `errorBoundary(${componentDisplayName})`;\n\n  // Copy over static methods from Wrapped component to Profiler HOC\n  // See: https://reactjs.org/docs/higher-order-components.html#static-methods-must-be-copied-over\n  hoistNonReactStatics(Wrapped, WrappedComponent);\n  return Wrapped;\n}\n\nexport { ErrorBoundary, UNKNOWN_COMPONENT, isAtLeastReact17, withErrorBoundary };\n//# sourceMappingURL=errorboundary.js.map\n","/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nexport { DEBUG_BUILD };\n//# sourceMappingURL=debug-build.js.map\n","import { _optionalChain } from '@sentry/utils';\nimport { GLOBAL_OBJ } from '@sentry/utils';\n\n/**\n * Get the future flags from the Remix browser context\n *\n * @returns The future flags\n */\nfunction getFutureFlagsBrowser() {\n  const window = GLOBAL_OBJ ;\n\n  if (!window.__remixContext) {\n    return;\n  }\n\n  return window.__remixContext.future;\n}\n\n/**\n * Get the future flags from the Remix server build\n *\n * @param build The Remix server build\n *\n * @returns The future flags\n */\nfunction getFutureFlagsServer(build) {\n  return build.future;\n}\n\n/**\n * Learn Remix version from the server build object\n * V2 Server builds have a non-optional `mode` property\n *\n * @returns The major version number\n */\nfunction getRemixVersionFromBuild(build) {\n  if ('mode' in build) {\n    return 2;\n  }\n\n  return 1;\n}\n\n/**\n * Read Remix version from the Remix context on the browser\n *\n * @returns The major version number\n */\nfunction readRemixVersionFromLoader() {\n  const window = GLOBAL_OBJ ;\n\n  return _optionalChain([window, 'access', _ => _.__remixContext, 'optionalAccess', _2 => _2.state, 'optionalAccess', _3 => _3.loaderData, 'optionalAccess', _4 => _4.root, 'optionalAccess', _5 => _5.remixVersion]);\n}\n\nexport { getFutureFlagsBrowser, getFutureFlagsServer, getRemixVersionFromBuild, readRemixVersionFromLoader };\n//# sourceMappingURL=futureFlags.js.map\n","import { _optionalChain } from '@sentry/utils';\nimport { getActiveSpan, getRootSpan, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE } from '@sentry/core';\nimport { getClient, startBrowserTracingPageLoadSpan, withErrorBoundary, WINDOW, startBrowserTracingNavigationSpan } from '@sentry/react';\nimport { isNodeEnv, logger } from '@sentry/utils';\nimport * as React from 'react';\nimport { DEBUG_BUILD } from '../utils/debug-build.js';\nimport { readRemixVersionFromLoader, getFutureFlagsBrowser } from '../utils/futureFlags.js';\n\nconst _jsxFileName = \"/home/runner/work/sentry-javascript/sentry-javascript/packages/remix/src/client/performance.tsx\";\nconst DEFAULT_TAGS = {\n  'routing.instrumentation': 'remix-router',\n} ;\n\nlet _useEffect;\nlet _useLocation;\nlet _useMatches;\n\nlet _customStartTransaction;\nlet _instrumentNavigation;\n\nfunction getInitPathName() {\n  if (WINDOW && WINDOW.location) {\n    return WINDOW.location.pathname;\n  }\n\n  return undefined;\n}\n\nfunction isRemixV2(remixVersion) {\n  return remixVersion === 2 || _optionalChain([getFutureFlagsBrowser, 'call', _ => _(), 'optionalAccess', _2 => _2.v2_errorBoundary]) || false;\n}\n\nfunction startPageloadSpan() {\n  const initPathName = getInitPathName();\n\n  if (!initPathName) {\n    return;\n  }\n\n  const spanContext = {\n    name: initPathName,\n    op: 'pageload',\n    origin: 'auto.pageload.remix',\n    tags: DEFAULT_TAGS,\n    metadata: {\n      source: 'url',\n    },\n  };\n\n  // If _customStartTransaction is not defined, we know that we are using the browserTracingIntegration\n  if (!_customStartTransaction) {\n    const client = getClient();\n\n    if (!client) {\n      return;\n    }\n\n    startBrowserTracingPageLoadSpan(client, spanContext);\n  } else {\n    _customStartTransaction(spanContext);\n  }\n}\n\nfunction startNavigationSpan(matches) {\n  const spanContext = {\n    name: matches[matches.length - 1].id,\n    op: 'navigation',\n    origin: 'auto.navigation.remix',\n    tags: DEFAULT_TAGS,\n    metadata: {\n      source: 'route',\n    },\n  };\n\n  // If _customStartTransaction is not defined, we know that we are using the browserTracingIntegration\n  if (!_customStartTransaction) {\n    const client = getClient();\n\n    if (!client) {\n      return;\n    }\n\n    startBrowserTracingNavigationSpan(client, spanContext);\n  } else {\n    _customStartTransaction(spanContext);\n  }\n}\n\n/**\n * @deprecated Use `browserTracingIntegration` instead.\n *\n * Creates a react-router v6 instrumention for Remix applications.\n *\n * This implementation is slightly different (and simpler) from the react-router instrumentation\n * as in Remix, `useMatches` hook is available where in react-router-v6 it's not yet.\n */\nfunction remixRouterInstrumentation(useEffect, useLocation, useMatches) {\n  return (\n    customStartTransaction,\n    startTransactionOnPageLoad = true,\n    startTransactionOnLocationChange = true,\n  ) => {\n    setGlobals({\n      useEffect,\n      useLocation,\n      useMatches,\n      instrumentNavigation: startTransactionOnLocationChange,\n      customStartTransaction,\n    });\n\n    if (startTransactionOnPageLoad) {\n      startPageloadSpan();\n    }\n  };\n}\n\n/**\n * Wraps a remix `root` (see: https://remix.run/docs/en/v1/guides/migrating-react-router-app#creating-the-root-route)\n * To enable pageload/navigation tracing on every route.\n * Also wraps the application with `ErrorBoundary`.\n *\n * @param OrigApp The Remix root to wrap\n * @param options The options for ErrorBoundary wrapper.\n */\nfunction withSentry(\n  OrigApp,\n  options\n\n = {\n    // We don't want to wrap application with Sentry's ErrorBoundary by default for Remix v2\n    wrapWithErrorBoundary: true,\n    errorBoundaryOptions: {},\n  },\n) {\n  const SentryRoot = (props) => {\n    // Early return when any of the required functions is not available.\n    if (!_useEffect || !_useLocation || !_useMatches) {\n      DEBUG_BUILD &&\n        !isNodeEnv() &&\n        logger.warn('Remix SDK was unable to wrap your root because of one or more missing parameters.');\n\n      // @ts-expect-error Setting more specific React Component typing for `R` generic above\n      // will break advanced type inference done by react router params\n      return React.createElement(OrigApp, { ...props, __self: this, __source: {fileName: _jsxFileName, lineNumber: 181}} );\n    }\n\n    let isBaseLocation = false;\n\n    const location = _useLocation();\n    const matches = _useMatches();\n\n    _useEffect(() => {\n      const activeRootSpan = getActiveSpan();\n\n      if (activeRootSpan && matches && matches.length) {\n        const transaction = getRootSpan(activeRootSpan);\n\n        if (transaction) {\n          transaction.updateName(matches[matches.length - 1].id);\n          transaction.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, 'route');\n        }\n      }\n\n      isBaseLocation = true;\n    }, []);\n\n    _useEffect(() => {\n      const activeRootSpan = getActiveSpan();\n\n      if (isBaseLocation) {\n        if (activeRootSpan) {\n          activeRootSpan.end();\n        }\n\n        return;\n      }\n\n      if (_instrumentNavigation && matches && matches.length) {\n        if (activeRootSpan) {\n          activeRootSpan.end();\n        }\n\n        startNavigationSpan(matches);\n      }\n    }, [location]);\n\n    isBaseLocation = false;\n\n    if (!isRemixV2(readRemixVersionFromLoader()) && options.wrapWithErrorBoundary) {\n      // @ts-expect-error Setting more specific React Component typing for `R` generic above\n      // will break advanced type inference done by react router params\n      return withErrorBoundary(OrigApp, options.errorBoundaryOptions)(props);\n    }\n    // @ts-expect-error Setting more specific React Component typing for `R` generic above\n    // will break advanced type inference done by react router params\n    return React.createElement(OrigApp, { ...props, __self: this, __source: {fileName: _jsxFileName, lineNumber: 233}} );\n  };\n\n  // @ts-expect-error Setting more specific React Component typing for `R` generic above\n  // will break advanced type inference done by react router params\n  return SentryRoot;\n}\n\nfunction setGlobals({\n  useEffect,\n  useLocation,\n  useMatches,\n  instrumentNavigation,\n  customStartTransaction,\n}\n\n) {\n  _useEffect = useEffect;\n  _useLocation = useLocation;\n  _useMatches = useMatches;\n  _instrumentNavigation = instrumentNavigation;\n  _customStartTransaction = customStartTransaction;\n}\n\nexport { remixRouterInstrumentation, setGlobals, startPageloadSpan, withSentry };\n//# sourceMappingURL=performance.js.map\n"],"names":["applyAggregateErrorsToEvent","exceptionFromErrorImplementation","parser","maxValueLimit","key","limit","event","hint","isInstanceOf","originalException","truncateAggregateExceptions","aggregateExceptionsFromError","error","prevExceptions","exception","exceptionId","newExceptions","applyExceptionGroupFieldsForParentException","newException","newExceptionId","applyExceptionGroupFieldsForChildException","childError","i","source","parentId","exceptions","maxValueLength","truncate","DSN_REGEX","isValidProtocol","protocol","dsnToString","dsn","withPassword","host","path","pass","port","projectId","publicKey","dsnFromString","str","match","consoleSandbox","lastPath","split","projectMatch","dsnFromComponents","components","validateDsn","DEBUG_BUILD","component","logger","makeDsn","from","SentryError","message","logLevel","handlers","instrumented","addHandler","type","handler","maybeInstrument","instrumentFn","triggerHandlers","data","typeHandlers","e","getFunctionName","addConsoleInstrumentationHandler","instrumentConsole","GLOBAL_OBJ","CONSOLE_LEVELS","level","fill","originalConsoleMethod","originalConsoleMethods","args","log","WINDOW","DEBOUNCE_DURATION","debounceTimerID","lastCapturedEventType","lastCapturedEventTargetId","addClickKeypressInstrumentationHandler","instrumentDOM","triggerDOMHandler","globalDOMEventHandler","makeDOMEventHandler","target","proto","originalAddEventListener","listener","options","el","handlerForType","originalRemoveEventListener","isSimilarToLastCapturedEvent","shouldSkipDOMEvent","eventType","globalListener","getEventTarget","addNonEnumerableProperty","uuid4","name","getGlobalObject","supportsFetch","isNativeFetch","func","supportsNativeFetch","result","doc","sandbox","err","addFetchInstrumentationHandler","instrumentFetch","originalFetch","method","url","parseFetchArgs","handlerData","response","finishedHandlerData","erroredHandlerData","hasProp","obj","prop","getUrlFromResource","resource","fetchArgs","arg","_oldOnErrorHandler","addGlobalErrorInstrumentationHandler","instrumentError","msg","line","column","_oldOnUnhandledRejectionHandler","addGlobalUnhandledRejectionInstrumentationHandler","instrumentUnhandledRejection","supportsHistory","chrome","isChromePackagedApp","hasHistoryApi","lastHref","addHistoryInstrumentationHandler","instrumentHistory","oldOnPopState","to","historyReplacementFunction","originalHistoryFunction","SENTRY_XHR_DATA_KEY","addXhrInstrumentationHandler","instrumentXHR","xhrproto","originalOpen","startTimestamp","isString","parseUrl","onreadystatechangeHandler","xhrInfo","original","readyStateArgs","setRequestHeaderArgs","header","value","originalSend","sentryXhrData","makePromiseBuffer","buffer","isReady","remove","task","add","taskProducer","rejectedSyncPromise","drain","timeout","SyncPromise","resolve","reject","counter","capturedSetTimeout","item","resolvedSyncPromise","query","fragment","validSeverityLevels","severityLevelFromString","createEnvelope","headers","items","addItemToEnvelope","envelope","newItem","forEachEnvelopeItem","callback","envelopeItems","envelopeItem","envelopeItemType","encodeUTF8","input","textEncoder","serializeEnvelope","envHeaders","parts","append","next","itemHeaders","payload","stringifiedPayload","normalize","concatBuffers","buffers","totalLength","acc","buf","merged","offset","createAttachmentEnvelopeItem","attachment","dropUndefinedKeys","ITEM_TYPE_TO_DATA_CATEGORY_MAP","envelopeItemTypeToDataCategory","getSdkMetadataForEnvelopeHeader","metadataOrEvent","version","createEventEnvelopeHeaders","sdkInfo","tunnel","dynamicSamplingContext","createClientReportEnvelope","discarded_events","timestamp","clientReportItem","dateTimestampInSeconds","DEFAULT_RETRY_AFTER","parseRetryAfterHeader","now","headerDelay","headerDate","disabledUntil","limits","category","isRateLimited","updateRateLimits","statusCode","updatedRateLimits","rateLimitHeader","retryAfterHeader","retryAfter","categories","delay","_optionalChain","ops","lastAccessLHS","op","fn","hasTracingEnabled","maybeOptions","client","getClient","startInactiveSpan","context","spanContext","normalizeContext","hub","getCurrentHub","parentSpan","getActiveSpan","temporaryScope","getCurrentScope","createChildSpanOrTransaction","forceTransaction","scope","isolationScope","getIsolationScope","span","dsc","getDynamicSamplingContextFromSpan","traceId","parentSpanId","sampled","spanIsSampled","setCapturedScopesOnSpan","ctx","spanTimeInputToSeconds","SCOPE_ON_START_SPAN_FIELD","ISOLATION_SCOPE_ON_START_SPAN_FIELD","getCapturedScopesOnSpan","SEMANTIC_ATTRIBUTE_SENTRY_SOURCE","SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE","SEMANTIC_ATTRIBUTE_SENTRY_OP","SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN","SEMANTIC_ATTRIBUTE_PROFILE_ID","enhanceEventWithSdkInfo","createSessionEnvelope","session","metadata","envelopeHeaders","createEventEnvelope","SENTRY_API_VERSION","getBaseApiEndpoint","_getIngestEndpoint","_encodedAuth","urlEncode","getEnvelopeEndpointWithUrlEncodedAuth","tunnelOrOptions","getReportDialogEndpoint","dsnLike","dialogOptions","endpoint","encodedOptions","user","installedIntegrations","filterDuplicates","integrations","integrationsByName","currentInstance","existingInstance","k","getIntegrationsToSetup","defaultIntegrations","userIntegrations","integration","arrayify","finalIntegrations","debugIndex","findIndex","debugInstance","setupIntegrations","integrationIndex","setupIntegration","afterSetupIntegrations","addGlobalEventProcessor","processor","arr","convertIntegrationFnToClass","defineIntegration","serializeMetricBuckets","metricBucketItems","out","tagEntries","maybeTags","createMetricEnvelope","createMetricEnvelopeItem","ALREADY_SEEN_ERROR","BaseClient","checkOrSetAlreadyCaught","eventId","eventMessage","isParameterizedString","promisedEvent","isPrimitive","capturedSpanScope","updateSession","transport","clientFinished","transportFlushed","eventProcessor","forceInitialize","integrationId","integrationName","isAlreadyInstalled","env","promise","sendResponse","reason","_event","metricsEnvelope","hook","rest","crashed","errored","ex","mechanism","sessionNonTerminal","ticked","tick","interval","prepareEvent","evt","propagationContext","trace_id","spanId","getDynamicSamplingContextFromClient","finalEvent","sentryError","sampleRate","isTransaction","isTransactionEvent","isError","isErrorEvent","beforeSendLabel","dataCategory","capturedSpanIsolationScope","prepared","processBeforeSend","_validateBeforeSendResult","processedEvent","transactionInfo","outcomes","beforeSendResult","invalidValueError","isThenable","isPlainObject","beforeSend","beforeSendTransaction","addEventProcessor","initAndBind","clientClass","setCurrentClient","initializeClient","top","DEFAULT_TRANSPORT_BUFFER_SIZE","createTransport","makeRequest","rateLimits","flush","send","filteredEnvelopeItems","envelopeItemDataCategory","getEventForEnvelopeItem","filteredEnvelope","recordEnvelopeLoss","requestTask","applySdkMetadata","names","SDK_VERSION","DEFAULT_IGNORE_ERRORS","DEFAULT_IGNORE_TRANSACTIONS","INTEGRATION_NAME","_inboundFiltersIntegration","_hint","clientOptions","mergedOptions","_mergeOptions","_shouldDropEvent","inboundFiltersIntegration","internalOptions","_isSentryError","getEventDescription","_isIgnoredError","_isIgnoredTransaction","_isDeniedUrl","_getEventFilterUrl","_isAllowedUrl","ignoreErrors","_getPossibleEventMessages","stringMatchesSomePattern","ignoreTransactions","denyUrls","allowUrls","possibleMessages","lastException","_getLastValidUrl","frames","frame","originalFunctionToString","SETUP_CLIENTS","_functionToStringIntegration","originalFunction","getOriginalFunction","functionToStringIntegration","startBrowserTracingPageLoadSpan","spanOptions","spanToJSON","startBrowserTracingNavigationSpan","ignoreOnError","shouldIgnoreOnError","ignoreNextOnError","wrap","before","wrapper","sentryWrapped","wrappedArguments","withScope","addExceptionTypeValue","addExceptionMechanism","captureException","property","markFunctionWrapped","exceptionFromError","stackParser","parseStackFrames","extractMessage","eventFromPlainObject","syntheticException","isUnhandledRejection","normalizeDepth","isEvent","getNonErrorObjectExceptionValue","normalizeToSize","eventFromError","stacktrace","popSize","getPopSize","reactMinifiedRegexp","eventFromException","attachStacktrace","eventFromUnknownInput","eventFromMessage","eventFromString","isDOMError","isDOMException","domException","__sentry_template_string__","__sentry_template_values__","keys","extractExceptionKeysForMessage","captureType","getObjectClassName","prototype","createUserFeedbackEnvelope","feedback","createUserFeedbackEnvelopeItem","BrowserClient","sdkSource","getSDKSource","cachedFetchImpl","getNativeFetchImplementation","document","fetchImpl","contentWindow","clearCachedFetchImplementation","makeFetchTransport","nativeFetch","pendingBodySize","pendingCount","request","requestSize","requestOptions","XHR_READYSTATE_DONE","makeXHRTransport","xhr","UNKNOWN_FUNCTION","CHROME_PRIORITY","WINJS_PRIORITY","GECKO_PRIORITY","createFrame","filename","lineno","colno","chromeRegex","chromeEvalRegex","subMatch","extractSafariExtensionDetails","chromeStackLineParser","geckoREgex","geckoEvalRegex","gecko","geckoStackLineParser","winjsRegex","winjs","winjsStackLineParser","defaultStackLineParsers","defaultStackParser","createStackParser","isSafariExtension","isSafariWebExtension","MAX_ALLOWED_STRING_LENGTH","_breadcrumbsIntegration","_options","_getConsoleBreadcrumbHandler","_getDomBreadcrumbHandler","_getXhrBreadcrumbHandler","_getFetchBreadcrumbHandler","_getHistoryBreadcrumbHandler","_getSentryBreadcrumbHandler","breadcrumbsIntegration","addBreadcrumb","dom","componentName","keyAttrs","maxStringLength","element","_isEvent","htmlTreeAsString","getComponentName","breadcrumb","safeJoin","endTimestamp","status_code","body","parsedLoc","parsedFrom","parsedTo","_dedupeIntegration","previousEvent","currentEvent","dedupeIntegration","_isSameMessageEvent","_isSameExceptionEvent","currentMessage","previousMessage","_isSameFingerprint","_isSameStacktrace","previousException","_getExceptionFromEvent","currentException","currentFrames","_getFramesFromEvent","previousFrames","frameA","frameB","currentFingerprint","previousFingerprint","_globalHandlersIntegration","_installGlobalOnErrorHandler","globalHandlerLog","_installGlobalOnUnhandledRejectionHandler","globalHandlersIntegration","getOptions","_eventFromIncompleteOnError","_enhanceEventWithInitialFrame","captureEvent","_getUnhandledRejectionError","_eventFromRejectionWithPrimitive","ERROR_TYPES_RE","groups","ev","ev0","ev0s","ev0sf","getLocationHref","_httpContextIntegration","referrer","userAgent","httpContextIntegration","DEFAULT_KEY","DEFAULT_LIMIT","_linkedErrorsIntegration","linkedErrorsIntegration","DEFAULT_EVENT_TARGET","_browserApiErrorsIntegration","_wrapTimeFunction","_wrapRAF","_wrapXHR","eventTargetOption","_wrapEventTarget","browserApiErrorsIntegration","originalCallback","wrapOptions","globalObject","eventName","wrappedEventHandler","originalEventHandler","getDefaultIntegrations","init","stackParserFromStackParserOptions","startSessionTracking","showReportDialog","script","onClose","reportDialogClosedMessageHandler","injectionPoint","startSession","captureSession","b","c","d","f","g","h","l","m","n","p","q","r","t","v","w","x","y","z","a","u","A","reactIs_production_min","reactIsModule","require$$0","reactIs","REACT_STATICS","KNOWN_STATICS","FORWARD_REF_STATICS","MEMO_STATICS","TYPE_STATICS","getStatics","defineProperty","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","targetStatics","sourceStatics","descriptor","hoistNonReactStatics_cjs","_jsxFileName","isAtLeastReact17","major","UNKNOWN_COMPONENT","INITIAL_STATE","setCause","cause","seenErrors","recurse","ErrorBoundary","React.Component","props","componentStack","beforeCapture","onError","showDialog","React.version","errorBoundaryError","onMount","onUnmount","onReset","fallback","children","state","React.isValidElement","withErrorBoundary","WrappedComponent","errorBoundaryOptions","componentDisplayName","Wrapped","React.createElement","getFutureFlagsBrowser","window","readRemixVersionFromLoader","_","_2","_3","_4","_5","DEFAULT_TAGS","_useEffect","_useLocation","_useMatches","_customStartTransaction","_instrumentNavigation","getInitPathName","isRemixV2","remixVersion","startPageloadSpan","initPathName","startNavigationSpan","matches","remixRouterInstrumentation","useEffect","useLocation","useMatches","customStartTransaction","startTransactionOnPageLoad","startTransactionOnLocationChange","setGlobals","withSentry","OrigApp","isNodeEnv","isBaseLocation","location","activeRootSpan","transaction","getRootSpan","instrumentNavigation"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]}