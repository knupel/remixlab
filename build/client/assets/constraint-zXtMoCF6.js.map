{"version":3,"file":"constraint-zXtMoCF6.js","sources":["../../../node_modules/@conform-to/zod/constraint.mjs"],"sourcesContent":["import { objectSpread2 as _objectSpread2 } from './_virtual/_rollupPluginBabelHelpers.mjs';\nimport { ZodObject, ZodEffects, ZodPipeline, ZodIntersection, ZodUnion, ZodDiscriminatedUnion, ZodArray, ZodString, ZodOptional, ZodDefault, ZodNumber, ZodEnum, ZodTuple } from 'zod';\n\nvar keys = ['required', 'minLength', 'maxLength', 'min', 'max', 'step', 'multiple', 'pattern'];\nfunction getZodConstraint(schema) {\n  function updateConstraint(schema, data) {\n    var _data$name;\n    var name = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    var constraint = name !== '' ? (_data$name = data[name]) !== null && _data$name !== void 0 ? _data$name : data[name] = {\n      required: true\n    } : {};\n    if (schema instanceof ZodObject) {\n      for (var key in schema.shape) {\n        updateConstraint(schema.shape[key], data, name ? \"\".concat(name, \".\").concat(key) : key);\n      }\n    } else if (schema instanceof ZodEffects) {\n      updateConstraint(schema.innerType(), data, name);\n    } else if (schema instanceof ZodPipeline) {\n      // FIXME: What to do with .pipe()?\n      updateConstraint(schema._def.out, data, name);\n    } else if (schema instanceof ZodIntersection) {\n      var leftResult = {};\n      var rightResult = {};\n      updateConstraint(schema._def.left, leftResult, name);\n      updateConstraint(schema._def.right, rightResult, name);\n      Object.assign(data, leftResult, rightResult);\n    } else if (schema instanceof ZodUnion || schema instanceof ZodDiscriminatedUnion) {\n      Object.assign(data, schema.options.map(option => {\n        var result = {};\n        updateConstraint(option, result, name);\n        return result;\n      }).reduce((prev, next) => {\n        var list = new Set([...Object.keys(prev), ...Object.keys(next)]);\n        var result = {};\n        for (var _name of list) {\n          var prevConstraint = prev[_name];\n          var nextConstraint = next[_name];\n          if (prevConstraint && nextConstraint) {\n            var _constraint = {};\n            result[_name] = _constraint;\n            for (var _key of keys) {\n              if (typeof prevConstraint[_key] !== 'undefined' && typeof nextConstraint[_key] !== 'undefined' && prevConstraint[_key] === nextConstraint[_key]) {\n                // @ts-expect-error Both are on the same type\n                _constraint[_key] = prevConstraint[_key];\n              }\n            }\n          } else {\n            result[_name] = _objectSpread2(_objectSpread2(_objectSpread2({}, prevConstraint), nextConstraint), {}, {\n              required: false\n            });\n          }\n        }\n        return result;\n      }));\n    } else if (name === '') {\n      // All the cases below are not allowed on root\n      throw new Error('Unsupported schema');\n    } else if (schema instanceof ZodArray) {\n      constraint.multiple = true;\n      updateConstraint(schema.element, data, \"\".concat(name, \"[]\"));\n    } else if (schema instanceof ZodString) {\n      if (schema.minLength !== null) {\n        constraint.minLength = schema.minLength;\n      }\n      if (schema.maxLength !== null) {\n        constraint.maxLength = schema.maxLength;\n      }\n    } else if (schema instanceof ZodOptional) {\n      constraint.required = false;\n      updateConstraint(schema.unwrap(), data, name);\n    } else if (schema instanceof ZodDefault) {\n      constraint.required = false;\n      updateConstraint(schema.removeDefault(), data, name);\n    } else if (schema instanceof ZodNumber) {\n      if (schema.minValue !== null) {\n        constraint.min = schema.minValue;\n      }\n      if (schema.maxValue !== null) {\n        constraint.max = schema.maxValue;\n      }\n    } else if (schema instanceof ZodEnum) {\n      constraint.pattern = schema.options.map(option =>\n      // To escape unsafe characters on regex\n      option.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&').replace(/-/g, '\\\\x2d')).join('|');\n    } else if (schema instanceof ZodTuple) {\n      for (var i = 0; i < schema.items.length; i++) {\n        updateConstraint(schema.items[i], data, \"\".concat(name, \"[\").concat(i, \"]\"));\n      }\n    } else ;\n  }\n  var result = {};\n  updateConstraint(schema, result);\n  return result;\n}\n\nexport { getZodConstraint };\n"],"names":["keys","getZodConstraint","schema","updateConstraint","data","_data$name","name","constraint","ZodObject","key","ZodEffects","ZodPipeline","ZodIntersection","leftResult","rightResult","ZodUnion","ZodDiscriminatedUnion","option","result","prev","next","list","_name","prevConstraint","nextConstraint","_constraint","_key","_objectSpread2","ZodArray","ZodString","ZodOptional","ZodDefault","ZodNumber","ZodEnum","ZodTuple","i"],"mappings":"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","x_google_ignoreList":[0]}