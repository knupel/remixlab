{"version":3,"file":"monitoring.client-51M8m2bZ.js","sources":["../../../node_modules/@sentry/utils/esm/isBrowser.js","../../../node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js","../../../node_modules/@sentry/core/esm/tracing/utils.js","../../../node_modules/@sentry/core/esm/tracing/errors.js","../../../node_modules/@sentry/core/esm/tracing/spanstatus.js","../../../node_modules/@sentry/core/esm/tracing/span.js","../../../node_modules/@sentry/core/esm/tracing/transaction.js","../../../node_modules/@sentry/core/esm/tracing/idletransaction.js","../../../node_modules/@sentry/core/esm/tracing/sampling.js","../../../node_modules/@sentry/core/esm/tracing/hubextensions.js","../../../node_modules/@sentry/core/esm/tracing/measurement.js","../../../node_modules/@sentry/core/esm/utils/isSentryRequestUrl.js","../../../node_modules/@sentry-internal/tracing/esm/common/debug-build.js","../../../node_modules/@sentry-internal/tracing/esm/browser/types.js","../../../node_modules/@sentry-internal/tracing/esm/browser/backgroundtab.js","../../../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/bindReporter.js","../../../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/generateUniqueID.js","../../../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getNavigationEntry.js","../../../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getActivationStart.js","../../../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/initMetric.js","../../../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/observe.js","../../../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/onHidden.js","../../../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getCLS.js","../../../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getVisibilityWatcher.js","../../../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getFID.js","../../../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getLCP.js","../../../node_modules/@sentry-internal/tracing/esm/browser/instrument.js","../../../node_modules/@sentry-internal/tracing/esm/browser/metrics/utils.js","../../../node_modules/@sentry-internal/tracing/esm/browser/metrics/index.js","../../../node_modules/@sentry-internal/tracing/esm/common/fetch.js","../../../node_modules/@sentry-internal/tracing/esm/browser/request.js","../../../node_modules/@sentry-internal/tracing/esm/browser/router.js","../../../node_modules/@sentry-internal/tracing/esm/browser/browsertracing.js","../../../node_modules/@sentry/replay/esm/index.js","../../../node_modules/@sentry/browser/esm/profiling/utils.js","../../../node_modules/@sentry/browser/esm/profiling/hubextensions.js","../../../node_modules/@sentry/browser/esm/profiling/integration.js","../../../node_modules/@sentry/react/esm/sdk.js","../../../node_modules/@sentry/remix/esm/index.client.js","../../../app/utils/monitoring.client.tsx"],"sourcesContent":["import { isNodeEnv } from './node.js';\nimport { GLOBAL_OBJ } from './worldwide.js';\n\n/**\n * Returns true if we are in the browser.\n */\nfunction isBrowser() {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof window !== 'undefined' && (!isNodeEnv() || isElectronNodeRenderer());\n}\n\n// Electron renderers with nodeIntegration enabled are detected as Node.js so we specifically test for them\nfunction isElectronNodeRenderer() {\n  return (\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    (GLOBAL_OBJ ).process !== undefined && ((GLOBAL_OBJ ).process ).type === 'renderer'\n  );\n}\n\nexport { isBrowser };\n//# sourceMappingURL=isBrowser.js.map\n","// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n/**\n * Polyfill for the nullish coalescing operator (`??`).\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nfunction _nullishCoalesce(lhs, rhsFn) {\n  // by checking for loose equality to `null`, we catch both `null` and `undefined`\n  return lhs != null ? lhs : rhsFn();\n}\n\n// Sucrase version:\n// function _nullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return rhsFn();\n//   }\n// }\n\nexport { _nullishCoalesce };\n//# sourceMappingURL=_nullishCoalesce.js.map\n","import { extractTraceparentData as extractTraceparentData$1 } from '@sentry/utils';\nexport { stripUrlQueryAndFragment } from '@sentry/utils';\nimport { getCurrentHub } from '../hub.js';\n\n/**\n * Grabs active transaction off scope.\n *\n * @deprecated You should not rely on the transaction, but just use `startSpan()` APIs instead.\n */\nfunction getActiveTransaction(maybeHub) {\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = maybeHub || getCurrentHub();\n  // eslint-disable-next-line deprecation/deprecation\n  const scope = hub.getScope();\n  // eslint-disable-next-line deprecation/deprecation\n  return scope.getTransaction() ;\n}\n\n/**\n * The `extractTraceparentData` function and `TRACEPARENT_REGEXP` constant used\n * to be declared in this file. It was later moved into `@sentry/utils` as part of a\n * move to remove `@sentry/tracing` dependencies from `@sentry/node` (`extractTraceparentData`\n * is the only tracing function used by `@sentry/node`).\n *\n * These exports are kept here for backwards compatability's sake.\n *\n * See https://github.com/getsentry/sentry-javascript/issues/4642 for more details.\n *\n * @deprecated Import this function from `@sentry/utils` instead\n */\nconst extractTraceparentData = extractTraceparentData$1;\n\nexport { extractTraceparentData, getActiveTransaction };\n//# sourceMappingURL=utils.js.map\n","import { addGlobalErrorInstrumentationHandler, addGlobalUnhandledRejectionInstrumentationHandler, logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { getActiveTransaction } from './utils.js';\n\nlet errorsInstrumented = false;\n\n/**\n * Configures global error listeners\n */\nfunction registerErrorInstrumentation() {\n  if (errorsInstrumented) {\n    return;\n  }\n\n  errorsInstrumented = true;\n  addGlobalErrorInstrumentationHandler(errorCallback);\n  addGlobalUnhandledRejectionInstrumentationHandler(errorCallback);\n}\n\n/**\n * If an error or unhandled promise occurs, we mark the active transaction as failed\n */\nfunction errorCallback() {\n  // eslint-disable-next-line deprecation/deprecation\n  const activeTransaction = getActiveTransaction();\n  if (activeTransaction) {\n    const status = 'internal_error';\n    DEBUG_BUILD && logger.log(`[Tracing] Transaction: ${status} -> Global error occured`);\n    activeTransaction.setStatus(status);\n  }\n}\n\n// The function name will be lost when bundling but we need to be able to identify this listener later to maintain the\n// node.js default exit behaviour\nerrorCallback.tag = 'sentry_tracingErrorCallback';\n\nexport { registerErrorInstrumentation };\n//# sourceMappingURL=errors.js.map\n","/** The status of an Span.\n *\n * @deprecated Use string literals - if you require type casting, cast to SpanStatusType type\n */\nvar SpanStatus; (function (SpanStatus) {\n  /** The operation completed successfully. */\n  const Ok = 'ok'; SpanStatus[\"Ok\"] = Ok;\n  /** Deadline expired before operation could complete. */\n  const DeadlineExceeded = 'deadline_exceeded'; SpanStatus[\"DeadlineExceeded\"] = DeadlineExceeded;\n  /** 401 Unauthorized (actually does mean unauthenticated according to RFC 7235) */\n  const Unauthenticated = 'unauthenticated'; SpanStatus[\"Unauthenticated\"] = Unauthenticated;\n  /** 403 Forbidden */\n  const PermissionDenied = 'permission_denied'; SpanStatus[\"PermissionDenied\"] = PermissionDenied;\n  /** 404 Not Found. Some requested entity (file or directory) was not found. */\n  const NotFound = 'not_found'; SpanStatus[\"NotFound\"] = NotFound;\n  /** 429 Too Many Requests */\n  const ResourceExhausted = 'resource_exhausted'; SpanStatus[\"ResourceExhausted\"] = ResourceExhausted;\n  /** Client specified an invalid argument. 4xx. */\n  const InvalidArgument = 'invalid_argument'; SpanStatus[\"InvalidArgument\"] = InvalidArgument;\n  /** 501 Not Implemented */\n  const Unimplemented = 'unimplemented'; SpanStatus[\"Unimplemented\"] = Unimplemented;\n  /** 503 Service Unavailable */\n  const Unavailable = 'unavailable'; SpanStatus[\"Unavailable\"] = Unavailable;\n  /** Other/generic 5xx. */\n  const InternalError = 'internal_error'; SpanStatus[\"InternalError\"] = InternalError;\n  /** Unknown. Any non-standard HTTP status code. */\n  const UnknownError = 'unknown_error'; SpanStatus[\"UnknownError\"] = UnknownError;\n  /** The operation was cancelled (typically by the user). */\n  const Cancelled = 'cancelled'; SpanStatus[\"Cancelled\"] = Cancelled;\n  /** Already exists (409) */\n  const AlreadyExists = 'already_exists'; SpanStatus[\"AlreadyExists\"] = AlreadyExists;\n  /** Operation was rejected because the system is not in a state required for the operation's */\n  const FailedPrecondition = 'failed_precondition'; SpanStatus[\"FailedPrecondition\"] = FailedPrecondition;\n  /** The operation was aborted, typically due to a concurrency issue. */\n  const Aborted = 'aborted'; SpanStatus[\"Aborted\"] = Aborted;\n  /** Operation was attempted past the valid range. */\n  const OutOfRange = 'out_of_range'; SpanStatus[\"OutOfRange\"] = OutOfRange;\n  /** Unrecoverable data loss or corruption */\n  const DataLoss = 'data_loss'; SpanStatus[\"DataLoss\"] = DataLoss;\n})(SpanStatus || (SpanStatus = {}));\n\n/**\n * Converts a HTTP status code into a {@link SpanStatusType}.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\nfunction getSpanStatusFromHttpCode(httpStatus) {\n  if (httpStatus < 400 && httpStatus >= 100) {\n    return 'ok';\n  }\n\n  if (httpStatus >= 400 && httpStatus < 500) {\n    switch (httpStatus) {\n      case 401:\n        return 'unauthenticated';\n      case 403:\n        return 'permission_denied';\n      case 404:\n        return 'not_found';\n      case 409:\n        return 'already_exists';\n      case 413:\n        return 'failed_precondition';\n      case 429:\n        return 'resource_exhausted';\n      default:\n        return 'invalid_argument';\n    }\n  }\n\n  if (httpStatus >= 500 && httpStatus < 600) {\n    switch (httpStatus) {\n      case 501:\n        return 'unimplemented';\n      case 503:\n        return 'unavailable';\n      case 504:\n        return 'deadline_exceeded';\n      default:\n        return 'internal_error';\n    }\n  }\n\n  return 'unknown_error';\n}\n\n/**\n * Converts a HTTP status code into a {@link SpanStatusType}.\n *\n * @deprecated Use {@link spanStatusFromHttpCode} instead.\n * This export will be removed in v8 as the signature contains a typo.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\nconst spanStatusfromHttpCode = getSpanStatusFromHttpCode;\n\n/**\n * Sets the Http status attributes on the current span based on the http code.\n * Additionally, the span's status is updated, depending on the http code.\n */\nfunction setHttpStatus(span, httpStatus) {\n  // TODO (v8): Remove these calls\n  // Relay does not require us to send the status code as a tag\n  // For now, just because users might expect it to land as a tag we keep sending it.\n  // Same with data.\n  // In v8, we replace both, simply with\n  // span.setAttribute('http.response.status_code', httpStatus);\n\n  // eslint-disable-next-line deprecation/deprecation\n  span.setTag('http.status_code', String(httpStatus));\n  // eslint-disable-next-line deprecation/deprecation\n  span.setData('http.response.status_code', httpStatus);\n\n  const spanStatus = getSpanStatusFromHttpCode(httpStatus);\n  if (spanStatus !== 'unknown_error') {\n    span.setStatus(spanStatus);\n  }\n}\n\nexport { SpanStatus, getSpanStatusFromHttpCode, setHttpStatus, spanStatusfromHttpCode };\n//# sourceMappingURL=spanstatus.js.map\n","import { uuid4, timestampInSeconds, logger, dropUndefinedKeys } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { getMetricSummaryJsonForSpan } from '../metrics/metric-summary.js';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_PROFILE_ID } from '../semanticAttributes.js';\nimport { getRootSpan } from '../utils/getRootSpan.js';\nimport { TRACE_FLAG_SAMPLED, TRACE_FLAG_NONE, spanToJSON, spanTimeInputToSeconds, spanToTraceHeader, spanToTraceContext } from '../utils/spanUtils.js';\nimport { setHttpStatus } from './spanstatus.js';\n\n/**\n * Keeps track of finished spans for a given transaction\n * @internal\n * @hideconstructor\n * @hidden\n */\nclass SpanRecorder {\n\n   constructor(maxlen = 1000) {\n    this._maxlen = maxlen;\n    this.spans = [];\n  }\n\n  /**\n   * This is just so that we don't run out of memory while recording a lot\n   * of spans. At some point we just stop and flush out the start of the\n   * trace tree (i.e.the first n spans with the smallest\n   * start_timestamp).\n   */\n   add(span) {\n    if (this.spans.length > this._maxlen) {\n      // eslint-disable-next-line deprecation/deprecation\n      span.spanRecorder = undefined;\n    } else {\n      this.spans.push(span);\n    }\n  }\n}\n\n/**\n * Span contains all data about a span\n */\nclass Span  {\n  /**\n   * Tags for the span.\n   * @deprecated Use `spanToJSON(span).atttributes` instead.\n   */\n\n  /**\n   * Data for the span.\n   * @deprecated Use `spanToJSON(span).atttributes` instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  /**\n   * List of spans that were finalized\n   *\n   * @deprecated This property will no longer be public. Span recording will be handled internally.\n   */\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top level `Sentry.getRootSpan()` instead\n   */\n\n  /**\n   * The instrumenter that created this span.\n   *\n   * TODO (v8): This can probably be replaced by an `instanceOf` check of the span class.\n   *            the instrumenter can only be sentry or otel so we can check the span instance\n   *            to verify which one it is and remove this field entirely.\n   *\n   * @deprecated This field will be removed.\n   */\n\n  /** Epoch timestamp in seconds when the span started. */\n\n  /** Epoch timestamp in seconds when the span ended. */\n\n  /** Internal keeper of the status */\n\n  /**\n   * You should never call the constructor manually, always use `Sentry.startTransaction()`\n   * or call `startChild()` on an existing span.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n   constructor(spanContext = {}) {\n    this._traceId = spanContext.traceId || uuid4();\n    this._spanId = spanContext.spanId || uuid4().substring(16);\n    this._startTime = spanContext.startTimestamp || timestampInSeconds();\n    // eslint-disable-next-line deprecation/deprecation\n    this.tags = spanContext.tags ? { ...spanContext.tags } : {};\n    // eslint-disable-next-line deprecation/deprecation\n    this.data = spanContext.data ? { ...spanContext.data } : {};\n    // eslint-disable-next-line deprecation/deprecation\n    this.instrumenter = spanContext.instrumenter || 'sentry';\n\n    this._attributes = {};\n    this.setAttributes({\n      [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: spanContext.origin || 'manual',\n      [SEMANTIC_ATTRIBUTE_SENTRY_OP]: spanContext.op,\n      ...spanContext.attributes,\n    });\n\n    // eslint-disable-next-line deprecation/deprecation\n    this._name = spanContext.name || spanContext.description;\n\n    if (spanContext.parentSpanId) {\n      this._parentSpanId = spanContext.parentSpanId;\n    }\n    // We want to include booleans as well here\n    if ('sampled' in spanContext) {\n      this._sampled = spanContext.sampled;\n    }\n    if (spanContext.status) {\n      this._status = spanContext.status;\n    }\n    if (spanContext.endTimestamp) {\n      this._endTime = spanContext.endTimestamp;\n    }\n    if (spanContext.exclusiveTime) {\n      this._exclusiveTime = spanContext.exclusiveTime;\n    }\n    this._measurements = spanContext.measurements ? { ...spanContext.measurements } : {};\n  }\n\n  // This rule conflicts with another eslint rule :(\n  /* eslint-disable @typescript-eslint/member-ordering */\n\n  /**\n   * An alias for `description` of the Span.\n   * @deprecated Use `spanToJSON(span).description` instead.\n   */\n   get name() {\n    return this._name || '';\n  }\n\n  /**\n   * Update the name of the span.\n   * @deprecated Use `spanToJSON(span).description` instead.\n   */\n   set name(name) {\n    this.updateName(name);\n  }\n\n  /**\n   * Get the description of the Span.\n   * @deprecated Use `spanToJSON(span).description` instead.\n   */\n   get description() {\n    return this._name;\n  }\n\n  /**\n   * Get the description of the Span.\n   * @deprecated Use `spanToJSON(span).description` instead.\n   */\n   set description(description) {\n    this._name = description;\n  }\n\n  /**\n   * The ID of the trace.\n   * @deprecated Use `spanContext().traceId` instead.\n   */\n   get traceId() {\n    return this._traceId;\n  }\n\n  /**\n   * The ID of the trace.\n   * @deprecated You cannot update the traceId of a span after span creation.\n   */\n   set traceId(traceId) {\n    this._traceId = traceId;\n  }\n\n  /**\n   * The ID of the span.\n   * @deprecated Use `spanContext().spanId` instead.\n   */\n   get spanId() {\n    return this._spanId;\n  }\n\n  /**\n   * The ID of the span.\n   * @deprecated You cannot update the spanId of a span after span creation.\n   */\n   set spanId(spanId) {\n    this._spanId = spanId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `startSpan` functions instead.\n   */\n   set parentSpanId(string) {\n    this._parentSpanId = string;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `spanToJSON(span).parent_span_id` instead.\n   */\n   get parentSpanId() {\n    return this._parentSpanId;\n  }\n\n  /**\n   * Was this span chosen to be sent as part of the sample?\n   * @deprecated Use `isRecording()` instead.\n   */\n   get sampled() {\n    return this._sampled;\n  }\n\n  /**\n   * Was this span chosen to be sent as part of the sample?\n   * @deprecated You cannot update the sampling decision of a span after span creation.\n   */\n   set sampled(sampled) {\n    this._sampled = sampled;\n  }\n\n  /**\n   * Attributes for the span.\n   * @deprecated Use `spanToJSON(span).atttributes` instead.\n   */\n   get attributes() {\n    return this._attributes;\n  }\n\n  /**\n   * Attributes for the span.\n   * @deprecated Use `setAttributes()` instead.\n   */\n   set attributes(attributes) {\n    this._attributes = attributes;\n  }\n\n  /**\n   * Timestamp in seconds (epoch time) indicating when the span started.\n   * @deprecated Use `spanToJSON()` instead.\n   */\n   get startTimestamp() {\n    return this._startTime;\n  }\n\n  /**\n   * Timestamp in seconds (epoch time) indicating when the span started.\n   * @deprecated In v8, you will not be able to update the span start time after creation.\n   */\n   set startTimestamp(startTime) {\n    this._startTime = startTime;\n  }\n\n  /**\n   * Timestamp in seconds when the span ended.\n   * @deprecated Use `spanToJSON()` instead.\n   */\n   get endTimestamp() {\n    return this._endTime;\n  }\n\n  /**\n   * Timestamp in seconds when the span ended.\n   * @deprecated Set the end time via `span.end()` instead.\n   */\n   set endTimestamp(endTime) {\n    this._endTime = endTime;\n  }\n\n  /**\n   * The status of the span.\n   *\n   * @deprecated Use `spanToJSON().status` instead to get the status.\n   */\n   get status() {\n    return this._status;\n  }\n\n  /**\n   * The status of the span.\n   *\n   * @deprecated Use `.setStatus()` instead to set or update the status.\n   */\n   set status(status) {\n    this._status = status;\n  }\n\n  /**\n   * Operation of the span\n   *\n   * @deprecated Use `spanToJSON().op` to read the op instead.\n   */\n   get op() {\n    return this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_OP] ;\n  }\n\n  /**\n   * Operation of the span\n   *\n   * @deprecated Use `startSpan()` functions to set or `span.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_OP, 'op')\n   *             to update the span instead.\n   */\n   set op(op) {\n    this.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_OP, op);\n  }\n\n  /**\n   * The origin of the span, giving context about what created the span.\n   *\n   * @deprecated Use `spanToJSON().origin` to read the origin instead.\n   */\n   get origin() {\n    return this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN] ;\n  }\n\n  /**\n   * The origin of the span, giving context about what created the span.\n   *\n   * @deprecated Use `startSpan()` functions to set the origin instead.\n   */\n   set origin(origin) {\n    this.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, origin);\n  }\n\n  /* eslint-enable @typescript-eslint/member-ordering */\n\n  /** @inheritdoc */\n   spanContext() {\n    const { _spanId: spanId, _traceId: traceId, _sampled: sampled } = this;\n    return {\n      spanId,\n      traceId,\n      traceFlags: sampled ? TRACE_FLAG_SAMPLED : TRACE_FLAG_NONE,\n    };\n  }\n\n  /**\n   * Creates a new `Span` while setting the current `Span.id` as `parentSpanId`.\n   * Also the `sampled` decision will be inherited.\n   *\n   * @deprecated Use `startSpan()`, `startSpanManual()` or `startInactiveSpan()` instead.\n   */\n   startChild(\n    spanContext,\n  ) {\n    const childSpan = new Span({\n      ...spanContext,\n      parentSpanId: this._spanId,\n      sampled: this._sampled,\n      traceId: this._traceId,\n    });\n\n    // eslint-disable-next-line deprecation/deprecation\n    childSpan.spanRecorder = this.spanRecorder;\n    // eslint-disable-next-line deprecation/deprecation\n    if (childSpan.spanRecorder) {\n      // eslint-disable-next-line deprecation/deprecation\n      childSpan.spanRecorder.add(childSpan);\n    }\n\n    const rootSpan = getRootSpan(this);\n    // TODO: still set span.transaction here until we have a more permanent solution\n    // Probably similarly to the weakmap we hold in node-experimental\n    // eslint-disable-next-line deprecation/deprecation\n    childSpan.transaction = rootSpan ;\n\n    if (DEBUG_BUILD && rootSpan) {\n      const opStr = (spanContext && spanContext.op) || '< unknown op >';\n      const nameStr = spanToJSON(childSpan).description || '< unknown name >';\n      const idStr = rootSpan.spanContext().spanId;\n\n      const logMessage = `[Tracing] Starting '${opStr}' span on transaction '${nameStr}' (${idStr}).`;\n      logger.log(logMessage);\n      this._logMessage = logMessage;\n    }\n\n    return childSpan;\n  }\n\n  /**\n   * Sets the tag attribute on the current span.\n   *\n   * Can also be used to unset a tag, by passing `undefined`.\n   *\n   * @param key Tag key\n   * @param value Tag value\n   * @deprecated Use `setAttribute()` instead.\n   */\n   setTag(key, value) {\n    // eslint-disable-next-line deprecation/deprecation\n    this.tags = { ...this.tags, [key]: value };\n    return this;\n  }\n\n  /**\n   * Sets the data attribute on the current span\n   * @param key Data key\n   * @param value Data value\n   * @deprecated Use `setAttribute()` instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   setData(key, value) {\n    // eslint-disable-next-line deprecation/deprecation\n    this.data = { ...this.data, [key]: value };\n    return this;\n  }\n\n  /** @inheritdoc */\n   setAttribute(key, value) {\n    if (value === undefined) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._attributes[key];\n    } else {\n      this._attributes[key] = value;\n    }\n  }\n\n  /** @inheritdoc */\n   setAttributes(attributes) {\n    Object.keys(attributes).forEach(key => this.setAttribute(key, attributes[key]));\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setStatus(value) {\n    this._status = value;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top-level `setHttpStatus()` instead.\n   */\n   setHttpStatus(httpStatus) {\n    setHttpStatus(this, httpStatus);\n    return this;\n  }\n\n  /**\n   * @inheritdoc\n   *\n   * @deprecated Use `.updateName()` instead.\n   */\n   setName(name) {\n    this.updateName(name);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   updateName(name) {\n    this._name = name;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `spanToJSON(span).status === 'ok'` instead.\n   */\n   isSuccess() {\n    return this._status === 'ok';\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `.end()` instead.\n   */\n   finish(endTimestamp) {\n    return this.end(endTimestamp);\n  }\n\n  /** @inheritdoc */\n   end(endTimestamp) {\n    // If already ended, skip\n    if (this._endTime) {\n      return;\n    }\n    const rootSpan = getRootSpan(this);\n    if (\n      DEBUG_BUILD &&\n      // Don't call this for transactions\n      rootSpan &&\n      rootSpan.spanContext().spanId !== this._spanId\n    ) {\n      const logMessage = this._logMessage;\n      if (logMessage) {\n        logger.log((logMessage ).replace('Starting', 'Finishing'));\n      }\n    }\n\n    this._endTime = spanTimeInputToSeconds(endTimestamp);\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `spanToTraceHeader()` instead.\n   */\n   toTraceparent() {\n    return spanToTraceHeader(this);\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `spanToJSON()` or access the fields directly instead.\n   */\n   toContext() {\n    return dropUndefinedKeys({\n      data: this._getData(),\n      description: this._name,\n      endTimestamp: this._endTime,\n      // eslint-disable-next-line deprecation/deprecation\n      op: this.op,\n      parentSpanId: this._parentSpanId,\n      sampled: this._sampled,\n      spanId: this._spanId,\n      startTimestamp: this._startTime,\n      status: this._status,\n      // eslint-disable-next-line deprecation/deprecation\n      tags: this.tags,\n      traceId: this._traceId,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Update the fields directly instead.\n   */\n   updateWithContext(spanContext) {\n    // eslint-disable-next-line deprecation/deprecation\n    this.data = spanContext.data || {};\n    // eslint-disable-next-line deprecation/deprecation\n    this._name = spanContext.name || spanContext.description;\n    this._endTime = spanContext.endTimestamp;\n    // eslint-disable-next-line deprecation/deprecation\n    this.op = spanContext.op;\n    this._parentSpanId = spanContext.parentSpanId;\n    this._sampled = spanContext.sampled;\n    this._spanId = spanContext.spanId || this._spanId;\n    this._startTime = spanContext.startTimestamp || this._startTime;\n    this._status = spanContext.status;\n    // eslint-disable-next-line deprecation/deprecation\n    this.tags = spanContext.tags || {};\n    this._traceId = spanContext.traceId || this._traceId;\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `spanToTraceContext()` util function instead.\n   */\n   getTraceContext() {\n    return spanToTraceContext(this);\n  }\n\n  /**\n   * Get JSON representation of this span.\n   *\n   * @hidden\n   * @internal This method is purely for internal purposes and should not be used outside\n   * of SDK code. If you need to get a JSON representation of a span,\n   * use `spanToJSON(span)` instead.\n   */\n   getSpanJSON() {\n    return dropUndefinedKeys({\n      data: this._getData(),\n      description: this._name,\n      op: this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_OP] ,\n      parent_span_id: this._parentSpanId,\n      span_id: this._spanId,\n      start_timestamp: this._startTime,\n      status: this._status,\n      // eslint-disable-next-line deprecation/deprecation\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      timestamp: this._endTime,\n      trace_id: this._traceId,\n      origin: this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN] ,\n      _metrics_summary: getMetricSummaryJsonForSpan(this),\n      profile_id: this._attributes[SEMANTIC_ATTRIBUTE_PROFILE_ID] ,\n      exclusive_time: this._exclusiveTime,\n      measurements: Object.keys(this._measurements).length > 0 ? this._measurements : undefined,\n    });\n  }\n\n  /** @inheritdoc */\n   isRecording() {\n    return !this._endTime && !!this._sampled;\n  }\n\n  /**\n   * Convert the object to JSON.\n   * @deprecated Use `spanToJSON(span)` instead.\n   */\n   toJSON() {\n    return this.getSpanJSON();\n  }\n\n  /**\n   * Get the merged data for this span.\n   * For now, this combines `data` and `attributes` together,\n   * until eventually we can ingest `attributes` directly.\n   */\n   _getData()\n\n {\n    // eslint-disable-next-line deprecation/deprecation\n    const { data, _attributes: attributes } = this;\n\n    const hasData = Object.keys(data).length > 0;\n    const hasAttributes = Object.keys(attributes).length > 0;\n\n    if (!hasData && !hasAttributes) {\n      return undefined;\n    }\n\n    if (hasData && hasAttributes) {\n      return {\n        ...data,\n        ...attributes,\n      };\n    }\n\n    return hasData ? data : attributes;\n  }\n}\n\nexport { Span, SpanRecorder };\n//# sourceMappingURL=span.js.map\n","import { dropUndefinedKeys, logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { getCurrentHub } from '../hub.js';\nimport { getMetricSummaryJsonForSpan } from '../metrics/metric-summary.js';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE } from '../semanticAttributes.js';\nimport { spanTimeInputToSeconds, spanToJSON, spanToTraceContext } from '../utils/spanUtils.js';\nimport { getDynamicSamplingContextFromSpan } from './dynamicSamplingContext.js';\nimport { Span, SpanRecorder } from './span.js';\nimport { getCapturedScopesOnSpan } from './trace.js';\n\n/** JSDoc */\nclass Transaction extends Span  {\n  /**\n   * The reference to the current hub.\n   */\n\n  // DO NOT yet remove this property, it is used in a hack for v7 backwards compatibility.\n\n  /**\n   * This constructor should never be called manually. Those instrumenting tracing should use\n   * `Sentry.startTransaction()`, and internal methods should use `hub.startTransaction()`.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   *\n   * @deprecated Transactions will be removed in v8. Use spans instead.\n   */\n   constructor(transactionContext, hub) {\n    super(transactionContext);\n    this._contexts = {};\n\n    // eslint-disable-next-line deprecation/deprecation\n    this._hub = hub || getCurrentHub();\n\n    this._name = transactionContext.name || '';\n\n    this._metadata = {\n      // eslint-disable-next-line deprecation/deprecation\n      ...transactionContext.metadata,\n    };\n\n    this._trimEnd = transactionContext.trimEnd;\n\n    // this is because transactions are also spans, and spans have a transaction pointer\n    // TODO (v8): Replace this with another way to set the root span\n    // eslint-disable-next-line deprecation/deprecation\n    this.transaction = this;\n\n    // If Dynamic Sampling Context is provided during the creation of the transaction, we freeze it as it usually means\n    // there is incoming Dynamic Sampling Context. (Either through an incoming request, a baggage meta-tag, or other means)\n    const incomingDynamicSamplingContext = this._metadata.dynamicSamplingContext;\n    if (incomingDynamicSamplingContext) {\n      // We shallow copy this in case anything writes to the original reference of the passed in `dynamicSamplingContext`\n      this._frozenDynamicSamplingContext = { ...incomingDynamicSamplingContext };\n    }\n  }\n\n  // This sadly conflicts with the getter/setter ordering :(\n  /* eslint-disable @typescript-eslint/member-ordering */\n\n  /**\n   * Getter for `name` property.\n   * @deprecated Use `spanToJSON(span).description` instead.\n   */\n   get name() {\n    return this._name;\n  }\n\n  /**\n   * Setter for `name` property, which also sets `source` as custom.\n   * @deprecated Use `updateName()` and `setMetadata()` instead.\n   */\n   set name(newName) {\n    // eslint-disable-next-line deprecation/deprecation\n    this.setName(newName);\n  }\n\n  /**\n   * Get the metadata for this transaction.\n   * @deprecated Use `spanGetMetadata(transaction)` instead.\n   */\n   get metadata() {\n    // We merge attributes in for backwards compatibility\n    return {\n      // Defaults\n      // eslint-disable-next-line deprecation/deprecation\n      source: 'custom',\n      spanMetadata: {},\n\n      // Legacy metadata\n      ...this._metadata,\n\n      // From attributes\n      ...(this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] && {\n        source: this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] ,\n      }),\n      ...(this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE] && {\n        sampleRate: this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE] ,\n      }),\n    };\n  }\n\n  /**\n   * Update the metadata for this transaction.\n   * @deprecated Use `spanGetMetadata(transaction)` instead.\n   */\n   set metadata(metadata) {\n    this._metadata = metadata;\n  }\n\n  /* eslint-enable @typescript-eslint/member-ordering */\n\n  /**\n   * Setter for `name` property, which also sets `source` on the metadata.\n   *\n   * @deprecated Use `.updateName()` and `.setAttribute()` instead.\n   */\n   setName(name, source = 'custom') {\n    this._name = name;\n    this.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, source);\n  }\n\n  /** @inheritdoc */\n   updateName(name) {\n    this._name = name;\n    return this;\n  }\n\n  /**\n   * Attaches SpanRecorder to the span itself\n   * @param maxlen maximum number of spans that can be recorded\n   */\n   initSpanRecorder(maxlen = 1000) {\n    // eslint-disable-next-line deprecation/deprecation\n    if (!this.spanRecorder) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.spanRecorder = new SpanRecorder(maxlen);\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * Set the context of a transaction event.\n   * @deprecated Use either `.setAttribute()`, or set the context on the scope before creating the transaction.\n   */\n   setContext(key, context) {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use top-level `setMeasurement()` instead.\n   */\n   setMeasurement(name, value, unit = '') {\n    this._measurements[name] = { value, unit };\n  }\n\n  /**\n   * Store metadata on this transaction.\n   * @deprecated Use attributes or store data on the scope instead.\n   */\n   setMetadata(newMetadata) {\n    this._metadata = { ...this._metadata, ...newMetadata };\n  }\n\n  /**\n   * @inheritDoc\n   */\n   end(endTimestamp) {\n    const timestampInS = spanTimeInputToSeconds(endTimestamp);\n    const transaction = this._finishTransaction(timestampInS);\n    if (!transaction) {\n      return undefined;\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    return this._hub.captureEvent(transaction);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toContext() {\n    // eslint-disable-next-line deprecation/deprecation\n    const spanContext = super.toContext();\n\n    return dropUndefinedKeys({\n      ...spanContext,\n      name: this._name,\n      trimEnd: this._trimEnd,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   updateWithContext(transactionContext) {\n    // eslint-disable-next-line deprecation/deprecation\n    super.updateWithContext(transactionContext);\n\n    this._name = transactionContext.name || '';\n    this._trimEnd = transactionContext.trimEnd;\n\n    return this;\n  }\n\n  /**\n   * @inheritdoc\n   *\n   * @experimental\n   *\n   * @deprecated Use top-level `getDynamicSamplingContextFromSpan` instead.\n   */\n   getDynamicSamplingContext() {\n    return getDynamicSamplingContextFromSpan(this);\n  }\n\n  /**\n   * Override the current hub with a new one.\n   * Used if you want another hub to finish the transaction.\n   *\n   * @internal\n   */\n   setHub(hub) {\n    this._hub = hub;\n  }\n\n  /**\n   * Get the profile id of the transaction.\n   */\n   getProfileId() {\n    if (this._contexts !== undefined && this._contexts['profile'] !== undefined) {\n      return this._contexts['profile'].profile_id ;\n    }\n    return undefined;\n  }\n\n  /**\n   * Finish the transaction & prepare the event to send to Sentry.\n   */\n   _finishTransaction(endTimestamp) {\n    // This transaction is already finished, so we should not flush it again.\n    if (this._endTime !== undefined) {\n      return undefined;\n    }\n\n    if (!this._name) {\n      DEBUG_BUILD && logger.warn('Transaction has no name, falling back to `<unlabeled transaction>`.');\n      this._name = '<unlabeled transaction>';\n    }\n\n    // just sets the end timestamp\n    super.end(endTimestamp);\n\n    // eslint-disable-next-line deprecation/deprecation\n    const client = this._hub.getClient();\n    if (client && client.emit) {\n      client.emit('finishTransaction', this);\n    }\n\n    if (this._sampled !== true) {\n      // At this point if `sampled !== true` we want to discard the transaction.\n      DEBUG_BUILD && logger.log('[Tracing] Discarding transaction because its trace was not chosen to be sampled.');\n\n      if (client) {\n        client.recordDroppedEvent('sample_rate', 'transaction');\n      }\n\n      return undefined;\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    const finishedSpans = this.spanRecorder\n      ? // eslint-disable-next-line deprecation/deprecation\n        this.spanRecorder.spans.filter(span => span !== this && spanToJSON(span).timestamp)\n      : [];\n\n    if (this._trimEnd && finishedSpans.length > 0) {\n      const endTimes = finishedSpans.map(span => spanToJSON(span).timestamp).filter(Boolean) ;\n      this._endTime = endTimes.reduce((prev, current) => {\n        return prev > current ? prev : current;\n      });\n    }\n\n    const { scope: capturedSpanScope, isolationScope: capturedSpanIsolationScope } = getCapturedScopesOnSpan(this);\n\n    // eslint-disable-next-line deprecation/deprecation\n    const { metadata } = this;\n    // eslint-disable-next-line deprecation/deprecation\n    const { source } = metadata;\n\n    const transaction = {\n      contexts: {\n        ...this._contexts,\n        // We don't want to override trace context\n        trace: spanToTraceContext(this),\n      },\n      // TODO: Pass spans serialized via `spanToJSON()` here instead in v8.\n      spans: finishedSpans,\n      start_timestamp: this._startTime,\n      // eslint-disable-next-line deprecation/deprecation\n      tags: this.tags,\n      timestamp: this._endTime,\n      transaction: this._name,\n      type: 'transaction',\n      sdkProcessingMetadata: {\n        ...metadata,\n        capturedSpanScope,\n        capturedSpanIsolationScope,\n        ...dropUndefinedKeys({\n          dynamicSamplingContext: getDynamicSamplingContextFromSpan(this),\n        }),\n      },\n      _metrics_summary: getMetricSummaryJsonForSpan(this),\n      ...(source && {\n        transaction_info: {\n          source,\n        },\n      }),\n    };\n\n    const hasMeasurements = Object.keys(this._measurements).length > 0;\n\n    if (hasMeasurements) {\n      DEBUG_BUILD &&\n        logger.log(\n          '[Measurements] Adding measurements to transaction',\n          JSON.stringify(this._measurements, undefined, 2),\n        );\n      transaction.measurements = this._measurements;\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    DEBUG_BUILD && logger.log(`[Tracing] Finishing ${this.op} transaction: ${this._name}.`);\n\n    return transaction;\n  }\n}\n\nexport { Transaction };\n//# sourceMappingURL=transaction.js.map\n","import { logger, timestampInSeconds } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { spanTimeInputToSeconds, spanToJSON } from '../utils/spanUtils.js';\nimport { SpanRecorder } from './span.js';\nimport { Transaction } from './transaction.js';\n\nconst TRACING_DEFAULTS = {\n  idleTimeout: 1000,\n  finalTimeout: 30000,\n  heartbeatInterval: 5000,\n};\n\nconst FINISH_REASON_TAG = 'finishReason';\n\nconst IDLE_TRANSACTION_FINISH_REASONS = [\n  'heartbeatFailed',\n  'idleTimeout',\n  'documentHidden',\n  'finalTimeout',\n  'externalFinish',\n  'cancelled',\n];\n\n/**\n * @inheritDoc\n */\nclass IdleTransactionSpanRecorder extends SpanRecorder {\n   constructor(\n      _pushActivity,\n      _popActivity,\n     transactionSpanId,\n    maxlen,\n  ) {\n    super(maxlen);this._pushActivity = _pushActivity;this._popActivity = _popActivity;this.transactionSpanId = transactionSpanId;  }\n\n  /**\n   * @inheritDoc\n   */\n   add(span) {\n    // We should make sure we do not push and pop activities for\n    // the transaction that this span recorder belongs to.\n    if (span.spanContext().spanId !== this.transactionSpanId) {\n      // We patch span.end() to pop an activity after setting an endTimestamp.\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      const originalEnd = span.end;\n      span.end = (...rest) => {\n        this._popActivity(span.spanContext().spanId);\n        return originalEnd.apply(span, rest);\n      };\n\n      // We should only push new activities if the span does not have an end timestamp.\n      if (spanToJSON(span).timestamp === undefined) {\n        this._pushActivity(span.spanContext().spanId);\n      }\n    }\n\n    super.add(span);\n  }\n}\n\n/**\n * An IdleTransaction is a transaction that automatically finishes. It does this by tracking child spans as activities.\n * You can have multiple IdleTransactions active, but if the `onScope` option is specified, the idle transaction will\n * put itself on the scope on creation.\n */\nclass IdleTransaction extends Transaction {\n  // Activities store a list of active spans\n\n  // Track state of activities in previous heartbeat\n\n  // Amount of times heartbeat has counted. Will cause transaction to finish after 3 beats.\n\n  // We should not use heartbeat if we finished a transaction\n\n  // Idle timeout was canceled and we should finish the transaction with the last span end.\n\n  /**\n   * Timer that tracks Transaction idleTimeout\n   */\n\n  /**\n   * @deprecated Transactions will be removed in v8. Use spans instead.\n   */\n   constructor(\n    transactionContext,\n      _idleHub,\n    /**\n     * The time to wait in ms until the idle transaction will be finished. This timer is started each time\n     * there are no active spans on this transaction.\n     */\n      _idleTimeout = TRACING_DEFAULTS.idleTimeout,\n    /**\n     * The final value in ms that a transaction cannot exceed\n     */\n      _finalTimeout = TRACING_DEFAULTS.finalTimeout,\n      _heartbeatInterval = TRACING_DEFAULTS.heartbeatInterval,\n    // Whether or not the transaction should put itself on the scope when it starts and pop itself off when it ends\n      _onScope = false,\n    /**\n     * When set to `true`, will disable the idle timeout (`_idleTimeout` option) and heartbeat mechanisms (`_heartbeatInterval`\n     * option) until the `sendAutoFinishSignal()` method is called. The final timeout mechanism (`_finalTimeout` option)\n     * will not be affected by this option, meaning the transaction will definitely be finished when the final timeout is\n     * reached, no matter what this option is configured to.\n     *\n     * Defaults to `false`.\n     */\n    delayAutoFinishUntilSignal = false,\n  ) {\n    super(transactionContext, _idleHub);this._idleHub = _idleHub;this._idleTimeout = _idleTimeout;this._finalTimeout = _finalTimeout;this._heartbeatInterval = _heartbeatInterval;this._onScope = _onScope;\n    this.activities = {};\n    this._heartbeatCounter = 0;\n    this._finished = false;\n    this._idleTimeoutCanceledPermanently = false;\n    this._beforeFinishCallbacks = [];\n    this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[4];\n    this._autoFinishAllowed = !delayAutoFinishUntilSignal;\n\n    if (_onScope) {\n      // We set the transaction here on the scope so error events pick up the trace\n      // context and attach it to the error.\n      DEBUG_BUILD && logger.log(`Setting idle transaction on scope. Span ID: ${this.spanContext().spanId}`);\n      // eslint-disable-next-line deprecation/deprecation\n      _idleHub.getScope().setSpan(this);\n    }\n\n    if (!delayAutoFinishUntilSignal) {\n      this._restartIdleTimeout();\n    }\n\n    setTimeout(() => {\n      if (!this._finished) {\n        this.setStatus('deadline_exceeded');\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[3];\n        this.end();\n      }\n    }, this._finalTimeout);\n  }\n\n  /** {@inheritDoc} */\n   end(endTimestamp) {\n    const endTimestampInS = spanTimeInputToSeconds(endTimestamp);\n\n    this._finished = true;\n    this.activities = {};\n\n    // eslint-disable-next-line deprecation/deprecation\n    if (this.op === 'ui.action.click') {\n      this.setAttribute(FINISH_REASON_TAG, this._finishReason);\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    if (this.spanRecorder) {\n      DEBUG_BUILD &&\n        // eslint-disable-next-line deprecation/deprecation\n        logger.log('[Tracing] finishing IdleTransaction', new Date(endTimestampInS * 1000).toISOString(), this.op);\n\n      for (const callback of this._beforeFinishCallbacks) {\n        callback(this, endTimestampInS);\n      }\n\n      // eslint-disable-next-line deprecation/deprecation\n      this.spanRecorder.spans = this.spanRecorder.spans.filter((span) => {\n        // If we are dealing with the transaction itself, we just return it\n        if (span.spanContext().spanId === this.spanContext().spanId) {\n          return true;\n        }\n\n        // We cancel all pending spans with status \"cancelled\" to indicate the idle transaction was finished early\n        if (!spanToJSON(span).timestamp) {\n          span.setStatus('cancelled');\n          span.end(endTimestampInS);\n          DEBUG_BUILD &&\n            logger.log('[Tracing] cancelling span since transaction ended early', JSON.stringify(span, undefined, 2));\n        }\n\n        const { start_timestamp: startTime, timestamp: endTime } = spanToJSON(span);\n        const spanStartedBeforeTransactionFinish = startTime && startTime < endTimestampInS;\n\n        // Add a delta with idle timeout so that we prevent false positives\n        const timeoutWithMarginOfError = (this._finalTimeout + this._idleTimeout) / 1000;\n        const spanEndedBeforeFinalTimeout = endTime && startTime && endTime - startTime < timeoutWithMarginOfError;\n\n        if (DEBUG_BUILD) {\n          const stringifiedSpan = JSON.stringify(span, undefined, 2);\n          if (!spanStartedBeforeTransactionFinish) {\n            logger.log('[Tracing] discarding Span since it happened after Transaction was finished', stringifiedSpan);\n          } else if (!spanEndedBeforeFinalTimeout) {\n            logger.log('[Tracing] discarding Span since it finished after Transaction final timeout', stringifiedSpan);\n          }\n        }\n\n        return spanStartedBeforeTransactionFinish && spanEndedBeforeFinalTimeout;\n      });\n\n      DEBUG_BUILD && logger.log('[Tracing] flushing IdleTransaction');\n    } else {\n      DEBUG_BUILD && logger.log('[Tracing] No active IdleTransaction');\n    }\n\n    // if `this._onScope` is `true`, the transaction put itself on the scope when it started\n    if (this._onScope) {\n      // eslint-disable-next-line deprecation/deprecation\n      const scope = this._idleHub.getScope();\n      // eslint-disable-next-line deprecation/deprecation\n      if (scope.getTransaction() === this) {\n        // eslint-disable-next-line deprecation/deprecation\n        scope.setSpan(undefined);\n      }\n    }\n\n    return super.end(endTimestamp);\n  }\n\n  /**\n   * Register a callback function that gets executed before the transaction finishes.\n   * Useful for cleanup or if you want to add any additional spans based on current context.\n   *\n   * This is exposed because users have no other way of running something before an idle transaction\n   * finishes.\n   */\n   registerBeforeFinishCallback(callback) {\n    this._beforeFinishCallbacks.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   initSpanRecorder(maxlen) {\n    // eslint-disable-next-line deprecation/deprecation\n    if (!this.spanRecorder) {\n      const pushActivity = (id) => {\n        if (this._finished) {\n          return;\n        }\n        this._pushActivity(id);\n      };\n      const popActivity = (id) => {\n        if (this._finished) {\n          return;\n        }\n        this._popActivity(id);\n      };\n\n      // eslint-disable-next-line deprecation/deprecation\n      this.spanRecorder = new IdleTransactionSpanRecorder(pushActivity, popActivity, this.spanContext().spanId, maxlen);\n\n      // Start heartbeat so that transactions do not run forever.\n      DEBUG_BUILD && logger.log('Starting heartbeat');\n      this._pingHeartbeat();\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * Cancels the existing idle timeout, if there is one.\n   * @param restartOnChildSpanChange Default is `true`.\n   *                                 If set to false the transaction will end\n   *                                 with the last child span.\n   */\n   cancelIdleTimeout(\n    endTimestamp,\n    {\n      restartOnChildSpanChange,\n    }\n\n = {\n      restartOnChildSpanChange: true,\n    },\n  ) {\n    this._idleTimeoutCanceledPermanently = restartOnChildSpanChange === false;\n    if (this._idleTimeoutID) {\n      clearTimeout(this._idleTimeoutID);\n      this._idleTimeoutID = undefined;\n\n      if (Object.keys(this.activities).length === 0 && this._idleTimeoutCanceledPermanently) {\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[5];\n        this.end(endTimestamp);\n      }\n    }\n  }\n\n  /**\n   * Temporary method used to externally set the transaction's `finishReason`\n   *\n   * ** WARNING**\n   * This is for the purpose of experimentation only and will be removed in the near future, do not use!\n   *\n   * @internal\n   *\n   */\n   setFinishReason(reason) {\n    this._finishReason = reason;\n  }\n\n  /**\n   * Permits the IdleTransaction to automatically end itself via the idle timeout and heartbeat mechanisms when the `delayAutoFinishUntilSignal` option was set to `true`.\n   */\n   sendAutoFinishSignal() {\n    if (!this._autoFinishAllowed) {\n      DEBUG_BUILD && logger.log('[Tracing] Received finish signal for idle transaction.');\n      this._restartIdleTimeout();\n      this._autoFinishAllowed = true;\n    }\n  }\n\n  /**\n   * Restarts idle timeout, if there is no running idle timeout it will start one.\n   */\n   _restartIdleTimeout(endTimestamp) {\n    this.cancelIdleTimeout();\n    this._idleTimeoutID = setTimeout(() => {\n      if (!this._finished && Object.keys(this.activities).length === 0) {\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[1];\n        this.end(endTimestamp);\n      }\n    }, this._idleTimeout);\n  }\n\n  /**\n   * Start tracking a specific activity.\n   * @param spanId The span id that represents the activity\n   */\n   _pushActivity(spanId) {\n    this.cancelIdleTimeout(undefined, { restartOnChildSpanChange: !this._idleTimeoutCanceledPermanently });\n    DEBUG_BUILD && logger.log(`[Tracing] pushActivity: ${spanId}`);\n    this.activities[spanId] = true;\n    DEBUG_BUILD && logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n  }\n\n  /**\n   * Remove an activity from usage\n   * @param spanId The span id that represents the activity\n   */\n   _popActivity(spanId) {\n    if (this.activities[spanId]) {\n      DEBUG_BUILD && logger.log(`[Tracing] popActivity ${spanId}`);\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this.activities[spanId];\n      DEBUG_BUILD && logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n    }\n\n    if (Object.keys(this.activities).length === 0) {\n      const endTimestamp = timestampInSeconds();\n      if (this._idleTimeoutCanceledPermanently) {\n        if (this._autoFinishAllowed) {\n          this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[5];\n          this.end(endTimestamp);\n        }\n      } else {\n        // We need to add the timeout here to have the real endtimestamp of the transaction\n        // Remember timestampInSeconds is in seconds, timeout is in ms\n        this._restartIdleTimeout(endTimestamp + this._idleTimeout / 1000);\n      }\n    }\n  }\n\n  /**\n   * Checks when entries of this.activities are not changing for 3 beats.\n   * If this occurs we finish the transaction.\n   */\n   _beat() {\n    // We should not be running heartbeat if the idle transaction is finished.\n    if (this._finished) {\n      return;\n    }\n\n    const heartbeatString = Object.keys(this.activities).join('');\n\n    if (heartbeatString === this._prevHeartbeatString) {\n      this._heartbeatCounter++;\n    } else {\n      this._heartbeatCounter = 1;\n    }\n\n    this._prevHeartbeatString = heartbeatString;\n\n    if (this._heartbeatCounter >= 3) {\n      if (this._autoFinishAllowed) {\n        DEBUG_BUILD && logger.log('[Tracing] Transaction finished because of no change for 3 heart beats');\n        this.setStatus('deadline_exceeded');\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[0];\n        this.end();\n      }\n    } else {\n      this._pingHeartbeat();\n    }\n  }\n\n  /**\n   * Pings the heartbeat\n   */\n   _pingHeartbeat() {\n    DEBUG_BUILD && logger.log(`pinging Heartbeat -> current counter: ${this._heartbeatCounter}`);\n    setTimeout(() => {\n      this._beat();\n    }, this._heartbeatInterval);\n  }\n}\n\nexport { IdleTransaction, IdleTransactionSpanRecorder, TRACING_DEFAULTS };\n//# sourceMappingURL=idletransaction.js.map\n","import { isNaN, logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE } from '../semanticAttributes.js';\nimport { hasTracingEnabled } from '../utils/hasTracingEnabled.js';\nimport { spanToJSON } from '../utils/spanUtils.js';\n\n/**\n * Makes a sampling decision for the given transaction and stores it on the transaction.\n *\n * Called every time a transaction is created. Only transactions which emerge with a `sampled` value of `true` will be\n * sent to Sentry.\n *\n * This method muttes the given `transaction` and will set the `sampled` value on it.\n * It returns the same transaction, for convenience.\n */\nfunction sampleTransaction(\n  transaction,\n  options,\n  samplingContext,\n) {\n  // nothing to do if tracing is not enabled\n  if (!hasTracingEnabled(options)) {\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the user has forced a sampling decision by passing a `sampled` value in their transaction context, go with that\n  // eslint-disable-next-line deprecation/deprecation\n  if (transaction.sampled !== undefined) {\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, Number(transaction.sampled));\n    return transaction;\n  }\n\n  // we would have bailed already if neither `tracesSampler` nor `tracesSampleRate` nor `enableTracing` were defined, so one of these should\n  // work; prefer the hook if so\n  let sampleRate;\n  if (typeof options.tracesSampler === 'function') {\n    sampleRate = options.tracesSampler(samplingContext);\n    transaction.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, Number(sampleRate));\n  } else if (samplingContext.parentSampled !== undefined) {\n    sampleRate = samplingContext.parentSampled;\n  } else if (typeof options.tracesSampleRate !== 'undefined') {\n    sampleRate = options.tracesSampleRate;\n    transaction.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, Number(sampleRate));\n  } else {\n    // When `enableTracing === true`, we use a sample rate of 100%\n    sampleRate = 1;\n    transaction.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, sampleRate);\n  }\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n  // only valid values are booleans or numbers between 0 and 1.)\n  if (!isValidSampleRate(sampleRate)) {\n    DEBUG_BUILD && logger.warn('[Tracing] Discarding transaction because of invalid sample rate.');\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the function returned 0 (or false), or if `tracesSampleRate` is 0, it's a sign the transaction should be dropped\n  if (!sampleRate) {\n    DEBUG_BUILD &&\n      logger.log(\n        `[Tracing] Discarding transaction because ${\n          typeof options.tracesSampler === 'function'\n            ? 'tracesSampler returned 0 or false'\n            : 'a negative sampling decision was inherited or tracesSampleRate is set to 0'\n        }`,\n      );\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n  // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n  // eslint-disable-next-line deprecation/deprecation\n  transaction.sampled = Math.random() < (sampleRate );\n\n  // if we're not going to keep it, we're done\n  // eslint-disable-next-line deprecation/deprecation\n  if (!transaction.sampled) {\n    DEBUG_BUILD &&\n      logger.log(\n        `[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = ${Number(\n          sampleRate,\n        )})`,\n      );\n    return transaction;\n  }\n\n  DEBUG_BUILD &&\n    // eslint-disable-next-line deprecation/deprecation\n    logger.log(`[Tracing] starting ${transaction.op} transaction - ${spanToJSON(transaction).description}`);\n  return transaction;\n}\n\n/**\n * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n */\nfunction isValidSampleRate(rate) {\n  // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  if (isNaN(rate) || !(typeof rate === 'number' || typeof rate === 'boolean')) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          rate,\n        )} of type ${JSON.stringify(typeof rate)}.`,\n      );\n    return false;\n  }\n\n  // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n  if (rate < 0 || rate > 1) {\n    DEBUG_BUILD &&\n      logger.warn(`[Tracing] Given sample rate is invalid. Sample rate must be between 0 and 1. Got ${rate}.`);\n    return false;\n  }\n  return true;\n}\n\nexport { isValidSampleRate, sampleTransaction };\n//# sourceMappingURL=sampling.js.map\n","import { logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { getMainCarrier } from '../hub.js';\nimport { spanToTraceHeader } from '../utils/spanUtils.js';\nimport { registerErrorInstrumentation } from './errors.js';\nimport { IdleTransaction } from './idletransaction.js';\nimport { sampleTransaction } from './sampling.js';\nimport { Transaction } from './transaction.js';\n\n/** Returns all trace headers that are currently on the top scope. */\nfunction traceHeaders() {\n  // eslint-disable-next-line deprecation/deprecation\n  const scope = this.getScope();\n  // eslint-disable-next-line deprecation/deprecation\n  const span = scope.getSpan();\n\n  return span\n    ? {\n        'sentry-trace': spanToTraceHeader(span),\n      }\n    : {};\n}\n\n/**\n * Creates a new transaction and adds a sampling decision if it doesn't yet have one.\n *\n * The Hub.startTransaction method delegates to this method to do its work, passing the Hub instance in as `this`, as if\n * it had been called on the hub directly. Exists as a separate function so that it can be injected into the class as an\n * \"extension method.\"\n *\n * @param this: The Hub starting the transaction\n * @param transactionContext: Data used to configure the transaction\n * @param CustomSamplingContext: Optional data to be provided to the `tracesSampler` function (if any)\n *\n * @returns The new transaction\n *\n * @see {@link Hub.startTransaction}\n */\nfunction _startTransaction(\n\n  transactionContext,\n  customSamplingContext,\n) {\n  // eslint-disable-next-line deprecation/deprecation\n  const client = this.getClient();\n  const options = (client && client.getOptions()) || {};\n\n  const configInstrumenter = options.instrumenter || 'sentry';\n  const transactionInstrumenter = transactionContext.instrumenter || 'sentry';\n\n  if (configInstrumenter !== transactionInstrumenter) {\n    DEBUG_BUILD &&\n      logger.error(\n        `A transaction was started with instrumenter=\\`${transactionInstrumenter}\\`, but the SDK is configured with the \\`${configInstrumenter}\\` instrumenter.\nThe transaction will not be sampled. Please use the ${configInstrumenter} instrumentation to start transactions.`,\n      );\n\n    // eslint-disable-next-line deprecation/deprecation\n    transactionContext.sampled = false;\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  let transaction = new Transaction(transactionContext, this);\n  transaction = sampleTransaction(transaction, options, {\n    name: transactionContext.name,\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    attributes: {\n      // eslint-disable-next-line deprecation/deprecation\n      ...transactionContext.data,\n      ...transactionContext.attributes,\n    },\n    ...customSamplingContext,\n  });\n  if (transaction.isRecording()) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans ));\n  }\n  if (client && client.emit) {\n    client.emit('startTransaction', transaction);\n  }\n  return transaction;\n}\n\n/**\n * Create new idle transaction.\n */\nfunction startIdleTransaction(\n  hub,\n  transactionContext,\n  idleTimeout,\n  finalTimeout,\n  onScope,\n  customSamplingContext,\n  heartbeatInterval,\n  delayAutoFinishUntilSignal = false,\n) {\n  // eslint-disable-next-line deprecation/deprecation\n  const client = hub.getClient();\n  const options = (client && client.getOptions()) || {};\n\n  // eslint-disable-next-line deprecation/deprecation\n  let transaction = new IdleTransaction(\n    transactionContext,\n    hub,\n    idleTimeout,\n    finalTimeout,\n    heartbeatInterval,\n    onScope,\n    delayAutoFinishUntilSignal,\n  );\n  transaction = sampleTransaction(transaction, options, {\n    name: transactionContext.name,\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    attributes: {\n      // eslint-disable-next-line deprecation/deprecation\n      ...transactionContext.data,\n      ...transactionContext.attributes,\n    },\n    ...customSamplingContext,\n  });\n  if (transaction.isRecording()) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans ));\n  }\n  if (client && client.emit) {\n    client.emit('startTransaction', transaction);\n  }\n  return transaction;\n}\n\n/**\n * Adds tracing extensions to the global hub.\n */\nfunction addTracingExtensions() {\n  const carrier = getMainCarrier();\n  if (!carrier.__SENTRY__) {\n    return;\n  }\n  carrier.__SENTRY__.extensions = carrier.__SENTRY__.extensions || {};\n  if (!carrier.__SENTRY__.extensions.startTransaction) {\n    carrier.__SENTRY__.extensions.startTransaction = _startTransaction;\n  }\n  if (!carrier.__SENTRY__.extensions.traceHeaders) {\n    carrier.__SENTRY__.extensions.traceHeaders = traceHeaders;\n  }\n\n  registerErrorInstrumentation();\n}\n\nexport { addTracingExtensions, startIdleTransaction };\n//# sourceMappingURL=hubextensions.js.map\n","import { getActiveTransaction } from './utils.js';\n\n/**\n * Adds a measurement to the current active transaction.\n */\nfunction setMeasurement(name, value, unit) {\n  // eslint-disable-next-line deprecation/deprecation\n  const transaction = getActiveTransaction();\n  if (transaction) {\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.setMeasurement(name, value, unit);\n  }\n}\n\nexport { setMeasurement };\n//# sourceMappingURL=measurement.js.map\n","/**\n * Checks whether given url points to Sentry server\n * @param url url to verify\n *\n * TODO(v8): Remove Hub fallback type\n */\nfunction isSentryRequestUrl(url, hubOrClient) {\n  const client =\n    hubOrClient && isHub(hubOrClient)\n      ? // eslint-disable-next-line deprecation/deprecation\n        hubOrClient.getClient()\n      : hubOrClient;\n  const dsn = client && client.getDsn();\n  const tunnel = client && client.getOptions().tunnel;\n\n  return checkDsn(url, dsn) || checkTunnel(url, tunnel);\n}\n\nfunction checkTunnel(url, tunnel) {\n  if (!tunnel) {\n    return false;\n  }\n\n  return removeTrailingSlash(url) === removeTrailingSlash(tunnel);\n}\n\nfunction checkDsn(url, dsn) {\n  return dsn ? url.includes(dsn.host) : false;\n}\n\nfunction removeTrailingSlash(str) {\n  return str[str.length - 1] === '/' ? str.slice(0, -1) : str;\n}\n\nfunction isHub(hubOrClient) {\n  // eslint-disable-next-line deprecation/deprecation\n  return (hubOrClient ).getClient !== undefined;\n}\n\nexport { isSentryRequestUrl };\n//# sourceMappingURL=isSentryRequestUrl.js.map\n","/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nexport { DEBUG_BUILD };\n//# sourceMappingURL=debug-build.js.map\n","import { GLOBAL_OBJ } from '@sentry/utils';\n\nconst WINDOW = GLOBAL_OBJ ;\n\nexport { WINDOW };\n//# sourceMappingURL=types.js.map\n","import { getActiveTransaction, spanToJSON } from '@sentry/core';\nimport { logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../common/debug-build.js';\nimport { WINDOW } from './types.js';\n\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nfunction registerBackgroundTabDetection() {\n  if (WINDOW && WINDOW.document) {\n    WINDOW.document.addEventListener('visibilitychange', () => {\n      // eslint-disable-next-line deprecation/deprecation\n      const activeTransaction = getActiveTransaction() ;\n      if (WINDOW.document.hidden && activeTransaction) {\n        const statusType = 'cancelled';\n\n        const { op, status } = spanToJSON(activeTransaction);\n\n        DEBUG_BUILD &&\n          logger.log(`[Tracing] Transaction: ${statusType} -> since tab moved to the background, op: ${op}`);\n        // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n        if (!status) {\n          activeTransaction.setStatus(statusType);\n        }\n        // TODO: Can we rewrite this to an attribute?\n        // eslint-disable-next-line deprecation/deprecation\n        activeTransaction.setTag('visibilitychange', 'document.hidden');\n        activeTransaction.end();\n      }\n    });\n  } else {\n    DEBUG_BUILD && logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}\n\nexport { registerBackgroundTabDetection };\n//# sourceMappingURL=backgroundtab.js.map\n","const bindReporter = (\n  callback,\n  metric,\n  reportAllChanges,\n) => {\n  let prevValue;\n  let delta;\n  return (forceReport) => {\n    if (metric.value >= 0) {\n      if (forceReport || reportAllChanges) {\n        delta = metric.value - (prevValue || 0);\n\n        // Report the metric if there's a non-zero delta or if no previous\n        // value exists (which can happen in the case of the document becoming\n        // hidden when the metric value is 0).\n        // See: https://github.com/GoogleChrome/web-vitals/issues/14\n        if (delta || prevValue === undefined) {\n          prevValue = metric.value;\n          metric.delta = delta;\n          callback(metric);\n        }\n      }\n    }\n  };\n};\n\nexport { bindReporter };\n//# sourceMappingURL=bindReporter.js.map\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Performantly generate a unique, 30-char string by combining a version\n * number, the current timestamp with a 13-digit number integer.\n * @return {string}\n */\nconst generateUniqueID = () => {\n  return `v3-${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`;\n};\n\nexport { generateUniqueID };\n//# sourceMappingURL=generateUniqueID.js.map\n","import { WINDOW } from '../../types.js';\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst getNavigationEntryFromPerformanceTiming = () => {\n  // eslint-disable-next-line deprecation/deprecation\n  const timing = WINDOW.performance.timing;\n  // eslint-disable-next-line deprecation/deprecation\n  const type = WINDOW.performance.navigation.type;\n\n  const navigationEntry = {\n    entryType: 'navigation',\n    startTime: 0,\n    type: type == 2 ? 'back_forward' : type === 1 ? 'reload' : 'navigate',\n  };\n\n  for (const key in timing) {\n    if (key !== 'navigationStart' && key !== 'toJSON') {\n      // eslint-disable-next-line deprecation/deprecation\n      navigationEntry[key] = Math.max((timing[key ] ) - timing.navigationStart, 0);\n    }\n  }\n  return navigationEntry ;\n};\n\nconst getNavigationEntry = () => {\n  if (WINDOW.__WEB_VITALS_POLYFILL__) {\n    return (\n      WINDOW.performance &&\n      ((performance.getEntriesByType && performance.getEntriesByType('navigation')[0]) ||\n        getNavigationEntryFromPerformanceTiming())\n    );\n  } else {\n    return WINDOW.performance && performance.getEntriesByType && performance.getEntriesByType('navigation')[0];\n  }\n};\n\nexport { getNavigationEntry };\n//# sourceMappingURL=getNavigationEntry.js.map\n","import { getNavigationEntry } from './getNavigationEntry.js';\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst getActivationStart = () => {\n  const navEntry = getNavigationEntry();\n  return (navEntry && navEntry.activationStart) || 0;\n};\n\nexport { getActivationStart };\n//# sourceMappingURL=getActivationStart.js.map\n","import { WINDOW } from '../../types.js';\nimport { generateUniqueID } from './generateUniqueID.js';\nimport { getActivationStart } from './getActivationStart.js';\nimport { getNavigationEntry } from './getNavigationEntry.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst initMetric = (name, value) => {\n  const navEntry = getNavigationEntry();\n  let navigationType = 'navigate';\n\n  if (navEntry) {\n    if (WINDOW.document.prerendering || getActivationStart() > 0) {\n      navigationType = 'prerender';\n    } else {\n      navigationType = navEntry.type.replace(/_/g, '-') ;\n    }\n  }\n\n  return {\n    name,\n    value: typeof value === 'undefined' ? -1 : value,\n    rating: 'good', // Will be updated if the value changes.\n    delta: 0,\n    entries: [],\n    id: generateUniqueID(),\n    navigationType,\n  };\n};\n\nexport { initMetric };\n//# sourceMappingURL=initMetric.js.map\n","/**\n * Takes a performance entry type and a callback function, and creates a\n * `PerformanceObserver` instance that will observe the specified entry type\n * with buffering enabled and call the callback _for each entry_.\n *\n * This function also feature-detects entry support and wraps the logic in a\n * try/catch to avoid errors in unsupporting browsers.\n */\nconst observe = (\n  type,\n  callback,\n  opts,\n) => {\n  try {\n    if (PerformanceObserver.supportedEntryTypes.includes(type)) {\n      const po = new PerformanceObserver(list => {\n        callback(list.getEntries() );\n      });\n      po.observe(\n        Object.assign(\n          {\n            type,\n            buffered: true,\n          },\n          opts || {},\n        ) ,\n      );\n      return po;\n    }\n  } catch (e) {\n    // Do nothing.\n  }\n  return;\n};\n\nexport { observe };\n//# sourceMappingURL=observe.js.map\n","import { WINDOW } from '../../types.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst onHidden = (cb, once) => {\n  const onHiddenOrPageHide = (event) => {\n    if (event.type === 'pagehide' || WINDOW.document.visibilityState === 'hidden') {\n      cb(event);\n      if (once) {\n        removeEventListener('visibilitychange', onHiddenOrPageHide, true);\n        removeEventListener('pagehide', onHiddenOrPageHide, true);\n      }\n    }\n  };\n  addEventListener('visibilitychange', onHiddenOrPageHide, true);\n  // Some browsers have buggy implementations of visibilitychange,\n  // so we use pagehide in addition, just to be safe.\n  addEventListener('pagehide', onHiddenOrPageHide, true);\n};\n\nexport { onHidden };\n//# sourceMappingURL=onHidden.js.map\n","import { bindReporter } from './lib/bindReporter.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Calculates the [CLS](https://web.dev/cls/) value for the current page and\n * calls the `callback` function once the value is ready to be reported, along\n * with all `layout-shift` performance entries that were used in the metric\n * value calculation. The reported value is a `double` (corresponding to a\n * [layout shift score](https://web.dev/cls/#layout-shift-score)).\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called as soon as the value is initially\n * determined as well as any time the value changes throughout the page\n * lifespan.\n *\n * _**Important:** CLS should be continually monitored for changes throughout\n * the entire lifespan of a page—including if the user returns to the page after\n * it's been hidden/backgrounded. However, since browsers often [will not fire\n * additional callbacks once the user has backgrounded a\n * page](https://developer.chrome.com/blog/page-lifecycle-api/#advice-hidden),\n * `callback` is always called when the page's visibility state changes to\n * hidden. As a result, the `callback` function might be called multiple times\n * during the same page load._\n */\nconst onCLS = (onReport) => {\n  const metric = initMetric('CLS', 0);\n  let report;\n\n  let sessionValue = 0;\n  let sessionEntries = [];\n\n  // const handleEntries = (entries: Metric['entries']) => {\n  const handleEntries = (entries) => {\n    entries.forEach(entry => {\n      // Only count layout shifts without recent user input.\n      if (!entry.hadRecentInput) {\n        const firstSessionEntry = sessionEntries[0];\n        const lastSessionEntry = sessionEntries[sessionEntries.length - 1];\n\n        // If the entry occurred less than 1 second after the previous entry and\n        // less than 5 seconds after the first entry in the session, include the\n        // entry in the current session. Otherwise, start a new session.\n        if (\n          sessionValue &&\n          sessionEntries.length !== 0 &&\n          entry.startTime - lastSessionEntry.startTime < 1000 &&\n          entry.startTime - firstSessionEntry.startTime < 5000\n        ) {\n          sessionValue += entry.value;\n          sessionEntries.push(entry);\n        } else {\n          sessionValue = entry.value;\n          sessionEntries = [entry];\n        }\n\n        // If the current session value is larger than the current CLS value,\n        // update CLS and the entries contributing to it.\n        if (sessionValue > metric.value) {\n          metric.value = sessionValue;\n          metric.entries = sessionEntries;\n          if (report) {\n            report();\n          }\n        }\n      }\n    });\n  };\n\n  const po = observe('layout-shift', handleEntries);\n  if (po) {\n    report = bindReporter(onReport, metric);\n\n    const stopListening = () => {\n      handleEntries(po.takeRecords() );\n      report(true);\n    };\n\n    onHidden(stopListening);\n\n    return stopListening;\n  }\n\n  return;\n};\n\nexport { onCLS };\n//# sourceMappingURL=getCLS.js.map\n","import { WINDOW } from '../../types.js';\nimport { onHidden } from './onHidden.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet firstHiddenTime = -1;\n\nconst initHiddenTime = () => {\n  // If the document is hidden and not prerendering, assume it was always\n  // hidden and the page was loaded in the background.\n  return WINDOW.document.visibilityState === 'hidden' && !WINDOW.document.prerendering ? 0 : Infinity;\n};\n\nconst trackChanges = () => {\n  // Update the time if/when the document becomes hidden.\n  onHidden(({ timeStamp }) => {\n    firstHiddenTime = timeStamp;\n  }, true);\n};\n\nconst getVisibilityWatcher = (\n\n) => {\n  if (firstHiddenTime < 0) {\n    // If the document is hidden when this code runs, assume it was hidden\n    // since navigation start. This isn't a perfect heuristic, but it's the\n    // best we can do until an API is available to support querying past\n    // visibilityState.\n    firstHiddenTime = initHiddenTime();\n    trackChanges();\n  }\n  return {\n    get firstHiddenTime() {\n      return firstHiddenTime;\n    },\n  };\n};\n\nexport { getVisibilityWatcher };\n//# sourceMappingURL=getVisibilityWatcher.js.map\n","import { bindReporter } from './lib/bindReporter.js';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Calculates the [FID](https://web.dev/fid/) value for the current page and\n * calls the `callback` function once the value is ready, along with the\n * relevant `first-input` performance entry used to determine the value. The\n * reported value is a `DOMHighResTimeStamp`.\n *\n * _**Important:** since FID is only reported after the user interacts with the\n * page, it's possible that it will not be reported for some page loads._\n */\nconst onFID = (onReport) => {\n  const visibilityWatcher = getVisibilityWatcher();\n  const metric = initMetric('FID');\n  // eslint-disable-next-line prefer-const\n  let report;\n\n  const handleEntry = (entry) => {\n    // Only report if the page wasn't hidden prior to the first input.\n    if (entry.startTime < visibilityWatcher.firstHiddenTime) {\n      metric.value = entry.processingStart - entry.startTime;\n      metric.entries.push(entry);\n      report(true);\n    }\n  };\n\n  const handleEntries = (entries) => {\n    (entries ).forEach(handleEntry);\n  };\n\n  const po = observe('first-input', handleEntries);\n  report = bindReporter(onReport, metric);\n\n  if (po) {\n    onHidden(() => {\n      handleEntries(po.takeRecords() );\n      po.disconnect();\n    }, true);\n  }\n};\n\nexport { onFID };\n//# sourceMappingURL=getFID.js.map\n","import { bindReporter } from './lib/bindReporter.js';\nimport { getActivationStart } from './lib/getActivationStart.js';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst reportedMetricIDs = {};\n\n/**\n * Calculates the [LCP](https://web.dev/lcp/) value for the current page and\n * calls the `callback` function once the value is ready (along with the\n * relevant `largest-contentful-paint` performance entry used to determine the\n * value). The reported value is a `DOMHighResTimeStamp`.\n */\nconst onLCP = (onReport) => {\n  const visibilityWatcher = getVisibilityWatcher();\n  const metric = initMetric('LCP');\n  let report;\n\n  const handleEntries = (entries) => {\n    const lastEntry = entries[entries.length - 1] ;\n    if (lastEntry) {\n      // The startTime attribute returns the value of the renderTime if it is\n      // not 0, and the value of the loadTime otherwise. The activationStart\n      // reference is used because LCP should be relative to page activation\n      // rather than navigation start if the page was prerendered.\n      const value = Math.max(lastEntry.startTime - getActivationStart(), 0);\n\n      // Only report if the page wasn't hidden prior to LCP.\n      if (value < visibilityWatcher.firstHiddenTime) {\n        metric.value = value;\n        metric.entries = [lastEntry];\n        report();\n      }\n    }\n  };\n\n  const po = observe('largest-contentful-paint', handleEntries);\n\n  if (po) {\n    report = bindReporter(onReport, metric);\n\n    const stopListening = () => {\n      if (!reportedMetricIDs[metric.id]) {\n        handleEntries(po.takeRecords() );\n        po.disconnect();\n        reportedMetricIDs[metric.id] = true;\n        report(true);\n      }\n    };\n\n    // Stop listening after input. Note: while scrolling is an input that\n    // stop LCP observation, it's unreliable since it can be programmatically\n    // generated. See: https://github.com/GoogleChrome/web-vitals/issues/75\n    ['keydown', 'click'].forEach(type => {\n      addEventListener(type, stopListening, { once: true, capture: true });\n    });\n\n    onHidden(stopListening, true);\n\n    return stopListening;\n  }\n\n  return;\n};\n\nexport { onLCP };\n//# sourceMappingURL=getLCP.js.map\n","import { logger, getFunctionName } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../common/debug-build.js';\nimport { onCLS } from './web-vitals/getCLS.js';\nimport { onFID } from './web-vitals/getFID.js';\nimport { onINP } from './web-vitals/getINP.js';\nimport { onLCP } from './web-vitals/getLCP.js';\nimport { observe } from './web-vitals/lib/observe.js';\n\nconst handlers = {};\nconst instrumented = {};\n\nlet _previousCls;\nlet _previousFid;\nlet _previousLcp;\nlet _previousInp;\n\n/**\n * Add a callback that will be triggered when a CLS metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n *\n * Pass `stopOnCallback = true` to stop listening for CLS when the cleanup callback is called.\n * This will lead to the CLS being finalized and frozen.\n */\nfunction addClsInstrumentationHandler(\n  callback,\n  stopOnCallback = false,\n) {\n  return addMetricObserver('cls', callback, instrumentCls, _previousCls, stopOnCallback);\n}\n\n/**\n * Add a callback that will be triggered when a LCP metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n *\n * Pass `stopOnCallback = true` to stop listening for LCP when the cleanup callback is called.\n * This will lead to the LCP being finalized and frozen.\n */\nfunction addLcpInstrumentationHandler(\n  callback,\n  stopOnCallback = false,\n) {\n  return addMetricObserver('lcp', callback, instrumentLcp, _previousLcp, stopOnCallback);\n}\n\n/**\n * Add a callback that will be triggered when a FID metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nfunction addFidInstrumentationHandler(callback) {\n  return addMetricObserver('fid', callback, instrumentFid, _previousFid);\n}\n\n/**\n * Add a callback that will be triggered when a INP metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nfunction addInpInstrumentationHandler(\n  callback,\n) {\n  return addMetricObserver('inp', callback, instrumentInp, _previousInp);\n}\n\n/**\n * Add a callback that will be triggered when a performance observer is triggered,\n * and receives the entries of the observer.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nfunction addPerformanceInstrumentationHandler(\n  type,\n  callback,\n) {\n  addHandler(type, callback);\n\n  if (!instrumented[type]) {\n    instrumentPerformanceObserver(type);\n    instrumented[type] = true;\n  }\n\n  return getCleanupCallback(type, callback);\n}\n\n/** Trigger all handlers of a given type. */\nfunction triggerHandlers(type, data) {\n  const typeHandlers = handlers[type];\n\n  if (!typeHandlers || !typeHandlers.length) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\nfunction instrumentCls() {\n  return onCLS(metric => {\n    triggerHandlers('cls', {\n      metric,\n    });\n    _previousCls = metric;\n  });\n}\n\nfunction instrumentFid() {\n  return onFID(metric => {\n    triggerHandlers('fid', {\n      metric,\n    });\n    _previousFid = metric;\n  });\n}\n\nfunction instrumentLcp() {\n  return onLCP(metric => {\n    triggerHandlers('lcp', {\n      metric,\n    });\n    _previousLcp = metric;\n  });\n}\n\nfunction instrumentInp() {\n  return onINP(metric => {\n    triggerHandlers('inp', {\n      metric,\n    });\n    _previousInp = metric;\n  });\n}\n\nfunction addMetricObserver(\n  type,\n  callback,\n  instrumentFn,\n  previousValue,\n  stopOnCallback = false,\n) {\n  addHandler(type, callback);\n\n  let stopListening;\n\n  if (!instrumented[type]) {\n    stopListening = instrumentFn();\n    instrumented[type] = true;\n  }\n\n  if (previousValue) {\n    callback({ metric: previousValue });\n  }\n\n  return getCleanupCallback(type, callback, stopOnCallback ? stopListening : undefined);\n}\n\nfunction instrumentPerformanceObserver(type) {\n  const options = {};\n\n  // Special per-type options we want to use\n  if (type === 'event') {\n    options.durationThreshold = 0;\n  }\n\n  observe(\n    type,\n    entries => {\n      triggerHandlers(type, { entries });\n    },\n    options,\n  );\n}\n\nfunction addHandler(type, handler) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(handler);\n}\n\n// Get a callback which can be called to remove the instrumentation handler\nfunction getCleanupCallback(\n  type,\n  callback,\n  stopListening,\n) {\n  return () => {\n    if (stopListening) {\n      stopListening();\n    }\n\n    const typeHandlers = handlers[type];\n\n    if (!typeHandlers) {\n      return;\n    }\n\n    const index = typeHandlers.indexOf(callback);\n    if (index !== -1) {\n      typeHandlers.splice(index, 1);\n    }\n  };\n}\n\nexport { addClsInstrumentationHandler, addFidInstrumentationHandler, addInpInstrumentationHandler, addLcpInstrumentationHandler, addPerformanceInstrumentationHandler };\n//# sourceMappingURL=instrument.js.map\n","/**\n * Checks if a given value is a valid measurement value.\n */\nfunction isMeasurementValue(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Helper function to start child on transactions. This function will make sure that the transaction will\n * use the start timestamp of the created child span if it is earlier than the transactions actual\n * start timestamp.\n *\n * Note: this will not be possible anymore in v8,\n * unless we do some special handling for browser here...\n */\nfunction _startChild(transaction, { startTimestamp, ...ctx }) {\n  // eslint-disable-next-line deprecation/deprecation\n  if (startTimestamp && transaction.startTimestamp > startTimestamp) {\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.startTimestamp = startTimestamp;\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  return transaction.startChild({\n    startTimestamp,\n    ...ctx,\n  });\n}\n\nexport { _startChild, isMeasurementValue };\n//# sourceMappingURL=utils.js.map\n","import { getActiveTransaction, spanToJSON, setMeasurement, getClient, Span, createSpanEnvelope, hasTracingEnabled, isValidSampleRate } from '@sentry/core';\nimport { browserPerformanceTimeOrigin, htmlTreeAsString, getComponentName, logger, parseUrl } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../../common/debug-build.js';\nimport { addPerformanceInstrumentationHandler, addClsInstrumentationHandler, addLcpInstrumentationHandler, addFidInstrumentationHandler, addInpInstrumentationHandler } from '../instrument.js';\nimport { WINDOW } from '../types.js';\nimport { getVisibilityWatcher } from '../web-vitals/lib/getVisibilityWatcher.js';\nimport { _startChild, isMeasurementValue } from './utils.js';\n\nconst MAX_INT_AS_BYTES = 2147483647;\n\n/**\n * Converts from milliseconds to seconds\n * @param time time in ms\n */\nfunction msToSec(time) {\n  return time / 1000;\n}\n\nfunction getBrowserPerformanceAPI() {\n  // @ts-expect-error we want to make sure all of these are available, even if TS is sure they are\n  return WINDOW && WINDOW.addEventListener && WINDOW.performance;\n}\n\nlet _performanceCursor = 0;\n\nlet _measurements = {};\nlet _lcpEntry;\nlet _clsEntry;\n\n/**\n * Start tracking web vitals.\n * The callback returned by this function can be used to stop tracking & ensure all measurements are final & captured.\n *\n * @returns A function that forces web vitals collection\n */\nfunction startTrackingWebVitals() {\n  const performance = getBrowserPerformanceAPI();\n  if (performance && browserPerformanceTimeOrigin) {\n    // @ts-expect-error we want to make sure all of these are available, even if TS is sure they are\n    if (performance.mark) {\n      WINDOW.performance.mark('sentry-tracing-init');\n    }\n    const fidCallback = _trackFID();\n    const clsCallback = _trackCLS();\n    const lcpCallback = _trackLCP();\n\n    return () => {\n      fidCallback();\n      clsCallback();\n      lcpCallback();\n    };\n  }\n\n  return () => undefined;\n}\n\n/**\n * Start tracking long tasks.\n */\nfunction startTrackingLongTasks() {\n  addPerformanceInstrumentationHandler('longtask', ({ entries }) => {\n    for (const entry of entries) {\n      // eslint-disable-next-line deprecation/deprecation\n      const transaction = getActiveTransaction() ;\n      if (!transaction) {\n        return;\n      }\n      const startTime = msToSec((browserPerformanceTimeOrigin ) + entry.startTime);\n      const duration = msToSec(entry.duration);\n\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.startChild({\n        description: 'Main UI thread blocked',\n        op: 'ui.long-task',\n        origin: 'auto.ui.browser.metrics',\n        startTimestamp: startTime,\n        endTimestamp: startTime + duration,\n      });\n    }\n  });\n}\n\n/**\n * Start tracking interaction events.\n */\nfunction startTrackingInteractions() {\n  addPerformanceInstrumentationHandler('event', ({ entries }) => {\n    for (const entry of entries) {\n      // eslint-disable-next-line deprecation/deprecation\n      const transaction = getActiveTransaction() ;\n      if (!transaction) {\n        return;\n      }\n\n      if (entry.name === 'click') {\n        const startTime = msToSec((browserPerformanceTimeOrigin ) + entry.startTime);\n        const duration = msToSec(entry.duration);\n\n        const span = {\n          description: htmlTreeAsString(entry.target),\n          op: `ui.interaction.${entry.name}`,\n          origin: 'auto.ui.browser.metrics',\n          startTimestamp: startTime,\n          endTimestamp: startTime + duration,\n        };\n\n        const componentName = getComponentName(entry.target);\n        if (componentName) {\n          span.attributes = { 'ui.component_name': componentName };\n        }\n\n        // eslint-disable-next-line deprecation/deprecation\n        transaction.startChild(span);\n      }\n    }\n  });\n}\n\n/**\n * Start tracking INP webvital events.\n */\nfunction startTrackingINP(interactionIdtoRouteNameMapping) {\n  const performance = getBrowserPerformanceAPI();\n  if (performance && browserPerformanceTimeOrigin) {\n    const inpCallback = _trackINP(interactionIdtoRouteNameMapping);\n\n    return () => {\n      inpCallback();\n    };\n  }\n\n  return () => undefined;\n}\n\n/** Starts tracking the Cumulative Layout Shift on the current page. */\nfunction _trackCLS() {\n  return addClsInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('[Measurements] Adding CLS');\n    _measurements['cls'] = { value: metric.value, unit: '' };\n    _clsEntry = entry ;\n  }, true);\n}\n\n/** Starts tracking the Largest Contentful Paint on the current page. */\nfunction _trackLCP() {\n  return addLcpInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('[Measurements] Adding LCP');\n    _measurements['lcp'] = { value: metric.value, unit: 'millisecond' };\n    _lcpEntry = entry ;\n  }, true);\n}\n\n/** Starts tracking the First Input Delay on the current page. */\nfunction _trackFID() {\n  return addFidInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    const timeOrigin = msToSec(browserPerformanceTimeOrigin );\n    const startTime = msToSec(entry.startTime);\n    DEBUG_BUILD && logger.log('[Measurements] Adding FID');\n    _measurements['fid'] = { value: metric.value, unit: 'millisecond' };\n    _measurements['mark.fid'] = { value: timeOrigin + startTime, unit: 'second' };\n  });\n}\n\n/** Starts tracking the Interaction to Next Paint on the current page. */\nfunction _trackINP(interactionIdtoRouteNameMapping) {\n  return addInpInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries.find(e => e.name === 'click');\n    const client = getClient();\n    if (!entry || !client) {\n      return;\n    }\n    const options = client.getOptions();\n    /** Build the INP span, create an envelope from the span, and then send the envelope */\n    const startTime = msToSec((browserPerformanceTimeOrigin ) + entry.startTime);\n    const duration = msToSec(metric.value);\n    const { routeName, parentContext, activeTransaction, user, replayId } =\n      entry.interactionId !== undefined\n        ? interactionIdtoRouteNameMapping[entry.interactionId]\n        : {\n            routeName: undefined,\n            parentContext: undefined,\n            activeTransaction: undefined,\n            user: undefined,\n            replayId: undefined,\n          };\n    const userDisplay = user !== undefined ? user.email || user.id || user.ip_address : undefined;\n    // eslint-disable-next-line deprecation/deprecation\n    const profileId = activeTransaction !== undefined ? activeTransaction.getProfileId() : undefined;\n    const span = new Span({\n      startTimestamp: startTime,\n      endTimestamp: startTime + duration,\n      op: 'ui.interaction.click',\n      name: htmlTreeAsString(entry.target),\n      attributes: {\n        release: options.release,\n        environment: options.environment,\n        transaction: routeName,\n        ...(userDisplay !== undefined && userDisplay !== '' ? { user: userDisplay } : {}),\n        ...(profileId !== undefined ? { profile_id: profileId } : {}),\n        ...(replayId !== undefined ? { replay_id: replayId } : {}),\n      },\n      exclusiveTime: metric.value,\n      measurements: {\n        inp: { value: metric.value, unit: 'millisecond' },\n      },\n    });\n\n    /** Check to see if the span should be sampled */\n    const sampleRate = getSampleRate(parentContext, options);\n    if (!sampleRate) {\n      return;\n    }\n\n    if (Math.random() < (sampleRate )) {\n      const envelope = span ? createSpanEnvelope([span]) : undefined;\n      const transport = client && client.getTransport();\n      if (transport && envelope) {\n        transport.send(envelope).then(null, reason => {\n          DEBUG_BUILD && logger.error('Error while sending interaction:', reason);\n        });\n      }\n      return;\n    }\n  });\n}\n\n/** Add performance related spans to a transaction */\nfunction addPerformanceEntries(transaction) {\n  const performance = getBrowserPerformanceAPI();\n  if (!performance || !WINDOW.performance.getEntries || !browserPerformanceTimeOrigin) {\n    // Gatekeeper if performance API not available\n    return;\n  }\n\n  DEBUG_BUILD && logger.log('[Tracing] Adding & adjusting spans using Performance API');\n  const timeOrigin = msToSec(browserPerformanceTimeOrigin);\n\n  const performanceEntries = performance.getEntries();\n\n  let responseStartTimestamp;\n  let requestStartTimestamp;\n\n  const { op, start_timestamp: transactionStartTime } = spanToJSON(transaction);\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  performanceEntries.slice(_performanceCursor).forEach((entry) => {\n    const startTime = msToSec(entry.startTime);\n    const duration = msToSec(entry.duration);\n\n    // eslint-disable-next-line deprecation/deprecation\n    if (transaction.op === 'navigation' && transactionStartTime && timeOrigin + startTime < transactionStartTime) {\n      return;\n    }\n\n    switch (entry.entryType) {\n      case 'navigation': {\n        _addNavigationSpans(transaction, entry, timeOrigin);\n        responseStartTimestamp = timeOrigin + msToSec(entry.responseStart);\n        requestStartTimestamp = timeOrigin + msToSec(entry.requestStart);\n        break;\n      }\n      case 'mark':\n      case 'paint':\n      case 'measure': {\n        _addMeasureSpans(transaction, entry, startTime, duration, timeOrigin);\n\n        // capture web vitals\n        const firstHidden = getVisibilityWatcher();\n        // Only report if the page wasn't hidden prior to the web vital.\n        const shouldRecord = entry.startTime < firstHidden.firstHiddenTime;\n\n        if (entry.name === 'first-paint' && shouldRecord) {\n          DEBUG_BUILD && logger.log('[Measurements] Adding FP');\n          _measurements['fp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        if (entry.name === 'first-contentful-paint' && shouldRecord) {\n          DEBUG_BUILD && logger.log('[Measurements] Adding FCP');\n          _measurements['fcp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        break;\n      }\n      case 'resource': {\n        _addResourceSpans(transaction, entry, entry.name , startTime, duration, timeOrigin);\n        break;\n      }\n      // Ignore other entry types.\n    }\n  });\n\n  _performanceCursor = Math.max(performanceEntries.length - 1, 0);\n\n  _trackNavigator(transaction);\n\n  // Measurements are only available for pageload transactions\n  if (op === 'pageload') {\n    _addTtfbToMeasurements(_measurements, responseStartTimestamp, requestStartTimestamp, transactionStartTime);\n\n    ['fcp', 'fp', 'lcp'].forEach(name => {\n      if (!_measurements[name] || !transactionStartTime || timeOrigin >= transactionStartTime) {\n        return;\n      }\n      // The web vitals, fcp, fp, lcp, and ttfb, all measure relative to timeOrigin.\n      // Unfortunately, timeOrigin is not captured within the transaction span data, so these web vitals will need\n      // to be adjusted to be relative to transaction.startTimestamp.\n      const oldValue = _measurements[name].value;\n      const measurementTimestamp = timeOrigin + msToSec(oldValue);\n\n      // normalizedValue should be in milliseconds\n      const normalizedValue = Math.abs((measurementTimestamp - transactionStartTime) * 1000);\n      const delta = normalizedValue - oldValue;\n\n      DEBUG_BUILD && logger.log(`[Measurements] Normalized ${name} from ${oldValue} to ${normalizedValue} (${delta})`);\n      _measurements[name].value = normalizedValue;\n    });\n\n    const fidMark = _measurements['mark.fid'];\n    if (fidMark && _measurements['fid']) {\n      // create span for FID\n      _startChild(transaction, {\n        description: 'first input delay',\n        endTimestamp: fidMark.value + msToSec(_measurements['fid'].value),\n        op: 'ui.action',\n        origin: 'auto.ui.browser.metrics',\n        startTimestamp: fidMark.value,\n      });\n\n      // Delete mark.fid as we don't want it to be part of final payload\n      delete _measurements['mark.fid'];\n    }\n\n    // If FCP is not recorded we should not record the cls value\n    // according to the new definition of CLS.\n    if (!('fcp' in _measurements)) {\n      delete _measurements.cls;\n    }\n\n    Object.keys(_measurements).forEach(measurementName => {\n      setMeasurement(measurementName, _measurements[measurementName].value, _measurements[measurementName].unit);\n    });\n\n    _tagMetricInfo(transaction);\n  }\n\n  _lcpEntry = undefined;\n  _clsEntry = undefined;\n  _measurements = {};\n}\n\n/** Create measure related spans */\nfunction _addMeasureSpans(\n  transaction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  entry,\n  startTime,\n  duration,\n  timeOrigin,\n) {\n  const measureStartTimestamp = timeOrigin + startTime;\n  const measureEndTimestamp = measureStartTimestamp + duration;\n\n  _startChild(transaction, {\n    description: entry.name ,\n    endTimestamp: measureEndTimestamp,\n    op: entry.entryType ,\n    origin: 'auto.resource.browser.metrics',\n    startTimestamp: measureStartTimestamp,\n  });\n\n  return measureStartTimestamp;\n}\n\n/** Instrument navigation entries */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _addNavigationSpans(transaction, entry, timeOrigin) {\n  ['unloadEvent', 'redirect', 'domContentLoadedEvent', 'loadEvent', 'connect'].forEach(event => {\n    _addPerformanceNavigationTiming(transaction, entry, event, timeOrigin);\n  });\n  _addPerformanceNavigationTiming(transaction, entry, 'secureConnection', timeOrigin, 'TLS/SSL', 'connectEnd');\n  _addPerformanceNavigationTiming(transaction, entry, 'fetch', timeOrigin, 'cache', 'domainLookupStart');\n  _addPerformanceNavigationTiming(transaction, entry, 'domainLookup', timeOrigin, 'DNS');\n  _addRequest(transaction, entry, timeOrigin);\n}\n\n/** Create performance navigation related spans */\nfunction _addPerformanceNavigationTiming(\n  transaction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  entry,\n  event,\n  timeOrigin,\n  description,\n  eventEnd,\n) {\n  const end = eventEnd ? (entry[eventEnd] ) : (entry[`${event}End`] );\n  const start = entry[`${event}Start`] ;\n  if (!start || !end) {\n    return;\n  }\n  _startChild(transaction, {\n    op: 'browser',\n    origin: 'auto.browser.browser.metrics',\n    description: description || event,\n    startTimestamp: timeOrigin + msToSec(start),\n    endTimestamp: timeOrigin + msToSec(end),\n  });\n}\n\n/** Create request and response related spans */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _addRequest(transaction, entry, timeOrigin) {\n  if (entry.responseEnd) {\n    // It is possible that we are collecting these metrics when the page hasn't finished loading yet, for example when the HTML slowly streams in.\n    // In this case, ie. when the document request hasn't finished yet, `entry.responseEnd` will be 0.\n    // In order not to produce faulty spans, where the end timestamp is before the start timestamp, we will only collect\n    // these spans when the responseEnd value is available. The backend (Relay) would drop the entire transaction if it contained faulty spans.\n    _startChild(transaction, {\n      op: 'browser',\n      origin: 'auto.browser.browser.metrics',\n      description: 'request',\n      startTimestamp: timeOrigin + msToSec(entry.requestStart ),\n      endTimestamp: timeOrigin + msToSec(entry.responseEnd ),\n    });\n\n    _startChild(transaction, {\n      op: 'browser',\n      origin: 'auto.browser.browser.metrics',\n      description: 'response',\n      startTimestamp: timeOrigin + msToSec(entry.responseStart ),\n      endTimestamp: timeOrigin + msToSec(entry.responseEnd ),\n    });\n  }\n}\n\n/** Create resource-related spans */\nfunction _addResourceSpans(\n  transaction,\n  entry,\n  resourceUrl,\n  startTime,\n  duration,\n  timeOrigin,\n) {\n  // we already instrument based on fetch and xhr, so we don't need to\n  // duplicate spans here.\n  if (entry.initiatorType === 'xmlhttprequest' || entry.initiatorType === 'fetch') {\n    return;\n  }\n\n  const parsedUrl = parseUrl(resourceUrl);\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const data = {};\n  setResourceEntrySizeData(data, entry, 'transferSize', 'http.response_transfer_size');\n  setResourceEntrySizeData(data, entry, 'encodedBodySize', 'http.response_content_length');\n  setResourceEntrySizeData(data, entry, 'decodedBodySize', 'http.decoded_response_content_length');\n\n  if ('renderBlockingStatus' in entry) {\n    data['resource.render_blocking_status'] = entry.renderBlockingStatus;\n  }\n  if (parsedUrl.protocol) {\n    data['url.scheme'] = parsedUrl.protocol.split(':').pop(); // the protocol returned by parseUrl includes a :, but OTEL spec does not, so we remove it.\n  }\n\n  if (parsedUrl.host) {\n    data['server.address'] = parsedUrl.host;\n  }\n\n  data['url.same_origin'] = resourceUrl.includes(WINDOW.location.origin);\n\n  const startTimestamp = timeOrigin + startTime;\n  const endTimestamp = startTimestamp + duration;\n\n  _startChild(transaction, {\n    description: resourceUrl.replace(WINDOW.location.origin, ''),\n    endTimestamp,\n    op: entry.initiatorType ? `resource.${entry.initiatorType}` : 'resource.other',\n    origin: 'auto.resource.browser.metrics',\n    startTimestamp,\n    data,\n  });\n}\n\n/**\n * Capture the information of the user agent.\n */\nfunction _trackNavigator(transaction) {\n  const navigator = WINDOW.navigator ;\n  if (!navigator) {\n    return;\n  }\n\n  // track network connectivity\n  const connection = navigator.connection;\n  if (connection) {\n    if (connection.effectiveType) {\n      // TODO: Can we rewrite this to an attribute?\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.setTag('effectiveConnectionType', connection.effectiveType);\n    }\n\n    if (connection.type) {\n      // TODO: Can we rewrite this to an attribute?\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.setTag('connectionType', connection.type);\n    }\n\n    if (isMeasurementValue(connection.rtt)) {\n      _measurements['connection.rtt'] = { value: connection.rtt, unit: 'millisecond' };\n    }\n  }\n\n  if (isMeasurementValue(navigator.deviceMemory)) {\n    // TODO: Can we rewrite this to an attribute?\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.setTag('deviceMemory', `${navigator.deviceMemory} GB`);\n  }\n\n  if (isMeasurementValue(navigator.hardwareConcurrency)) {\n    // TODO: Can we rewrite this to an attribute?\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.setTag('hardwareConcurrency', String(navigator.hardwareConcurrency));\n  }\n}\n\n/** Add LCP / CLS data to transaction to allow debugging */\nfunction _tagMetricInfo(transaction) {\n  if (_lcpEntry) {\n    DEBUG_BUILD && logger.log('[Measurements] Adding LCP Data');\n\n    // Capture Properties of the LCP element that contributes to the LCP.\n\n    if (_lcpEntry.element) {\n      // TODO: Can we rewrite this to an attribute?\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.setTag('lcp.element', htmlTreeAsString(_lcpEntry.element));\n    }\n\n    if (_lcpEntry.id) {\n      // TODO: Can we rewrite this to an attribute?\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.setTag('lcp.id', _lcpEntry.id);\n    }\n\n    if (_lcpEntry.url) {\n      // Trim URL to the first 200 characters.\n      // TODO: Can we rewrite this to an attribute?\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.setTag('lcp.url', _lcpEntry.url.trim().slice(0, 200));\n    }\n\n    // TODO: Can we rewrite this to an attribute?\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.setTag('lcp.size', _lcpEntry.size);\n  }\n\n  // See: https://developer.mozilla.org/en-US/docs/Web/API/LayoutShift\n  if (_clsEntry && _clsEntry.sources) {\n    DEBUG_BUILD && logger.log('[Measurements] Adding CLS Data');\n    _clsEntry.sources.forEach((source, index) =>\n      // TODO: Can we rewrite this to an attribute?\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.setTag(`cls.source.${index + 1}`, htmlTreeAsString(source.node)),\n    );\n  }\n}\n\nfunction setResourceEntrySizeData(\n  data,\n  entry,\n  key,\n  dataKey,\n) {\n  const entryVal = entry[key];\n  if (entryVal != null && entryVal < MAX_INT_AS_BYTES) {\n    data[dataKey] = entryVal;\n  }\n}\n\n/**\n * Add ttfb information to measurements\n *\n * Exported for tests\n */\nfunction _addTtfbToMeasurements(\n  _measurements,\n  responseStartTimestamp,\n  requestStartTimestamp,\n  transactionStartTime,\n) {\n  // Generate TTFB (Time to First Byte), which measured as the time between the beginning of the transaction and the\n  // start of the response in milliseconds\n  if (typeof responseStartTimestamp === 'number' && transactionStartTime) {\n    DEBUG_BUILD && logger.log('[Measurements] Adding TTFB');\n    _measurements['ttfb'] = {\n      // As per https://developer.mozilla.org/en-US/docs/Web/API/PerformanceResourceTiming/responseStart,\n      // responseStart can be 0 if the request is coming straight from the cache.\n      // This might lead us to calculate a negative ttfb if we don't use Math.max here.\n      //\n      // This logic is the same as what is in the web-vitals library to calculate ttfb\n      // https://github.com/GoogleChrome/web-vitals/blob/2301de5015e82b09925238a228a0893635854587/src/onTTFB.ts#L92\n      // TODO(abhi): We should use the web-vitals library instead of this custom calculation.\n      value: Math.max(responseStartTimestamp - transactionStartTime, 0) * 1000,\n      unit: 'millisecond',\n    };\n\n    if (typeof requestStartTimestamp === 'number' && requestStartTimestamp <= responseStartTimestamp) {\n      // Capture the time spent making the request and receiving the first byte of the response.\n      // This is the time between the start of the request and the start of the response in milliseconds.\n      _measurements['ttfb.requestTime'] = {\n        value: (responseStartTimestamp - requestStartTimestamp) * 1000,\n        unit: 'millisecond',\n      };\n    }\n  }\n}\n\n/** Taken from @sentry/core sampling.ts */\nfunction getSampleRate(transactionContext, options) {\n  if (!hasTracingEnabled(options)) {\n    return false;\n  }\n  let sampleRate;\n  if (transactionContext !== undefined && typeof options.tracesSampler === 'function') {\n    sampleRate = options.tracesSampler({\n      transactionContext,\n      name: transactionContext.name,\n      parentSampled: transactionContext.parentSampled,\n      attributes: {\n        // eslint-disable-next-line deprecation/deprecation\n        ...transactionContext.data,\n        ...transactionContext.attributes,\n      },\n      location: WINDOW.location,\n    });\n  } else if (transactionContext !== undefined && transactionContext.sampled !== undefined) {\n    sampleRate = transactionContext.sampled;\n  } else if (typeof options.tracesSampleRate !== 'undefined') {\n    sampleRate = options.tracesSampleRate;\n  } else {\n    sampleRate = 1;\n  }\n  if (!isValidSampleRate(sampleRate)) {\n    DEBUG_BUILD && logger.warn('[Tracing] Discarding transaction because of invalid sample rate.');\n    return false;\n  }\n  return sampleRate;\n}\n\nexport { _addMeasureSpans, _addResourceSpans, _addTtfbToMeasurements, addPerformanceEntries, startTrackingINP, startTrackingInteractions, startTrackingLongTasks, startTrackingWebVitals };\n//# sourceMappingURL=index.js.map\n","import { hasTracingEnabled, setHttpStatus, getCurrentScope, getClient, startInactiveSpan, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, getIsolationScope, spanToTraceHeader, getDynamicSamplingContextFromSpan, getDynamicSamplingContextFromClient } from '@sentry/core';\nimport { generateSentryTraceHeader, dynamicSamplingContextToSentryBaggageHeader, isInstanceOf, BAGGAGE_HEADER_NAME } from '@sentry/utils';\n\n/**\n * Create and track fetch request spans for usage in combination with `addInstrumentationHandler`.\n *\n * @returns Span if a span was created, otherwise void.\n */\nfunction instrumentFetchRequest(\n  handlerData,\n  shouldCreateSpan,\n  shouldAttachHeaders,\n  spans,\n  spanOrigin = 'auto.http.browser',\n) {\n  if (!hasTracingEnabled() || !handlerData.fetchData) {\n    return undefined;\n  }\n\n  const shouldCreateSpanResult = shouldCreateSpan(handlerData.fetchData.url);\n\n  if (handlerData.endTimestamp && shouldCreateSpanResult) {\n    const spanId = handlerData.fetchData.__span;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span) {\n      if (handlerData.response) {\n        setHttpStatus(span, handlerData.response.status);\n\n        const contentLength =\n          handlerData.response && handlerData.response.headers && handlerData.response.headers.get('content-length');\n\n        if (contentLength) {\n          const contentLengthNum = parseInt(contentLength);\n          if (contentLengthNum > 0) {\n            span.setAttribute('http.response_content_length', contentLengthNum);\n          }\n        }\n      } else if (handlerData.error) {\n        span.setStatus('internal_error');\n      }\n      span.end();\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return undefined;\n  }\n\n  const scope = getCurrentScope();\n  const client = getClient();\n\n  const { method, url } = handlerData.fetchData;\n\n  const span = shouldCreateSpanResult\n    ? startInactiveSpan({\n        name: `${method} ${url}`,\n        onlyIfParent: true,\n        attributes: {\n          url,\n          type: 'fetch',\n          'http.method': method,\n          [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: spanOrigin,\n        },\n        op: 'http.client',\n      })\n    : undefined;\n\n  if (span) {\n    handlerData.fetchData.__span = span.spanContext().spanId;\n    spans[span.spanContext().spanId] = span;\n  }\n\n  if (shouldAttachHeaders(handlerData.fetchData.url) && client) {\n    const request = handlerData.args[0];\n\n    // In case the user hasn't set the second argument of a fetch call we default it to `{}`.\n    handlerData.args[1] = handlerData.args[1] || {};\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const options = handlerData.args[1];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n    options.headers = addTracingHeadersToFetchRequest(request, client, scope, options, span);\n  }\n\n  return span;\n}\n\n/**\n * Adds sentry-trace and baggage headers to the various forms of fetch headers\n */\nfunction addTracingHeadersToFetchRequest(\n  request, // unknown is actually type Request but we can't export DOM types from this package,\n  client,\n  scope,\n  options\n\n,\n  requestSpan,\n) {\n  // eslint-disable-next-line deprecation/deprecation\n  const span = requestSpan || scope.getSpan();\n\n  const isolationScope = getIsolationScope();\n\n  const { traceId, spanId, sampled, dsc } = {\n    ...isolationScope.getPropagationContext(),\n    ...scope.getPropagationContext(),\n  };\n\n  const sentryTraceHeader = span ? spanToTraceHeader(span) : generateSentryTraceHeader(traceId, spanId, sampled);\n\n  const sentryBaggageHeader = dynamicSamplingContextToSentryBaggageHeader(\n    dsc ||\n      (span ? getDynamicSamplingContextFromSpan(span) : getDynamicSamplingContextFromClient(traceId, client, scope)),\n  );\n\n  const headers =\n    options.headers ||\n    (typeof Request !== 'undefined' && isInstanceOf(request, Request) ? (request ).headers : undefined);\n\n  if (!headers) {\n    return { 'sentry-trace': sentryTraceHeader, baggage: sentryBaggageHeader };\n  } else if (typeof Headers !== 'undefined' && isInstanceOf(headers, Headers)) {\n    const newHeaders = new Headers(headers );\n\n    newHeaders.append('sentry-trace', sentryTraceHeader);\n\n    if (sentryBaggageHeader) {\n      // If the same header is appended multiple times the browser will merge the values into a single request header.\n      // Its therefore safe to simply push a \"baggage\" entry, even though there might already be another baggage header.\n      newHeaders.append(BAGGAGE_HEADER_NAME, sentryBaggageHeader);\n    }\n\n    return newHeaders ;\n  } else if (Array.isArray(headers)) {\n    const newHeaders = [...headers, ['sentry-trace', sentryTraceHeader]];\n\n    if (sentryBaggageHeader) {\n      // If there are multiple entries with the same key, the browser will merge the values into a single request header.\n      // Its therefore safe to simply push a \"baggage\" entry, even though there might already be another baggage header.\n      newHeaders.push([BAGGAGE_HEADER_NAME, sentryBaggageHeader]);\n    }\n\n    return newHeaders ;\n  } else {\n    const existingBaggageHeader = 'baggage' in headers ? headers.baggage : undefined;\n    const newBaggageHeaders = [];\n\n    if (Array.isArray(existingBaggageHeader)) {\n      newBaggageHeaders.push(...existingBaggageHeader);\n    } else if (existingBaggageHeader) {\n      newBaggageHeaders.push(existingBaggageHeader);\n    }\n\n    if (sentryBaggageHeader) {\n      newBaggageHeaders.push(sentryBaggageHeader);\n    }\n\n    return {\n      ...(headers ),\n      'sentry-trace': sentryTraceHeader,\n      baggage: newBaggageHeaders.length > 0 ? newBaggageHeaders.join(',') : undefined,\n    };\n  }\n}\n\nexport { addTracingHeadersToFetchRequest, instrumentFetchRequest };\n//# sourceMappingURL=fetch.js.map\n","import { spanToJSON, hasTracingEnabled, setHttpStatus, getCurrentScope, getIsolationScope, startInactiveSpan, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, getClient, spanToTraceHeader, getDynamicSamplingContextFromSpan, getDynamicSamplingContextFromClient } from '@sentry/core';\nimport { addFetchInstrumentationHandler, addXhrInstrumentationHandler, SENTRY_XHR_DATA_KEY, generateSentryTraceHeader, dynamicSamplingContextToSentryBaggageHeader, BAGGAGE_HEADER_NAME, browserPerformanceTimeOrigin, stringMatchesSomePattern } from '@sentry/utils';\nimport { instrumentFetchRequest } from '../common/fetch.js';\nimport { addPerformanceInstrumentationHandler } from './instrument.js';\n\n/* eslint-disable max-lines */\n\nconst DEFAULT_TRACE_PROPAGATION_TARGETS = ['localhost', /^\\/(?!\\/)/];\n\n/** Options for Request Instrumentation */\n\nconst defaultRequestInstrumentationOptions = {\n  traceFetch: true,\n  traceXHR: true,\n  enableHTTPTimings: true,\n  // TODO (v8): Remove this property\n  tracingOrigins: DEFAULT_TRACE_PROPAGATION_TARGETS,\n  tracePropagationTargets: DEFAULT_TRACE_PROPAGATION_TARGETS,\n};\n\n/** Registers span creators for xhr and fetch requests  */\nfunction instrumentOutgoingRequests(_options) {\n  const {\n    traceFetch,\n    traceXHR,\n    // eslint-disable-next-line deprecation/deprecation\n    tracePropagationTargets,\n    // eslint-disable-next-line deprecation/deprecation\n    tracingOrigins,\n    shouldCreateSpanForRequest,\n    enableHTTPTimings,\n  } = {\n    traceFetch: defaultRequestInstrumentationOptions.traceFetch,\n    traceXHR: defaultRequestInstrumentationOptions.traceXHR,\n    ..._options,\n  };\n\n  const shouldCreateSpan =\n    typeof shouldCreateSpanForRequest === 'function' ? shouldCreateSpanForRequest : (_) => true;\n\n  // TODO(v8) Remove tracingOrigins here\n  // The only reason we're passing it in here is because this instrumentOutgoingRequests function is publicly exported\n  // and we don't want to break the API. We can remove it in v8.\n  const shouldAttachHeadersWithTargets = (url) =>\n    shouldAttachHeaders(url, tracePropagationTargets || tracingOrigins);\n\n  const spans = {};\n\n  if (traceFetch) {\n    addFetchInstrumentationHandler(handlerData => {\n      const createdSpan = instrumentFetchRequest(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n      if (enableHTTPTimings && createdSpan) {\n        addHTTPTimings(createdSpan);\n      }\n    });\n  }\n\n  if (traceXHR) {\n    addXhrInstrumentationHandler(handlerData => {\n      const createdSpan = xhrCallback(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n      if (enableHTTPTimings && createdSpan) {\n        addHTTPTimings(createdSpan);\n      }\n    });\n  }\n}\n\nfunction isPerformanceResourceTiming(entry) {\n  return (\n    entry.entryType === 'resource' &&\n    'initiatorType' in entry &&\n    typeof (entry ).nextHopProtocol === 'string' &&\n    (entry.initiatorType === 'fetch' || entry.initiatorType === 'xmlhttprequest')\n  );\n}\n\n/**\n * Creates a temporary observer to listen to the next fetch/xhr resourcing timings,\n * so that when timings hit their per-browser limit they don't need to be removed.\n *\n * @param span A span that has yet to be finished, must contain `url` on data.\n */\nfunction addHTTPTimings(span) {\n  const { url } = spanToJSON(span).data || {};\n\n  if (!url || typeof url !== 'string') {\n    return;\n  }\n\n  const cleanup = addPerformanceInstrumentationHandler('resource', ({ entries }) => {\n    entries.forEach(entry => {\n      if (isPerformanceResourceTiming(entry) && entry.name.endsWith(url)) {\n        const spanData = resourceTimingEntryToSpanData(entry);\n        spanData.forEach(data => span.setAttribute(...data));\n        // In the next tick, clean this handler up\n        // We have to wait here because otherwise this cleans itself up before it is fully done\n        setTimeout(cleanup);\n      }\n    });\n  });\n}\n\n/**\n * Converts ALPN protocol ids to name and version.\n *\n * (https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids)\n * @param nextHopProtocol PerformanceResourceTiming.nextHopProtocol\n */\nfunction extractNetworkProtocol(nextHopProtocol) {\n  let name = 'unknown';\n  let version = 'unknown';\n  let _name = '';\n  for (const char of nextHopProtocol) {\n    // http/1.1 etc.\n    if (char === '/') {\n      [name, version] = nextHopProtocol.split('/');\n      break;\n    }\n    // h2, h3 etc.\n    if (!isNaN(Number(char))) {\n      name = _name === 'h' ? 'http' : _name;\n      version = nextHopProtocol.split(_name)[1];\n      break;\n    }\n    _name += char;\n  }\n  if (_name === nextHopProtocol) {\n    // webrtc, ftp, etc.\n    name = _name;\n  }\n  return { name, version };\n}\n\nfunction getAbsoluteTime(time = 0) {\n  return ((browserPerformanceTimeOrigin || performance.timeOrigin) + time) / 1000;\n}\n\nfunction resourceTimingEntryToSpanData(resourceTiming) {\n  const { name, version } = extractNetworkProtocol(resourceTiming.nextHopProtocol);\n\n  const timingSpanData = [];\n\n  timingSpanData.push(['network.protocol.version', version], ['network.protocol.name', name]);\n\n  if (!browserPerformanceTimeOrigin) {\n    return timingSpanData;\n  }\n  return [\n    ...timingSpanData,\n    ['http.request.redirect_start', getAbsoluteTime(resourceTiming.redirectStart)],\n    ['http.request.fetch_start', getAbsoluteTime(resourceTiming.fetchStart)],\n    ['http.request.domain_lookup_start', getAbsoluteTime(resourceTiming.domainLookupStart)],\n    ['http.request.domain_lookup_end', getAbsoluteTime(resourceTiming.domainLookupEnd)],\n    ['http.request.connect_start', getAbsoluteTime(resourceTiming.connectStart)],\n    ['http.request.secure_connection_start', getAbsoluteTime(resourceTiming.secureConnectionStart)],\n    ['http.request.connection_end', getAbsoluteTime(resourceTiming.connectEnd)],\n    ['http.request.request_start', getAbsoluteTime(resourceTiming.requestStart)],\n    ['http.request.response_start', getAbsoluteTime(resourceTiming.responseStart)],\n    ['http.request.response_end', getAbsoluteTime(resourceTiming.responseEnd)],\n  ];\n}\n\n/**\n * A function that determines whether to attach tracing headers to a request.\n * This was extracted from `instrumentOutgoingRequests` to make it easier to test shouldAttachHeaders.\n * We only export this fuction for testing purposes.\n */\nfunction shouldAttachHeaders(url, tracePropagationTargets) {\n  return stringMatchesSomePattern(url, tracePropagationTargets || DEFAULT_TRACE_PROPAGATION_TARGETS);\n}\n\n/**\n * Create and track xhr request spans\n *\n * @returns Span if a span was created, otherwise void.\n */\n// eslint-disable-next-line complexity\nfunction xhrCallback(\n  handlerData,\n  shouldCreateSpan,\n  shouldAttachHeaders,\n  spans,\n) {\n  const xhr = handlerData.xhr;\n  const sentryXhrData = xhr && xhr[SENTRY_XHR_DATA_KEY];\n\n  if (!hasTracingEnabled() || !xhr || xhr.__sentry_own_request__ || !sentryXhrData) {\n    return undefined;\n  }\n\n  const shouldCreateSpanResult = shouldCreateSpan(sentryXhrData.url);\n\n  // check first if the request has finished and is tracked by an existing span which should now end\n  if (handlerData.endTimestamp && shouldCreateSpanResult) {\n    const spanId = xhr.__sentry_xhr_span_id__;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span && sentryXhrData.status_code !== undefined) {\n      setHttpStatus(span, sentryXhrData.status_code);\n      span.end();\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return undefined;\n  }\n\n  const scope = getCurrentScope();\n  const isolationScope = getIsolationScope();\n\n  const span = shouldCreateSpanResult\n    ? startInactiveSpan({\n        name: `${sentryXhrData.method} ${sentryXhrData.url}`,\n        onlyIfParent: true,\n        attributes: {\n          type: 'xhr',\n          'http.method': sentryXhrData.method,\n          url: sentryXhrData.url,\n          [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.browser',\n        },\n        op: 'http.client',\n      })\n    : undefined;\n\n  if (span) {\n    xhr.__sentry_xhr_span_id__ = span.spanContext().spanId;\n    spans[xhr.__sentry_xhr_span_id__] = span;\n  }\n\n  const client = getClient();\n\n  if (xhr.setRequestHeader && shouldAttachHeaders(sentryXhrData.url) && client) {\n    const { traceId, spanId, sampled, dsc } = {\n      ...isolationScope.getPropagationContext(),\n      ...scope.getPropagationContext(),\n    };\n\n    const sentryTraceHeader = span ? spanToTraceHeader(span) : generateSentryTraceHeader(traceId, spanId, sampled);\n\n    const sentryBaggageHeader = dynamicSamplingContextToSentryBaggageHeader(\n      dsc ||\n        (span ? getDynamicSamplingContextFromSpan(span) : getDynamicSamplingContextFromClient(traceId, client, scope)),\n    );\n\n    setHeaderOnXhr(xhr, sentryTraceHeader, sentryBaggageHeader);\n  }\n\n  return span;\n}\n\nfunction setHeaderOnXhr(\n  xhr,\n  sentryTraceHeader,\n  sentryBaggageHeader,\n) {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    xhr.setRequestHeader('sentry-trace', sentryTraceHeader);\n    if (sentryBaggageHeader) {\n      // From MDN: \"If this method is called several times with the same header, the values are merged into one single request header.\"\n      // We can therefore simply set a baggage header without checking what was there before\n      // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/setRequestHeader\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      xhr.setRequestHeader(BAGGAGE_HEADER_NAME, sentryBaggageHeader);\n    }\n  } catch (_) {\n    // Error: InvalidStateError: Failed to execute 'setRequestHeader' on 'XMLHttpRequest': The object's state must be OPENED.\n  }\n}\n\nexport { DEFAULT_TRACE_PROPAGATION_TARGETS, defaultRequestInstrumentationOptions, extractNetworkProtocol, instrumentOutgoingRequests, shouldAttachHeaders, xhrCallback };\n//# sourceMappingURL=request.js.map\n","import { logger, browserPerformanceTimeOrigin, addHistoryInstrumentationHandler } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../common/debug-build.js';\nimport { WINDOW } from './types.js';\n\n/**\n * Default function implementing pageload and navigation transactions\n */\nfunction instrumentRoutingWithDefaults(\n  customStartTransaction,\n  startTransactionOnPageLoad = true,\n  startTransactionOnLocationChange = true,\n) {\n  if (!WINDOW || !WINDOW.location) {\n    DEBUG_BUILD && logger.warn('Could not initialize routing instrumentation due to invalid location');\n    return;\n  }\n\n  let startingUrl = WINDOW.location.href;\n\n  let activeTransaction;\n  if (startTransactionOnPageLoad) {\n    activeTransaction = customStartTransaction({\n      name: WINDOW.location.pathname,\n      // pageload should always start at timeOrigin (and needs to be in s, not ms)\n      startTimestamp: browserPerformanceTimeOrigin ? browserPerformanceTimeOrigin / 1000 : undefined,\n      op: 'pageload',\n      origin: 'auto.pageload.browser',\n      metadata: { source: 'url' },\n    });\n  }\n\n  if (startTransactionOnLocationChange) {\n    addHistoryInstrumentationHandler(({ to, from }) => {\n      /**\n       * This early return is there to account for some cases where a navigation transaction starts right after\n       * long-running pageload. We make sure that if `from` is undefined and a valid `startingURL` exists, we don't\n       * create an uneccessary navigation transaction.\n       *\n       * This was hard to duplicate, but this behavior stopped as soon as this fix was applied. This issue might also\n       * only be caused in certain development environments where the usage of a hot module reloader is causing\n       * errors.\n       */\n      if (from === undefined && startingUrl && startingUrl.indexOf(to) !== -1) {\n        startingUrl = undefined;\n        return;\n      }\n\n      if (from !== to) {\n        startingUrl = undefined;\n        if (activeTransaction) {\n          DEBUG_BUILD && logger.log(`[Tracing] Finishing current transaction with op: ${activeTransaction.op}`);\n          // If there's an open transaction on the scope, we need to finish it before creating an new one.\n          activeTransaction.end();\n        }\n        activeTransaction = customStartTransaction({\n          name: WINDOW.location.pathname,\n          op: 'navigation',\n          origin: 'auto.navigation.browser',\n          metadata: { source: 'url' },\n        });\n      }\n    });\n  }\n}\n\nexport { instrumentRoutingWithDefaults };\n//# sourceMappingURL=router.js.map\n","import { TRACING_DEFAULTS, addTracingExtensions, startIdleTransaction, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, getActiveTransaction } from '@sentry/core';\nimport { logger, propagationContextFromHeaders, getDomElement } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../common/debug-build.js';\nimport { registerBackgroundTabDetection } from './backgroundtab.js';\nimport { startTrackingWebVitals, startTrackingLongTasks, startTrackingInteractions, addPerformanceEntries } from './metrics/index.js';\nimport { defaultRequestInstrumentationOptions, instrumentOutgoingRequests } from './request.js';\nimport { instrumentRoutingWithDefaults } from './router.js';\nimport { WINDOW } from './types.js';\n\nconst BROWSER_TRACING_INTEGRATION_ID = 'BrowserTracing';\n\n/** Options for Browser Tracing integration */\n\nconst DEFAULT_BROWSER_TRACING_OPTIONS = {\n  ...TRACING_DEFAULTS,\n  markBackgroundTransactions: true,\n  routingInstrumentation: instrumentRoutingWithDefaults,\n  startTransactionOnLocationChange: true,\n  startTransactionOnPageLoad: true,\n  enableLongTask: true,\n  _experiments: {},\n  ...defaultRequestInstrumentationOptions,\n};\n\n/**\n * The Browser Tracing integration automatically instruments browser pageload/navigation\n * actions as transactions, and captures requests, metrics and errors as spans.\n *\n * The integration can be configured with a variety of options, and can be extended to use\n * any routing library. This integration uses {@see IdleTransaction} to create transactions.\n *\n * @deprecated Use `browserTracingIntegration()` instead.\n */\nclass BrowserTracing  {\n  // This class currently doesn't have a static `id` field like the other integration classes, because it prevented\n  // @sentry/tracing from being treeshaken. Tree shakers do not like static fields, because they behave like side effects.\n  // TODO: Come up with a better plan, than using static fields on integration classes, and use that plan on all\n  // integrations.\n\n  /** Browser Tracing integration options */\n\n  /**\n   * @inheritDoc\n   */\n\n   constructor(_options) {\n    this.name = BROWSER_TRACING_INTEGRATION_ID;\n    this._hasSetTracePropagationTargets = false;\n\n    addTracingExtensions();\n\n    if (DEBUG_BUILD) {\n      this._hasSetTracePropagationTargets = !!(\n        _options &&\n        // eslint-disable-next-line deprecation/deprecation\n        (_options.tracePropagationTargets || _options.tracingOrigins)\n      );\n    }\n\n    this.options = {\n      ...DEFAULT_BROWSER_TRACING_OPTIONS,\n      ..._options,\n    };\n\n    // Special case: enableLongTask can be set in _experiments\n    // TODO (v8): Remove this in v8\n    if (this.options._experiments.enableLongTask !== undefined) {\n      this.options.enableLongTask = this.options._experiments.enableLongTask;\n    }\n\n    // TODO (v8): remove this block after tracingOrigins is removed\n    // Set tracePropagationTargets to tracingOrigins if specified by the user\n    // In case both are specified, tracePropagationTargets takes precedence\n    // eslint-disable-next-line deprecation/deprecation\n    if (_options && !_options.tracePropagationTargets && _options.tracingOrigins) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.options.tracePropagationTargets = _options.tracingOrigins;\n    }\n\n    this._collectWebVitals = startTrackingWebVitals();\n    if (this.options.enableLongTask) {\n      startTrackingLongTasks();\n    }\n    if (this.options._experiments.enableInteractions) {\n      startTrackingInteractions();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    this._getCurrentHub = getCurrentHub;\n    const hub = getCurrentHub();\n    // eslint-disable-next-line deprecation/deprecation\n    const client = hub.getClient();\n    const clientOptions = client && client.getOptions();\n\n    const {\n      routingInstrumentation: instrumentRouting,\n      startTransactionOnLocationChange,\n      startTransactionOnPageLoad,\n      markBackgroundTransactions,\n      traceFetch,\n      traceXHR,\n      shouldCreateSpanForRequest,\n      enableHTTPTimings,\n      _experiments,\n    } = this.options;\n\n    const clientOptionsTracePropagationTargets = clientOptions && clientOptions.tracePropagationTargets;\n    // There are three ways to configure tracePropagationTargets:\n    // 1. via top level client option `tracePropagationTargets`\n    // 2. via BrowserTracing option `tracePropagationTargets`\n    // 3. via BrowserTracing option `tracingOrigins` (deprecated)\n    //\n    // To avoid confusion, favour top level client option `tracePropagationTargets`, and fallback to\n    // BrowserTracing option `tracePropagationTargets` and then `tracingOrigins` (deprecated).\n    // This is done as it minimizes bundle size (we don't have to have undefined checks).\n    //\n    // If both 1 and either one of 2 or 3 are set (from above), we log out a warning.\n    // eslint-disable-next-line deprecation/deprecation\n    const tracePropagationTargets = clientOptionsTracePropagationTargets || this.options.tracePropagationTargets;\n    if (DEBUG_BUILD && this._hasSetTracePropagationTargets && clientOptionsTracePropagationTargets) {\n      logger.warn(\n        '[Tracing] The `tracePropagationTargets` option was set in the BrowserTracing integration and top level `Sentry.init`. The top level `Sentry.init` value is being used.',\n      );\n    }\n\n    instrumentRouting(\n      (context) => {\n        const transaction = this._createRouteTransaction(context);\n\n        this.options._experiments.onStartRouteTransaction &&\n          this.options._experiments.onStartRouteTransaction(transaction, context, getCurrentHub);\n\n        return transaction;\n      },\n      startTransactionOnPageLoad,\n      startTransactionOnLocationChange,\n    );\n\n    if (markBackgroundTransactions) {\n      registerBackgroundTabDetection();\n    }\n\n    if (_experiments.enableInteractions) {\n      this._registerInteractionListener();\n    }\n\n    instrumentOutgoingRequests({\n      traceFetch,\n      traceXHR,\n      tracePropagationTargets,\n      shouldCreateSpanForRequest,\n      enableHTTPTimings,\n    });\n  }\n\n  /** Create routing idle transaction. */\n   _createRouteTransaction(context) {\n    if (!this._getCurrentHub) {\n      DEBUG_BUILD &&\n        logger.warn(`[Tracing] Did not create ${context.op} transaction because _getCurrentHub is invalid.`);\n      return undefined;\n    }\n\n    const hub = this._getCurrentHub();\n\n    const { beforeNavigate, idleTimeout, finalTimeout, heartbeatInterval } = this.options;\n\n    const isPageloadTransaction = context.op === 'pageload';\n\n    let expandedContext;\n    if (isPageloadTransaction) {\n      const sentryTrace = isPageloadTransaction ? getMetaContent('sentry-trace') : '';\n      const baggage = isPageloadTransaction ? getMetaContent('baggage') : undefined;\n      const { traceId, dsc, parentSpanId, sampled } = propagationContextFromHeaders(sentryTrace, baggage);\n      expandedContext = {\n        traceId,\n        parentSpanId,\n        parentSampled: sampled,\n        ...context,\n        metadata: {\n          // eslint-disable-next-line deprecation/deprecation\n          ...context.metadata,\n          dynamicSamplingContext: dsc,\n        },\n        trimEnd: true,\n      };\n    } else {\n      expandedContext = {\n        trimEnd: true,\n        ...context,\n      };\n    }\n\n    const modifiedContext = typeof beforeNavigate === 'function' ? beforeNavigate(expandedContext) : expandedContext;\n\n    // For backwards compatibility reasons, beforeNavigate can return undefined to \"drop\" the transaction (prevent it\n    // from being sent to Sentry).\n    const finalContext = modifiedContext === undefined ? { ...expandedContext, sampled: false } : modifiedContext;\n\n    // If `beforeNavigate` set a custom name, record that fact\n    // eslint-disable-next-line deprecation/deprecation\n    finalContext.metadata =\n      finalContext.name !== expandedContext.name\n        ? // eslint-disable-next-line deprecation/deprecation\n          { ...finalContext.metadata, source: 'custom' }\n        : // eslint-disable-next-line deprecation/deprecation\n          finalContext.metadata;\n\n    this._latestRouteName = finalContext.name;\n    this._latestRouteSource = getSource(finalContext);\n\n    // eslint-disable-next-line deprecation/deprecation\n    if (finalContext.sampled === false) {\n      DEBUG_BUILD && logger.log(`[Tracing] Will not send ${finalContext.op} transaction because of beforeNavigate.`);\n    }\n\n    DEBUG_BUILD && logger.log(`[Tracing] Starting ${finalContext.op} transaction on scope`);\n\n    const { location } = WINDOW;\n\n    const idleTransaction = startIdleTransaction(\n      hub,\n      finalContext,\n      idleTimeout,\n      finalTimeout,\n      true,\n      { location }, // for use in the tracesSampler\n      heartbeatInterval,\n      isPageloadTransaction, // should wait for finish signal if it's a pageload transaction\n    );\n\n    if (isPageloadTransaction) {\n      WINDOW.document.addEventListener('readystatechange', () => {\n        if (['interactive', 'complete'].includes(WINDOW.document.readyState)) {\n          idleTransaction.sendAutoFinishSignal();\n        }\n      });\n\n      if (['interactive', 'complete'].includes(WINDOW.document.readyState)) {\n        idleTransaction.sendAutoFinishSignal();\n      }\n    }\n\n    idleTransaction.registerBeforeFinishCallback(transaction => {\n      this._collectWebVitals();\n      addPerformanceEntries(transaction);\n    });\n\n    return idleTransaction ;\n  }\n\n  /** Start listener for interaction transactions */\n   _registerInteractionListener() {\n    let inflightInteractionTransaction;\n    const registerInteractionTransaction = () => {\n      const { idleTimeout, finalTimeout, heartbeatInterval } = this.options;\n      const op = 'ui.action.click';\n\n      // eslint-disable-next-line deprecation/deprecation\n      const currentTransaction = getActiveTransaction();\n      if (currentTransaction && currentTransaction.op && ['navigation', 'pageload'].includes(currentTransaction.op)) {\n        DEBUG_BUILD &&\n          logger.warn(\n            `[Tracing] Did not create ${op} transaction because a pageload or navigation transaction is in progress.`,\n          );\n        return undefined;\n      }\n\n      if (inflightInteractionTransaction) {\n        inflightInteractionTransaction.setFinishReason('interactionInterrupted');\n        inflightInteractionTransaction.end();\n        inflightInteractionTransaction = undefined;\n      }\n\n      if (!this._getCurrentHub) {\n        DEBUG_BUILD && logger.warn(`[Tracing] Did not create ${op} transaction because _getCurrentHub is invalid.`);\n        return undefined;\n      }\n\n      if (!this._latestRouteName) {\n        DEBUG_BUILD && logger.warn(`[Tracing] Did not create ${op} transaction because _latestRouteName is missing.`);\n        return undefined;\n      }\n\n      const hub = this._getCurrentHub();\n      const { location } = WINDOW;\n\n      const context = {\n        name: this._latestRouteName,\n        op,\n        trimEnd: true,\n        data: {\n          [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: this._latestRouteSource || 'url',\n        },\n      };\n\n      inflightInteractionTransaction = startIdleTransaction(\n        hub,\n        context,\n        idleTimeout,\n        finalTimeout,\n        true,\n        { location }, // for use in the tracesSampler\n        heartbeatInterval,\n      );\n    };\n\n    ['click'].forEach(type => {\n      addEventListener(type, registerInteractionTransaction, { once: false, capture: true });\n    });\n  }\n}\n\n/** Returns the value of a meta tag */\nfunction getMetaContent(metaName) {\n  // Can't specify generic to `getDomElement` because tracing can be used\n  // in a variety of environments, have to disable `no-unsafe-member-access`\n  // as a result.\n  const metaTag = getDomElement(`meta[name=${metaName}]`);\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return metaTag ? metaTag.getAttribute('content') : undefined;\n}\n\nfunction getSource(context) {\n  const sourceFromAttributes = context.attributes && context.attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n  // eslint-disable-next-line deprecation/deprecation\n  const sourceFromData = context.data && context.data[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n  // eslint-disable-next-line deprecation/deprecation\n  const sourceFromMetadata = context.metadata && context.metadata.source;\n\n  return sourceFromAttributes || sourceFromData || sourceFromMetadata;\n}\n\nexport { BROWSER_TRACING_INTEGRATION_ID, BrowserTracing, getMetaContent };\n//# sourceMappingURL=browsertracing.js.map\n","import { _nullishCoalesce, _optionalChain } from '@sentry/utils';\nimport { addBreadcrumb, getClient, isSentryRequestUrl, getCurrentScope, addEventProcessor, prepareEvent, getIsolationScope, setContext, captureException, spanToJSON, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE } from '@sentry/core';\nimport { GLOBAL_OBJ, normalize, fill, htmlTreeAsString, browserPerformanceTimeOrigin, logger, uuid4, SENTRY_XHR_DATA_KEY, dropUndefinedKeys, stringMatchesSomePattern, addFetchInstrumentationHandler, addXhrInstrumentationHandler, addClickKeypressInstrumentationHandler, addHistoryInstrumentationHandler, createEnvelope, createEventEnvelopeHeaders, getSdkMetadataForEnvelopeHeader, updateRateLimits, isRateLimited, consoleSandbox, isBrowser } from '@sentry/utils';\nimport { addPerformanceInstrumentationHandler, addLcpInstrumentationHandler } from '@sentry-internal/tracing';\n\n// exporting a separate copy of `WINDOW` rather than exporting the one from `@sentry/browser`\n// prevents the browser package from being bundled in the CDN bundle, and avoids a\n// circular dependency between the browser and replay packages should `@sentry/browser` import\n// from `@sentry/replay` in the future\nconst WINDOW = GLOBAL_OBJ ;\n\nconst REPLAY_SESSION_KEY = 'sentryReplaySession';\nconst REPLAY_EVENT_NAME = 'replay_event';\nconst UNABLE_TO_SEND_REPLAY = 'Unable to send Replay';\n\n// The idle limit for a session after which recording is paused.\nconst SESSION_IDLE_PAUSE_DURATION = 300000; // 5 minutes in ms\n\n// The idle limit for a session after which the session expires.\nconst SESSION_IDLE_EXPIRE_DURATION = 900000; // 15 minutes in ms\n\n/** Default flush delays */\nconst DEFAULT_FLUSH_MIN_DELAY = 5000;\n// XXX: Temp fix for our debounce logic where `maxWait` would never occur if it\n// was the same as `wait`\nconst DEFAULT_FLUSH_MAX_DELAY = 5500;\n\n/* How long to wait for error checkouts */\nconst BUFFER_CHECKOUT_TIME = 60000;\n\nconst RETRY_BASE_INTERVAL = 5000;\nconst RETRY_MAX_COUNT = 3;\n\n/* The max (uncompressed) size in bytes of a network body. Any body larger than this will be truncated. */\nconst NETWORK_BODY_MAX_SIZE = 150000;\n\n/* The max size of a single console arg that is captured. Any arg larger than this will be truncated. */\nconst CONSOLE_ARG_MAX_SIZE = 5000;\n\n/* Min. time to wait before we consider something a slow click. */\nconst SLOW_CLICK_THRESHOLD = 3000;\n/* For scroll actions after a click, we only look for a very short time period to detect programmatic scrolling. */\nconst SLOW_CLICK_SCROLL_TIMEOUT = 300;\n\n/** When encountering a total segment size exceeding this size, stop the replay (as we cannot properly ingest it). */\nconst REPLAY_MAX_EVENT_BUFFER_SIZE = 20000000; // ~20MB\n\n/** Replays must be min. 5s long before we send them. */\nconst MIN_REPLAY_DURATION = 4999;\n/* The max. allowed value that the minReplayDuration can be set to. */\nconst MIN_REPLAY_DURATION_LIMIT = 15000;\n\n/** The max. length of a replay. */\nconst MAX_REPLAY_DURATION = 3600000; // 60 minutes in ms;\n\nfunction _nullishCoalesce$1(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } }function _optionalChain$5(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }var NodeType$1;\n(function (NodeType) {\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\n})(NodeType$1 || (NodeType$1 = {}));\n\nfunction isElement$1(n) {\n    return n.nodeType === n.ELEMENT_NODE;\n}\nfunction isShadowRoot(n) {\n    const host = _optionalChain$5([n, 'optionalAccess', _ => _.host]);\n    return Boolean(_optionalChain$5([host, 'optionalAccess', _2 => _2.shadowRoot]) === n);\n}\nfunction isNativeShadowDom(shadowRoot) {\n    return Object.prototype.toString.call(shadowRoot) === '[object ShadowRoot]';\n}\nfunction fixBrowserCompatibilityIssuesInCSS(cssText) {\n    if (cssText.includes(' background-clip: text;') &&\n        !cssText.includes(' -webkit-background-clip: text;')) {\n        cssText = cssText.replace(' background-clip: text;', ' -webkit-background-clip: text; background-clip: text;');\n    }\n    return cssText;\n}\nfunction escapeImportStatement(rule) {\n    const { cssText } = rule;\n    if (cssText.split('\"').length < 3)\n        return cssText;\n    const statement = ['@import', `url(${JSON.stringify(rule.href)})`];\n    if (rule.layerName === '') {\n        statement.push(`layer`);\n    }\n    else if (rule.layerName) {\n        statement.push(`layer(${rule.layerName})`);\n    }\n    if (rule.supportsText) {\n        statement.push(`supports(${rule.supportsText})`);\n    }\n    if (rule.media.length) {\n        statement.push(rule.media.mediaText);\n    }\n    return statement.join(' ') + ';';\n}\nfunction stringifyStylesheet(s) {\n    try {\n        const rules = s.rules || s.cssRules;\n        return rules\n            ? fixBrowserCompatibilityIssuesInCSS(Array.from(rules, stringifyRule).join(''))\n            : null;\n    }\n    catch (error) {\n        return null;\n    }\n}\nfunction stringifyRule(rule) {\n    let importStringified;\n    if (isCSSImportRule(rule)) {\n        try {\n            importStringified =\n                stringifyStylesheet(rule.styleSheet) ||\n                    escapeImportStatement(rule);\n        }\n        catch (error) {\n        }\n    }\n    else if (isCSSStyleRule(rule) && rule.selectorText.includes(':')) {\n        return fixSafariColons(rule.cssText);\n    }\n    return importStringified || rule.cssText;\n}\nfunction fixSafariColons(cssStringified) {\n    const regex = /(\\[(?:[\\w-]+)[^\\\\])(:(?:[\\w-]+)\\])/gm;\n    return cssStringified.replace(regex, '$1\\\\$2');\n}\nfunction isCSSImportRule(rule) {\n    return 'styleSheet' in rule;\n}\nfunction isCSSStyleRule(rule) {\n    return 'selectorText' in rule;\n}\nclass Mirror {\n    constructor() {\n        this.idNodeMap = new Map();\n        this.nodeMetaMap = new WeakMap();\n    }\n    getId(n) {\n        if (!n)\n            return -1;\n        const id = _optionalChain$5([this, 'access', _3 => _3.getMeta, 'call', _4 => _4(n), 'optionalAccess', _5 => _5.id]);\n        return _nullishCoalesce$1(id, () => ( -1));\n    }\n    getNode(id) {\n        return this.idNodeMap.get(id) || null;\n    }\n    getIds() {\n        return Array.from(this.idNodeMap.keys());\n    }\n    getMeta(n) {\n        return this.nodeMetaMap.get(n) || null;\n    }\n    removeNodeFromMap(n) {\n        const id = this.getId(n);\n        this.idNodeMap.delete(id);\n        if (n.childNodes) {\n            n.childNodes.forEach((childNode) => this.removeNodeFromMap(childNode));\n        }\n    }\n    has(id) {\n        return this.idNodeMap.has(id);\n    }\n    hasNode(node) {\n        return this.nodeMetaMap.has(node);\n    }\n    add(n, meta) {\n        const id = meta.id;\n        this.idNodeMap.set(id, n);\n        this.nodeMetaMap.set(n, meta);\n    }\n    replace(id, n) {\n        const oldNode = this.getNode(id);\n        if (oldNode) {\n            const meta = this.nodeMetaMap.get(oldNode);\n            if (meta)\n                this.nodeMetaMap.set(n, meta);\n        }\n        this.idNodeMap.set(id, n);\n    }\n    reset() {\n        this.idNodeMap = new Map();\n        this.nodeMetaMap = new WeakMap();\n    }\n}\nfunction createMirror() {\n    return new Mirror();\n}\nfunction shouldMaskInput({ maskInputOptions, tagName, type, }) {\n    if (tagName === 'OPTION') {\n        tagName = 'SELECT';\n    }\n    return Boolean(maskInputOptions[tagName.toLowerCase()] ||\n        (type && maskInputOptions[type]) ||\n        type === 'password' ||\n        (tagName === 'INPUT' && !type && maskInputOptions['text']));\n}\nfunction maskInputValue({ isMasked, element, value, maskInputFn, }) {\n    let text = value || '';\n    if (!isMasked) {\n        return text;\n    }\n    if (maskInputFn) {\n        text = maskInputFn(text, element);\n    }\n    return '*'.repeat(text.length);\n}\nfunction toLowerCase(str) {\n    return str.toLowerCase();\n}\nfunction toUpperCase(str) {\n    return str.toUpperCase();\n}\nconst ORIGINAL_ATTRIBUTE_NAME = '__rrweb_original__';\nfunction is2DCanvasBlank(canvas) {\n    const ctx = canvas.getContext('2d');\n    if (!ctx)\n        return true;\n    const chunkSize = 50;\n    for (let x = 0; x < canvas.width; x += chunkSize) {\n        for (let y = 0; y < canvas.height; y += chunkSize) {\n            const getImageData = ctx.getImageData;\n            const originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData\n                ? getImageData[ORIGINAL_ATTRIBUTE_NAME]\n                : getImageData;\n            const pixelBuffer = new Uint32Array(originalGetImageData.call(ctx, x, y, Math.min(chunkSize, canvas.width - x), Math.min(chunkSize, canvas.height - y)).data.buffer);\n            if (pixelBuffer.some((pixel) => pixel !== 0))\n                return false;\n        }\n    }\n    return true;\n}\nfunction getInputType(element) {\n    const type = element.type;\n    return element.hasAttribute('data-rr-is-password')\n        ? 'password'\n        : type\n            ?\n                toLowerCase(type)\n            : null;\n}\nfunction getInputValue(el, tagName, type) {\n    if (tagName === 'INPUT' && (type === 'radio' || type === 'checkbox')) {\n        return el.getAttribute('value') || '';\n    }\n    return el.value;\n}\n\nlet _id = 1;\nconst tagNameRegex = new RegExp('[^a-z0-9-_:]');\nconst IGNORED_NODE = -2;\nfunction genId() {\n    return _id++;\n}\nfunction getValidTagName(element) {\n    if (element instanceof HTMLFormElement) {\n        return 'form';\n    }\n    const processedTagName = toLowerCase(element.tagName);\n    if (tagNameRegex.test(processedTagName)) {\n        return 'div';\n    }\n    return processedTagName;\n}\nfunction extractOrigin(url) {\n    let origin = '';\n    if (url.indexOf('//') > -1) {\n        origin = url.split('/').slice(0, 3).join('/');\n    }\n    else {\n        origin = url.split('/')[0];\n    }\n    origin = origin.split('?')[0];\n    return origin;\n}\nlet canvasService;\nlet canvasCtx;\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\nconst URL_PROTOCOL_MATCH = /^(?:[a-z+]+:)?\\/\\//i;\nconst URL_WWW_MATCH = /^www\\..*/i;\nconst DATA_URI = /^(data:)([^,]*),(.*)/i;\nfunction absoluteToStylesheet(cssText, href) {\n    return (cssText || '').replace(URL_IN_CSS_REF, (origin, quote1, path1, quote2, path2, path3) => {\n        const filePath = path1 || path2 || path3;\n        const maybeQuote = quote1 || quote2 || '';\n        if (!filePath) {\n            return origin;\n        }\n        if (URL_PROTOCOL_MATCH.test(filePath) || URL_WWW_MATCH.test(filePath)) {\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\n        }\n        if (DATA_URI.test(filePath)) {\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\n        }\n        if (filePath[0] === '/') {\n            return `url(${maybeQuote}${extractOrigin(href) + filePath}${maybeQuote})`;\n        }\n        const stack = href.split('/');\n        const parts = filePath.split('/');\n        stack.pop();\n        for (const part of parts) {\n            if (part === '.') {\n                continue;\n            }\n            else if (part === '..') {\n                stack.pop();\n            }\n            else {\n                stack.push(part);\n            }\n        }\n        return `url(${maybeQuote}${stack.join('/')}${maybeQuote})`;\n    });\n}\nconst SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\nconst SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\n    if (attributeValue.trim() === '') {\n        return attributeValue;\n    }\n    let pos = 0;\n    function collectCharacters(regEx) {\n        let chars;\n        const match = regEx.exec(attributeValue.substring(pos));\n        if (match) {\n            chars = match[0];\n            pos += chars.length;\n            return chars;\n        }\n        return '';\n    }\n    const output = [];\n    while (true) {\n        collectCharacters(SRCSET_COMMAS_OR_SPACES);\n        if (pos >= attributeValue.length) {\n            break;\n        }\n        let url = collectCharacters(SRCSET_NOT_SPACES);\n        if (url.slice(-1) === ',') {\n            url = absoluteToDoc(doc, url.substring(0, url.length - 1));\n            output.push(url);\n        }\n        else {\n            let descriptorsStr = '';\n            url = absoluteToDoc(doc, url);\n            let inParens = false;\n            while (true) {\n                const c = attributeValue.charAt(pos);\n                if (c === '') {\n                    output.push((url + descriptorsStr).trim());\n                    break;\n                }\n                else if (!inParens) {\n                    if (c === ',') {\n                        pos += 1;\n                        output.push((url + descriptorsStr).trim());\n                        break;\n                    }\n                    else if (c === '(') {\n                        inParens = true;\n                    }\n                }\n                else {\n                    if (c === ')') {\n                        inParens = false;\n                    }\n                }\n                descriptorsStr += c;\n                pos += 1;\n            }\n        }\n    }\n    return output.join(', ');\n}\nfunction absoluteToDoc(doc, attributeValue) {\n    if (!attributeValue || attributeValue.trim() === '') {\n        return attributeValue;\n    }\n    const a = doc.createElement('a');\n    a.href = attributeValue;\n    return a.href;\n}\nfunction isSVGElement(el) {\n    return Boolean(el.tagName === 'svg' || el.ownerSVGElement);\n}\nfunction getHref() {\n    const a = document.createElement('a');\n    a.href = '';\n    return a.href;\n}\nfunction transformAttribute(doc, tagName, name, value, element, maskAttributeFn) {\n    if (!value) {\n        return value;\n    }\n    if (name === 'src' ||\n        (name === 'href' && !(tagName === 'use' && value[0] === '#'))) {\n        return absoluteToDoc(doc, value);\n    }\n    else if (name === 'xlink:href' && value[0] !== '#') {\n        return absoluteToDoc(doc, value);\n    }\n    else if (name === 'background' &&\n        (tagName === 'table' || tagName === 'td' || tagName === 'th')) {\n        return absoluteToDoc(doc, value);\n    }\n    else if (name === 'srcset') {\n        return getAbsoluteSrcsetString(doc, value);\n    }\n    else if (name === 'style') {\n        return absoluteToStylesheet(value, getHref());\n    }\n    else if (tagName === 'object' && name === 'data') {\n        return absoluteToDoc(doc, value);\n    }\n    if (typeof maskAttributeFn === 'function') {\n        return maskAttributeFn(name, value, element);\n    }\n    return value;\n}\nfunction ignoreAttribute(tagName, name, _value) {\n    return (tagName === 'video' || tagName === 'audio') && name === 'autoplay';\n}\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\n    try {\n        if (unblockSelector && element.matches(unblockSelector)) {\n            return false;\n        }\n        if (typeof blockClass === 'string') {\n            if (element.classList.contains(blockClass)) {\n                return true;\n            }\n        }\n        else {\n            for (let eIndex = element.classList.length; eIndex--;) {\n                const className = element.classList[eIndex];\n                if (blockClass.test(className)) {\n                    return true;\n                }\n            }\n        }\n        if (blockSelector) {\n            return element.matches(blockSelector);\n        }\n    }\n    catch (e) {\n    }\n    return false;\n}\nfunction elementClassMatchesRegex(el, regex) {\n    for (let eIndex = el.classList.length; eIndex--;) {\n        const className = el.classList[eIndex];\n        if (regex.test(className)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction distanceToMatch(node, matchPredicate, limit = Infinity, distance = 0) {\n    if (!node)\n        return -1;\n    if (node.nodeType !== node.ELEMENT_NODE)\n        return -1;\n    if (distance > limit)\n        return -1;\n    if (matchPredicate(node))\n        return distance;\n    return distanceToMatch(node.parentNode, matchPredicate, limit, distance + 1);\n}\nfunction createMatchPredicate(className, selector) {\n    return (node) => {\n        const el = node;\n        if (el === null)\n            return false;\n        try {\n            if (className) {\n                if (typeof className === 'string') {\n                    if (el.matches(`.${className}`))\n                        return true;\n                }\n                else if (elementClassMatchesRegex(el, className)) {\n                    return true;\n                }\n            }\n            if (selector && el.matches(selector))\n                return true;\n            return false;\n        }\n        catch (e2) {\n            return false;\n        }\n    };\n}\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText) {\n    try {\n        const el = node.nodeType === node.ELEMENT_NODE\n            ? node\n            : node.parentElement;\n        if (el === null)\n            return false;\n        if (el.tagName === 'INPUT') {\n            const autocomplete = el.getAttribute('autocomplete');\n            const disallowedAutocompleteValues = [\n                'current-password',\n                'new-password',\n                'cc-number',\n                'cc-exp',\n                'cc-exp-month',\n                'cc-exp-year',\n                'cc-csc',\n            ];\n            if (disallowedAutocompleteValues.includes(autocomplete)) {\n                return true;\n            }\n        }\n        let maskDistance = -1;\n        let unmaskDistance = -1;\n        if (maskAllText) {\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector));\n            if (unmaskDistance < 0) {\n                return true;\n            }\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector), unmaskDistance >= 0 ? unmaskDistance : Infinity);\n        }\n        else {\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector));\n            if (maskDistance < 0) {\n                return false;\n            }\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector), maskDistance >= 0 ? maskDistance : Infinity);\n        }\n        return maskDistance >= 0\n            ? unmaskDistance >= 0\n                ? maskDistance <= unmaskDistance\n                : true\n            : unmaskDistance >= 0\n                ? false\n                : !!maskAllText;\n    }\n    catch (e) {\n    }\n    return !!maskAllText;\n}\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\n    const win = iframeEl.contentWindow;\n    if (!win) {\n        return;\n    }\n    let fired = false;\n    let readyState;\n    try {\n        readyState = win.document.readyState;\n    }\n    catch (error) {\n        return;\n    }\n    if (readyState !== 'complete') {\n        const timer = setTimeout(() => {\n            if (!fired) {\n                listener();\n                fired = true;\n            }\n        }, iframeLoadTimeout);\n        iframeEl.addEventListener('load', () => {\n            clearTimeout(timer);\n            fired = true;\n            listener();\n        });\n        return;\n    }\n    const blankUrl = 'about:blank';\n    if (win.location.href !== blankUrl ||\n        iframeEl.src === blankUrl ||\n        iframeEl.src === '') {\n        setTimeout(listener, 0);\n        return iframeEl.addEventListener('load', listener);\n    }\n    iframeEl.addEventListener('load', listener);\n}\nfunction onceStylesheetLoaded(link, listener, styleSheetLoadTimeout) {\n    let fired = false;\n    let styleSheetLoaded;\n    try {\n        styleSheetLoaded = link.sheet;\n    }\n    catch (error) {\n        return;\n    }\n    if (styleSheetLoaded)\n        return;\n    const timer = setTimeout(() => {\n        if (!fired) {\n            listener();\n            fired = true;\n        }\n    }, styleSheetLoadTimeout);\n    link.addEventListener('load', () => {\n        clearTimeout(timer);\n        fired = true;\n        listener();\n    });\n}\nfunction serializeNode(n, options) {\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskAttributeFn, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, inlineStylesheet, maskInputOptions = {}, maskTextFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, } = options;\n    const rootId = getRootId(doc, mirror);\n    switch (n.nodeType) {\n        case n.DOCUMENT_NODE:\n            if (n.compatMode !== 'CSS1Compat') {\n                return {\n                    type: NodeType$1.Document,\n                    childNodes: [],\n                    compatMode: n.compatMode,\n                };\n            }\n            else {\n                return {\n                    type: NodeType$1.Document,\n                    childNodes: [],\n                };\n            }\n        case n.DOCUMENT_TYPE_NODE:\n            return {\n                type: NodeType$1.DocumentType,\n                name: n.name,\n                publicId: n.publicId,\n                systemId: n.systemId,\n                rootId,\n            };\n        case n.ELEMENT_NODE:\n            return serializeElementNode(n, {\n                doc,\n                blockClass,\n                blockSelector,\n                unblockSelector,\n                inlineStylesheet,\n                maskAttributeFn,\n                maskInputOptions,\n                maskInputFn,\n                dataURLOptions,\n                inlineImages,\n                recordCanvas,\n                keepIframeSrcFn,\n                newlyAddedElement,\n                rootId,\n                maskAllText,\n                maskTextClass,\n                unmaskTextClass,\n                maskTextSelector,\n                unmaskTextSelector,\n            });\n        case n.TEXT_NODE:\n            return serializeTextNode(n, {\n                maskAllText,\n                maskTextClass,\n                unmaskTextClass,\n                maskTextSelector,\n                unmaskTextSelector,\n                maskTextFn,\n                maskInputOptions,\n                maskInputFn,\n                rootId,\n            });\n        case n.CDATA_SECTION_NODE:\n            return {\n                type: NodeType$1.CDATA,\n                textContent: '',\n                rootId,\n            };\n        case n.COMMENT_NODE:\n            return {\n                type: NodeType$1.Comment,\n                textContent: n.textContent || '',\n                rootId,\n            };\n        default:\n            return false;\n    }\n}\nfunction getRootId(doc, mirror) {\n    if (!mirror.hasNode(doc))\n        return undefined;\n    const docId = mirror.getId(doc);\n    return docId === 1 ? undefined : docId;\n}\nfunction serializeTextNode(n, options) {\n    const { maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, maskTextFn, maskInputOptions, maskInputFn, rootId, } = options;\n    const parentTagName = n.parentNode && n.parentNode.tagName;\n    let textContent = n.textContent;\n    const isStyle = parentTagName === 'STYLE' ? true : undefined;\n    const isScript = parentTagName === 'SCRIPT' ? true : undefined;\n    const isTextarea = parentTagName === 'TEXTAREA' ? true : undefined;\n    if (isStyle && textContent) {\n        try {\n            if (n.nextSibling || n.previousSibling) {\n            }\n            else if (_optionalChain$5([n, 'access', _6 => _6.parentNode, 'access', _7 => _7.sheet, 'optionalAccess', _8 => _8.cssRules])) {\n                textContent = stringifyStylesheet(n.parentNode.sheet);\n            }\n        }\n        catch (err) {\n            console.warn(`Cannot get CSS styles from text's parentNode. Error: ${err}`, n);\n        }\n        textContent = absoluteToStylesheet(textContent, getHref());\n    }\n    if (isScript) {\n        textContent = 'SCRIPT_PLACEHOLDER';\n    }\n    const forceMask = needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText);\n    if (!isStyle && !isScript && !isTextarea && textContent && forceMask) {\n        textContent = maskTextFn\n            ? maskTextFn(textContent)\n            : textContent.replace(/[\\S]/g, '*');\n    }\n    if (isTextarea && textContent && (maskInputOptions.textarea || forceMask)) {\n        textContent = maskInputFn\n            ? maskInputFn(textContent, n.parentNode)\n            : textContent.replace(/[\\S]/g, '*');\n    }\n    if (parentTagName === 'OPTION' && textContent) {\n        const isInputMasked = shouldMaskInput({\n            type: null,\n            tagName: parentTagName,\n            maskInputOptions,\n        });\n        textContent = maskInputValue({\n            isMasked: needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked),\n            element: n,\n            value: textContent,\n            maskInputFn,\n        });\n    }\n    return {\n        type: NodeType$1.Text,\n        textContent: textContent || '',\n        isStyle,\n        rootId,\n    };\n}\nfunction serializeElementNode(n, options) {\n    const { doc, blockClass, blockSelector, unblockSelector, inlineStylesheet, maskInputOptions = {}, maskAttributeFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, rootId, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, } = options;\n    const needBlock = _isBlockedElement(n, blockClass, blockSelector, unblockSelector);\n    const tagName = getValidTagName(n);\n    let attributes = {};\n    const len = n.attributes.length;\n    for (let i = 0; i < len; i++) {\n        const attr = n.attributes[i];\n        if (attr.name && !ignoreAttribute(tagName, attr.name, attr.value)) {\n            attributes[attr.name] = transformAttribute(doc, tagName, toLowerCase(attr.name), attr.value, n, maskAttributeFn);\n        }\n    }\n    if (tagName === 'link' && inlineStylesheet) {\n        const stylesheet = Array.from(doc.styleSheets).find((s) => {\n            return s.href === n.href;\n        });\n        let cssText = null;\n        if (stylesheet) {\n            cssText = stringifyStylesheet(stylesheet);\n        }\n        if (cssText) {\n            delete attributes.rel;\n            delete attributes.href;\n            attributes._cssText = absoluteToStylesheet(cssText, stylesheet.href);\n        }\n    }\n    if (tagName === 'style' &&\n        n.sheet &&\n        !(n.innerText || n.textContent || '').trim().length) {\n        const cssText = stringifyStylesheet(n.sheet);\n        if (cssText) {\n            attributes._cssText = absoluteToStylesheet(cssText, getHref());\n        }\n    }\n    if (tagName === 'input' ||\n        tagName === 'textarea' ||\n        tagName === 'select' ||\n        tagName === 'option') {\n        const el = n;\n        const type = getInputType(el);\n        const value = getInputValue(el, toUpperCase(tagName), type);\n        const checked = el.checked;\n        if (type !== 'submit' && type !== 'button' && value) {\n            const forceMask = needMaskingText(el, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, shouldMaskInput({\n                type,\n                tagName: toUpperCase(tagName),\n                maskInputOptions,\n            }));\n            attributes.value = maskInputValue({\n                isMasked: forceMask,\n                element: el,\n                value,\n                maskInputFn,\n            });\n        }\n        if (checked) {\n            attributes.checked = checked;\n        }\n    }\n    if (tagName === 'option') {\n        if (n.selected && !maskInputOptions['select']) {\n            attributes.selected = true;\n        }\n        else {\n            delete attributes.selected;\n        }\n    }\n    if (tagName === 'canvas' && recordCanvas) {\n        if (n.__context === '2d') {\n            if (!is2DCanvasBlank(n)) {\n                attributes.rr_dataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n            }\n        }\n        else if (!('__context' in n)) {\n            const canvasDataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n            const blankCanvas = document.createElement('canvas');\n            blankCanvas.width = n.width;\n            blankCanvas.height = n.height;\n            const blankCanvasDataURL = blankCanvas.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n            if (canvasDataURL !== blankCanvasDataURL) {\n                attributes.rr_dataURL = canvasDataURL;\n            }\n        }\n    }\n    if (tagName === 'img' && inlineImages) {\n        if (!canvasService) {\n            canvasService = doc.createElement('canvas');\n            canvasCtx = canvasService.getContext('2d');\n        }\n        const image = n;\n        const oldValue = image.crossOrigin;\n        image.crossOrigin = 'anonymous';\n        const recordInlineImage = () => {\n            image.removeEventListener('load', recordInlineImage);\n            try {\n                canvasService.width = image.naturalWidth;\n                canvasService.height = image.naturalHeight;\n                canvasCtx.drawImage(image, 0, 0);\n                attributes.rr_dataURL = canvasService.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n            }\n            catch (err) {\n                console.warn(`Cannot inline img src=${image.currentSrc}! Error: ${err}`);\n            }\n            oldValue\n                ? (attributes.crossOrigin = oldValue)\n                : image.removeAttribute('crossorigin');\n        };\n        if (image.complete && image.naturalWidth !== 0)\n            recordInlineImage();\n        else\n            image.addEventListener('load', recordInlineImage);\n    }\n    if (tagName === 'audio' || tagName === 'video') {\n        attributes.rr_mediaState = n.paused\n            ? 'paused'\n            : 'played';\n        attributes.rr_mediaCurrentTime = n.currentTime;\n    }\n    if (!newlyAddedElement) {\n        if (n.scrollLeft) {\n            attributes.rr_scrollLeft = n.scrollLeft;\n        }\n        if (n.scrollTop) {\n            attributes.rr_scrollTop = n.scrollTop;\n        }\n    }\n    if (needBlock) {\n        const { width, height } = n.getBoundingClientRect();\n        attributes = {\n            class: attributes.class,\n            rr_width: `${width}px`,\n            rr_height: `${height}px`,\n        };\n    }\n    if (tagName === 'iframe' && !keepIframeSrcFn(attributes.src)) {\n        if (!n.contentDocument) {\n            attributes.rr_src = attributes.src;\n        }\n        delete attributes.src;\n    }\n    let isCustomElement;\n    try {\n        if (customElements.get(tagName))\n            isCustomElement = true;\n    }\n    catch (e) {\n    }\n    return {\n        type: NodeType$1.Element,\n        tagName,\n        attributes,\n        childNodes: [],\n        isSVG: isSVGElement(n) || undefined,\n        needBlock,\n        rootId,\n        isCustom: isCustomElement,\n    };\n}\nfunction lowerIfExists(maybeAttr) {\n    if (maybeAttr === undefined || maybeAttr === null) {\n        return '';\n    }\n    else {\n        return maybeAttr.toLowerCase();\n    }\n}\nfunction slimDOMExcluded(sn, slimDOMOptions) {\n    if (slimDOMOptions.comment && sn.type === NodeType$1.Comment) {\n        return true;\n    }\n    else if (sn.type === NodeType$1.Element) {\n        if (slimDOMOptions.script &&\n            (sn.tagName === 'script' ||\n                (sn.tagName === 'link' &&\n                    (sn.attributes.rel === 'preload' ||\n                        sn.attributes.rel === 'modulepreload') &&\n                    sn.attributes.as === 'script') ||\n                (sn.tagName === 'link' &&\n                    sn.attributes.rel === 'prefetch' &&\n                    typeof sn.attributes.href === 'string' &&\n                    sn.attributes.href.endsWith('.js')))) {\n            return true;\n        }\n        else if (slimDOMOptions.headFavicon &&\n            ((sn.tagName === 'link' && sn.attributes.rel === 'shortcut icon') ||\n                (sn.tagName === 'meta' &&\n                    (lowerIfExists(sn.attributes.name).match(/^msapplication-tile(image|color)$/) ||\n                        lowerIfExists(sn.attributes.name) === 'application-name' ||\n                        lowerIfExists(sn.attributes.rel) === 'icon' ||\n                        lowerIfExists(sn.attributes.rel) === 'apple-touch-icon' ||\n                        lowerIfExists(sn.attributes.rel) === 'shortcut icon')))) {\n            return true;\n        }\n        else if (sn.tagName === 'meta') {\n            if (slimDOMOptions.headMetaDescKeywords &&\n                lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaSocial &&\n                (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) ||\n                    lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) ||\n                    lowerIfExists(sn.attributes.name) === 'pinterest')) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaRobots &&\n                (lowerIfExists(sn.attributes.name) === 'robots' ||\n                    lowerIfExists(sn.attributes.name) === 'googlebot' ||\n                    lowerIfExists(sn.attributes.name) === 'bingbot')) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaHttpEquiv &&\n                sn.attributes['http-equiv'] !== undefined) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaAuthorship &&\n                (lowerIfExists(sn.attributes.name) === 'author' ||\n                    lowerIfExists(sn.attributes.name) === 'generator' ||\n                    lowerIfExists(sn.attributes.name) === 'framework' ||\n                    lowerIfExists(sn.attributes.name) === 'publisher' ||\n                    lowerIfExists(sn.attributes.name) === 'progid' ||\n                    lowerIfExists(sn.attributes.property).match(/^article:/) ||\n                    lowerIfExists(sn.attributes.property).match(/^product:/))) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaVerification &&\n                (lowerIfExists(sn.attributes.name) === 'google-site-verification' ||\n                    lowerIfExists(sn.attributes.name) === 'yandex-verification' ||\n                    lowerIfExists(sn.attributes.name) === 'csrf-token' ||\n                    lowerIfExists(sn.attributes.name) === 'p:domain_verify' ||\n                    lowerIfExists(sn.attributes.name) === 'verify-v1' ||\n                    lowerIfExists(sn.attributes.name) === 'verification' ||\n                    lowerIfExists(sn.attributes.name) === 'shopify-checkout-api-token')) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction serializeNodeWithId(n, options) {\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, skipChild = false, inlineStylesheet = true, maskInputOptions = {}, maskAttributeFn, maskTextFn, maskInputFn, slimDOMOptions, dataURLOptions = {}, inlineImages = false, recordCanvas = false, onSerialize, onIframeLoad, iframeLoadTimeout = 5000, onStylesheetLoad, stylesheetLoadTimeout = 5000, keepIframeSrcFn = () => false, newlyAddedElement = false, } = options;\n    let { preserveWhiteSpace = true } = options;\n    const _serializedNode = serializeNode(n, {\n        doc,\n        mirror,\n        blockClass,\n        blockSelector,\n        maskAllText,\n        unblockSelector,\n        maskTextClass,\n        unmaskTextClass,\n        maskTextSelector,\n        unmaskTextSelector,\n        inlineStylesheet,\n        maskInputOptions,\n        maskAttributeFn,\n        maskTextFn,\n        maskInputFn,\n        dataURLOptions,\n        inlineImages,\n        recordCanvas,\n        keepIframeSrcFn,\n        newlyAddedElement,\n    });\n    if (!_serializedNode) {\n        console.warn(n, 'not serialized');\n        return null;\n    }\n    let id;\n    if (mirror.hasNode(n)) {\n        id = mirror.getId(n);\n    }\n    else if (slimDOMExcluded(_serializedNode, slimDOMOptions) ||\n        (!preserveWhiteSpace &&\n            _serializedNode.type === NodeType$1.Text &&\n            !_serializedNode.isStyle &&\n            !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, '').length)) {\n        id = IGNORED_NODE;\n    }\n    else {\n        id = genId();\n    }\n    const serializedNode = Object.assign(_serializedNode, { id });\n    mirror.add(n, serializedNode);\n    if (id === IGNORED_NODE) {\n        return null;\n    }\n    if (onSerialize) {\n        onSerialize(n);\n    }\n    let recordChild = !skipChild;\n    if (serializedNode.type === NodeType$1.Element) {\n        recordChild = recordChild && !serializedNode.needBlock;\n        delete serializedNode.needBlock;\n        const shadowRoot = n.shadowRoot;\n        if (shadowRoot && isNativeShadowDom(shadowRoot))\n            serializedNode.isShadowHost = true;\n    }\n    if ((serializedNode.type === NodeType$1.Document ||\n        serializedNode.type === NodeType$1.Element) &&\n        recordChild) {\n        if (slimDOMOptions.headWhitespace &&\n            serializedNode.type === NodeType$1.Element &&\n            serializedNode.tagName === 'head') {\n            preserveWhiteSpace = false;\n        }\n        const bypassOptions = {\n            doc,\n            mirror,\n            blockClass,\n            blockSelector,\n            maskAllText,\n            unblockSelector,\n            maskTextClass,\n            unmaskTextClass,\n            maskTextSelector,\n            unmaskTextSelector,\n            skipChild,\n            inlineStylesheet,\n            maskInputOptions,\n            maskAttributeFn,\n            maskTextFn,\n            maskInputFn,\n            slimDOMOptions,\n            dataURLOptions,\n            inlineImages,\n            recordCanvas,\n            preserveWhiteSpace,\n            onSerialize,\n            onIframeLoad,\n            iframeLoadTimeout,\n            onStylesheetLoad,\n            stylesheetLoadTimeout,\n            keepIframeSrcFn,\n        };\n        for (const childN of Array.from(n.childNodes)) {\n            const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\n            if (serializedChildNode) {\n                serializedNode.childNodes.push(serializedChildNode);\n            }\n        }\n        if (isElement$1(n) && n.shadowRoot) {\n            for (const childN of Array.from(n.shadowRoot.childNodes)) {\n                const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\n                if (serializedChildNode) {\n                    isNativeShadowDom(n.shadowRoot) &&\n                        (serializedChildNode.isShadow = true);\n                    serializedNode.childNodes.push(serializedChildNode);\n                }\n            }\n        }\n    }\n    if (n.parentNode &&\n        isShadowRoot(n.parentNode) &&\n        isNativeShadowDom(n.parentNode)) {\n        serializedNode.isShadow = true;\n    }\n    if (serializedNode.type === NodeType$1.Element &&\n        serializedNode.tagName === 'iframe') {\n        onceIframeLoaded(n, () => {\n            const iframeDoc = n.contentDocument;\n            if (iframeDoc && onIframeLoad) {\n                const serializedIframeNode = serializeNodeWithId(iframeDoc, {\n                    doc: iframeDoc,\n                    mirror,\n                    blockClass,\n                    blockSelector,\n                    unblockSelector,\n                    maskAllText,\n                    maskTextClass,\n                    unmaskTextClass,\n                    maskTextSelector,\n                    unmaskTextSelector,\n                    skipChild: false,\n                    inlineStylesheet,\n                    maskInputOptions,\n                    maskAttributeFn,\n                    maskTextFn,\n                    maskInputFn,\n                    slimDOMOptions,\n                    dataURLOptions,\n                    inlineImages,\n                    recordCanvas,\n                    preserveWhiteSpace,\n                    onSerialize,\n                    onIframeLoad,\n                    iframeLoadTimeout,\n                    onStylesheetLoad,\n                    stylesheetLoadTimeout,\n                    keepIframeSrcFn,\n                });\n                if (serializedIframeNode) {\n                    onIframeLoad(n, serializedIframeNode);\n                }\n            }\n        }, iframeLoadTimeout);\n    }\n    if (serializedNode.type === NodeType$1.Element &&\n        serializedNode.tagName === 'link' &&\n        serializedNode.attributes.rel === 'stylesheet') {\n        onceStylesheetLoaded(n, () => {\n            if (onStylesheetLoad) {\n                const serializedLinkNode = serializeNodeWithId(n, {\n                    doc,\n                    mirror,\n                    blockClass,\n                    blockSelector,\n                    unblockSelector,\n                    maskAllText,\n                    maskTextClass,\n                    unmaskTextClass,\n                    maskTextSelector,\n                    unmaskTextSelector,\n                    skipChild: false,\n                    inlineStylesheet,\n                    maskInputOptions,\n                    maskAttributeFn,\n                    maskTextFn,\n                    maskInputFn,\n                    slimDOMOptions,\n                    dataURLOptions,\n                    inlineImages,\n                    recordCanvas,\n                    preserveWhiteSpace,\n                    onSerialize,\n                    onIframeLoad,\n                    iframeLoadTimeout,\n                    onStylesheetLoad,\n                    stylesheetLoadTimeout,\n                    keepIframeSrcFn,\n                });\n                if (serializedLinkNode) {\n                    onStylesheetLoad(n, serializedLinkNode);\n                }\n            }\n        }, stylesheetLoadTimeout);\n    }\n    return serializedNode;\n}\nfunction snapshot(n, options) {\n    const { mirror = new Mirror(), blockClass = 'rr-block', blockSelector = null, unblockSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, inlineImages = false, recordCanvas = false, maskAllInputs = false, maskAttributeFn, maskTextFn, maskInputFn, slimDOM = false, dataURLOptions, preserveWhiteSpace, onSerialize, onIframeLoad, iframeLoadTimeout, onStylesheetLoad, stylesheetLoadTimeout, keepIframeSrcFn = () => false, } = options || {};\n    const maskInputOptions = maskAllInputs === true\n        ? {\n            color: true,\n            date: true,\n            'datetime-local': true,\n            email: true,\n            month: true,\n            number: true,\n            range: true,\n            search: true,\n            tel: true,\n            text: true,\n            time: true,\n            url: true,\n            week: true,\n            textarea: true,\n            select: true,\n        }\n        : maskAllInputs === false\n            ? {}\n            : maskAllInputs;\n    const slimDOMOptions = slimDOM === true || slimDOM === 'all'\n        ?\n            {\n                script: true,\n                comment: true,\n                headFavicon: true,\n                headWhitespace: true,\n                headMetaDescKeywords: slimDOM === 'all',\n                headMetaSocial: true,\n                headMetaRobots: true,\n                headMetaHttpEquiv: true,\n                headMetaAuthorship: true,\n                headMetaVerification: true,\n            }\n        : slimDOM === false\n            ? {}\n            : slimDOM;\n    return serializeNodeWithId(n, {\n        doc: n,\n        mirror,\n        blockClass,\n        blockSelector,\n        unblockSelector,\n        maskAllText,\n        maskTextClass,\n        unmaskTextClass,\n        maskTextSelector,\n        unmaskTextSelector,\n        skipChild: false,\n        inlineStylesheet,\n        maskInputOptions,\n        maskAttributeFn,\n        maskTextFn,\n        maskInputFn,\n        slimDOMOptions,\n        dataURLOptions,\n        inlineImages,\n        recordCanvas,\n        preserveWhiteSpace,\n        onSerialize,\n        onIframeLoad,\n        iframeLoadTimeout,\n        onStylesheetLoad,\n        stylesheetLoadTimeout,\n        keepIframeSrcFn,\n        newlyAddedElement: false,\n    });\n}\n\nfunction _optionalChain$4(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\nfunction on(type, fn, target = document) {\n    const options = { capture: true, passive: true };\n    target.addEventListener(type, fn, options);\n    return () => target.removeEventListener(type, fn, options);\n}\nconst DEPARTED_MIRROR_ACCESS_WARNING = 'Please stop import mirror directly. Instead of that,' +\n    '\\r\\n' +\n    'now you can use replayer.getMirror() to access the mirror instance of a replayer,' +\n    '\\r\\n' +\n    'or you can use record.mirror to access the mirror instance during recording.';\nlet _mirror = {\n    map: {},\n    getId() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return -1;\n    },\n    getNode() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return null;\n    },\n    removeNodeFromMap() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    },\n    has() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return false;\n    },\n    reset() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    },\n};\nif (typeof window !== 'undefined' && window.Proxy && window.Reflect) {\n    _mirror = new Proxy(_mirror, {\n        get(target, prop, receiver) {\n            if (prop === 'map') {\n                console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n            }\n            return Reflect.get(target, prop, receiver);\n        },\n    });\n}\nfunction throttle$1(func, wait, options = {}) {\n    let timeout = null;\n    let previous = 0;\n    return function (...args) {\n        const now = Date.now();\n        if (!previous && options.leading === false) {\n            previous = now;\n        }\n        const remaining = wait - (now - previous);\n        const context = this;\n        if (remaining <= 0 || remaining > wait) {\n            if (timeout) {\n                clearTimeout(timeout);\n                timeout = null;\n            }\n            previous = now;\n            func.apply(context, args);\n        }\n        else if (!timeout && options.trailing !== false) {\n            timeout = setTimeout(() => {\n                previous = options.leading === false ? 0 : Date.now();\n                timeout = null;\n                func.apply(context, args);\n            }, remaining);\n        }\n    };\n}\nfunction hookSetter(target, key, d, isRevoked, win = window) {\n    const original = win.Object.getOwnPropertyDescriptor(target, key);\n    win.Object.defineProperty(target, key, isRevoked\n        ? d\n        : {\n            set(value) {\n                setTimeout(() => {\n                    d.set.call(this, value);\n                }, 0);\n                if (original && original.set) {\n                    original.set.call(this, value);\n                }\n            },\n        });\n    return () => hookSetter(target, key, original || {}, true);\n}\nfunction patch(source, name, replacement) {\n    try {\n        if (!(name in source)) {\n            return () => {\n            };\n        }\n        const original = source[name];\n        const wrapped = replacement(original);\n        if (typeof wrapped === 'function') {\n            wrapped.prototype = wrapped.prototype || {};\n            Object.defineProperties(wrapped, {\n                __rrweb_original__: {\n                    enumerable: false,\n                    value: original,\n                },\n            });\n        }\n        source[name] = wrapped;\n        return () => {\n            source[name] = original;\n        };\n    }\n    catch (e2) {\n        return () => {\n        };\n    }\n}\nlet nowTimestamp = Date.now;\nif (!(/[1-9][0-9]{12}/.test(Date.now().toString()))) {\n    nowTimestamp = () => new Date().getTime();\n}\nfunction getWindowScroll(win) {\n    const doc = win.document;\n    return {\n        left: doc.scrollingElement\n            ? doc.scrollingElement.scrollLeft\n            : win.pageXOffset !== undefined\n                ? win.pageXOffset\n                : _optionalChain$4([doc, 'optionalAccess', _ => _.documentElement, 'access', _2 => _2.scrollLeft]) ||\n                    _optionalChain$4([doc, 'optionalAccess', _3 => _3.body, 'optionalAccess', _4 => _4.parentElement, 'optionalAccess', _5 => _5.scrollLeft]) ||\n                    _optionalChain$4([doc, 'optionalAccess', _6 => _6.body, 'optionalAccess', _7 => _7.scrollLeft]) ||\n                    0,\n        top: doc.scrollingElement\n            ? doc.scrollingElement.scrollTop\n            : win.pageYOffset !== undefined\n                ? win.pageYOffset\n                : _optionalChain$4([doc, 'optionalAccess', _8 => _8.documentElement, 'access', _9 => _9.scrollTop]) ||\n                    _optionalChain$4([doc, 'optionalAccess', _10 => _10.body, 'optionalAccess', _11 => _11.parentElement, 'optionalAccess', _12 => _12.scrollTop]) ||\n                    _optionalChain$4([doc, 'optionalAccess', _13 => _13.body, 'optionalAccess', _14 => _14.scrollTop]) ||\n                    0,\n    };\n}\nfunction getWindowHeight() {\n    return (window.innerHeight ||\n        (document.documentElement && document.documentElement.clientHeight) ||\n        (document.body && document.body.clientHeight));\n}\nfunction getWindowWidth() {\n    return (window.innerWidth ||\n        (document.documentElement && document.documentElement.clientWidth) ||\n        (document.body && document.body.clientWidth));\n}\nfunction isBlocked(node, blockClass, blockSelector, unblockSelector, checkAncestors) {\n    if (!node) {\n        return false;\n    }\n    const el = node.nodeType === node.ELEMENT_NODE\n        ? node\n        : node.parentElement;\n    if (!el)\n        return false;\n    const blockedPredicate = createMatchPredicate(blockClass, blockSelector);\n    if (!checkAncestors) {\n        const isUnblocked = unblockSelector && el.matches(unblockSelector);\n        return blockedPredicate(el) && !isUnblocked;\n    }\n    const blockDistance = distanceToMatch(el, blockedPredicate);\n    let unblockDistance = -1;\n    if (blockDistance < 0) {\n        return false;\n    }\n    if (unblockSelector) {\n        unblockDistance = distanceToMatch(el, createMatchPredicate(null, unblockSelector));\n    }\n    if (blockDistance > -1 && unblockDistance < 0) {\n        return true;\n    }\n    return blockDistance < unblockDistance;\n}\nfunction isSerialized(n, mirror) {\n    return mirror.getId(n) !== -1;\n}\nfunction isIgnored(n, mirror) {\n    return mirror.getId(n) === IGNORED_NODE;\n}\nfunction isAncestorRemoved(target, mirror) {\n    if (isShadowRoot(target)) {\n        return false;\n    }\n    const id = mirror.getId(target);\n    if (!mirror.has(id)) {\n        return true;\n    }\n    if (target.parentNode &&\n        target.parentNode.nodeType === target.DOCUMENT_NODE) {\n        return false;\n    }\n    if (!target.parentNode) {\n        return true;\n    }\n    return isAncestorRemoved(target.parentNode, mirror);\n}\nfunction legacy_isTouchEvent(event) {\n    return Boolean(event.changedTouches);\n}\nfunction polyfill(win = window) {\n    if ('NodeList' in win && !win.NodeList.prototype.forEach) {\n        win.NodeList.prototype.forEach = Array.prototype\n            .forEach;\n    }\n    if ('DOMTokenList' in win && !win.DOMTokenList.prototype.forEach) {\n        win.DOMTokenList.prototype.forEach = Array.prototype\n            .forEach;\n    }\n    if (!Node.prototype.contains) {\n        Node.prototype.contains = (...args) => {\n            let node = args[0];\n            if (!(0 in args)) {\n                throw new TypeError('1 argument is required');\n            }\n            do {\n                if (this === node) {\n                    return true;\n                }\n            } while ((node = node && node.parentNode));\n            return false;\n        };\n    }\n}\nfunction isSerializedIframe(n, mirror) {\n    return Boolean(n.nodeName === 'IFRAME' && mirror.getMeta(n));\n}\nfunction isSerializedStylesheet(n, mirror) {\n    return Boolean(n.nodeName === 'LINK' &&\n        n.nodeType === n.ELEMENT_NODE &&\n        n.getAttribute &&\n        n.getAttribute('rel') === 'stylesheet' &&\n        mirror.getMeta(n));\n}\nfunction hasShadowRoot(n) {\n    return Boolean(_optionalChain$4([n, 'optionalAccess', _18 => _18.shadowRoot]));\n}\nclass StyleSheetMirror {\n    constructor() {\n        this.id = 1;\n        this.styleIDMap = new WeakMap();\n        this.idStyleMap = new Map();\n    }\n    getId(stylesheet) {\n        return _nullishCoalesce(this.styleIDMap.get(stylesheet), () => ( -1));\n    }\n    has(stylesheet) {\n        return this.styleIDMap.has(stylesheet);\n    }\n    add(stylesheet, id) {\n        if (this.has(stylesheet))\n            return this.getId(stylesheet);\n        let newId;\n        if (id === undefined) {\n            newId = this.id++;\n        }\n        else\n            newId = id;\n        this.styleIDMap.set(stylesheet, newId);\n        this.idStyleMap.set(newId, stylesheet);\n        return newId;\n    }\n    getStyle(id) {\n        return this.idStyleMap.get(id) || null;\n    }\n    reset() {\n        this.styleIDMap = new WeakMap();\n        this.idStyleMap = new Map();\n        this.id = 1;\n    }\n    generateId() {\n        return this.id++;\n    }\n}\nfunction getShadowHost(n) {\n    let shadowHost = null;\n    if (_optionalChain$4([n, 'access', _19 => _19.getRootNode, 'optionalCall', _20 => _20(), 'optionalAccess', _21 => _21.nodeType]) === Node.DOCUMENT_FRAGMENT_NODE &&\n        n.getRootNode().host)\n        shadowHost = n.getRootNode().host;\n    return shadowHost;\n}\nfunction getRootShadowHost(n) {\n    let rootShadowHost = n;\n    let shadowHost;\n    while ((shadowHost = getShadowHost(rootShadowHost)))\n        rootShadowHost = shadowHost;\n    return rootShadowHost;\n}\nfunction shadowHostInDom(n) {\n    const doc = n.ownerDocument;\n    if (!doc)\n        return false;\n    const shadowHost = getRootShadowHost(n);\n    return doc.contains(shadowHost);\n}\nfunction inDom(n) {\n    const doc = n.ownerDocument;\n    if (!doc)\n        return false;\n    return doc.contains(n) || shadowHostInDom(n);\n}\nlet cachedRequestAnimationFrameImplementation;\nfunction getRequestAnimationFrameImplementation() {\n    if (cachedRequestAnimationFrameImplementation) {\n        return cachedRequestAnimationFrameImplementation;\n    }\n    const document = window.document;\n    let requestAnimationFrameImplementation = window.requestAnimationFrame;\n    if (document && typeof document.createElement === 'function') {\n        try {\n            const sandbox = document.createElement('iframe');\n            sandbox.hidden = true;\n            document.head.appendChild(sandbox);\n            const contentWindow = sandbox.contentWindow;\n            if (contentWindow && contentWindow.requestAnimationFrame) {\n                requestAnimationFrameImplementation =\n                    contentWindow.requestAnimationFrame;\n            }\n            document.head.removeChild(sandbox);\n        }\n        catch (e) {\n        }\n    }\n    return (cachedRequestAnimationFrameImplementation =\n        requestAnimationFrameImplementation.bind(window));\n}\nfunction onRequestAnimationFrame(...rest) {\n    return getRequestAnimationFrameImplementation()(...rest);\n}\n\nvar EventType = /* @__PURE__ */ ((EventType2) => {\n  EventType2[EventType2[\"DomContentLoaded\"] = 0] = \"DomContentLoaded\";\n  EventType2[EventType2[\"Load\"] = 1] = \"Load\";\n  EventType2[EventType2[\"FullSnapshot\"] = 2] = \"FullSnapshot\";\n  EventType2[EventType2[\"IncrementalSnapshot\"] = 3] = \"IncrementalSnapshot\";\n  EventType2[EventType2[\"Meta\"] = 4] = \"Meta\";\n  EventType2[EventType2[\"Custom\"] = 5] = \"Custom\";\n  EventType2[EventType2[\"Plugin\"] = 6] = \"Plugin\";\n  return EventType2;\n})(EventType || {});\nvar IncrementalSource = /* @__PURE__ */ ((IncrementalSource2) => {\n  IncrementalSource2[IncrementalSource2[\"Mutation\"] = 0] = \"Mutation\";\n  IncrementalSource2[IncrementalSource2[\"MouseMove\"] = 1] = \"MouseMove\";\n  IncrementalSource2[IncrementalSource2[\"MouseInteraction\"] = 2] = \"MouseInteraction\";\n  IncrementalSource2[IncrementalSource2[\"Scroll\"] = 3] = \"Scroll\";\n  IncrementalSource2[IncrementalSource2[\"ViewportResize\"] = 4] = \"ViewportResize\";\n  IncrementalSource2[IncrementalSource2[\"Input\"] = 5] = \"Input\";\n  IncrementalSource2[IncrementalSource2[\"TouchMove\"] = 6] = \"TouchMove\";\n  IncrementalSource2[IncrementalSource2[\"MediaInteraction\"] = 7] = \"MediaInteraction\";\n  IncrementalSource2[IncrementalSource2[\"StyleSheetRule\"] = 8] = \"StyleSheetRule\";\n  IncrementalSource2[IncrementalSource2[\"CanvasMutation\"] = 9] = \"CanvasMutation\";\n  IncrementalSource2[IncrementalSource2[\"Font\"] = 10] = \"Font\";\n  IncrementalSource2[IncrementalSource2[\"Log\"] = 11] = \"Log\";\n  IncrementalSource2[IncrementalSource2[\"Drag\"] = 12] = \"Drag\";\n  IncrementalSource2[IncrementalSource2[\"StyleDeclaration\"] = 13] = \"StyleDeclaration\";\n  IncrementalSource2[IncrementalSource2[\"Selection\"] = 14] = \"Selection\";\n  IncrementalSource2[IncrementalSource2[\"AdoptedStyleSheet\"] = 15] = \"AdoptedStyleSheet\";\n  IncrementalSource2[IncrementalSource2[\"CustomElement\"] = 16] = \"CustomElement\";\n  return IncrementalSource2;\n})(IncrementalSource || {});\nvar MouseInteractions = /* @__PURE__ */ ((MouseInteractions2) => {\n  MouseInteractions2[MouseInteractions2[\"MouseUp\"] = 0] = \"MouseUp\";\n  MouseInteractions2[MouseInteractions2[\"MouseDown\"] = 1] = \"MouseDown\";\n  MouseInteractions2[MouseInteractions2[\"Click\"] = 2] = \"Click\";\n  MouseInteractions2[MouseInteractions2[\"ContextMenu\"] = 3] = \"ContextMenu\";\n  MouseInteractions2[MouseInteractions2[\"DblClick\"] = 4] = \"DblClick\";\n  MouseInteractions2[MouseInteractions2[\"Focus\"] = 5] = \"Focus\";\n  MouseInteractions2[MouseInteractions2[\"Blur\"] = 6] = \"Blur\";\n  MouseInteractions2[MouseInteractions2[\"TouchStart\"] = 7] = \"TouchStart\";\n  MouseInteractions2[MouseInteractions2[\"TouchMove_Departed\"] = 8] = \"TouchMove_Departed\";\n  MouseInteractions2[MouseInteractions2[\"TouchEnd\"] = 9] = \"TouchEnd\";\n  MouseInteractions2[MouseInteractions2[\"TouchCancel\"] = 10] = \"TouchCancel\";\n  return MouseInteractions2;\n})(MouseInteractions || {});\nvar PointerTypes = /* @__PURE__ */ ((PointerTypes2) => {\n  PointerTypes2[PointerTypes2[\"Mouse\"] = 0] = \"Mouse\";\n  PointerTypes2[PointerTypes2[\"Pen\"] = 1] = \"Pen\";\n  PointerTypes2[PointerTypes2[\"Touch\"] = 2] = \"Touch\";\n  return PointerTypes2;\n})(PointerTypes || {});\n\nfunction _optionalChain$3(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\nfunction isNodeInLinkedList(n) {\n    return '__ln' in n;\n}\nclass DoubleLinkedList {\n    constructor() {\n        this.length = 0;\n        this.head = null;\n        this.tail = null;\n    }\n    get(position) {\n        if (position >= this.length) {\n            throw new Error('Position outside of list range');\n        }\n        let current = this.head;\n        for (let index = 0; index < position; index++) {\n            current = _optionalChain$3([current, 'optionalAccess', _ => _.next]) || null;\n        }\n        return current;\n    }\n    addNode(n) {\n        const node = {\n            value: n,\n            previous: null,\n            next: null,\n        };\n        n.__ln = node;\n        if (n.previousSibling && isNodeInLinkedList(n.previousSibling)) {\n            const current = n.previousSibling.__ln.next;\n            node.next = current;\n            node.previous = n.previousSibling.__ln;\n            n.previousSibling.__ln.next = node;\n            if (current) {\n                current.previous = node;\n            }\n        }\n        else if (n.nextSibling &&\n            isNodeInLinkedList(n.nextSibling) &&\n            n.nextSibling.__ln.previous) {\n            const current = n.nextSibling.__ln.previous;\n            node.previous = current;\n            node.next = n.nextSibling.__ln;\n            n.nextSibling.__ln.previous = node;\n            if (current) {\n                current.next = node;\n            }\n        }\n        else {\n            if (this.head) {\n                this.head.previous = node;\n            }\n            node.next = this.head;\n            this.head = node;\n        }\n        if (node.next === null) {\n            this.tail = node;\n        }\n        this.length++;\n    }\n    removeNode(n) {\n        const current = n.__ln;\n        if (!this.head) {\n            return;\n        }\n        if (!current.previous) {\n            this.head = current.next;\n            if (this.head) {\n                this.head.previous = null;\n            }\n            else {\n                this.tail = null;\n            }\n        }\n        else {\n            current.previous.next = current.next;\n            if (current.next) {\n                current.next.previous = current.previous;\n            }\n            else {\n                this.tail = current.previous;\n            }\n        }\n        if (n.__ln) {\n            delete n.__ln;\n        }\n        this.length--;\n    }\n}\nconst moveKey = (id, parentId) => `${id}@${parentId}`;\nclass MutationBuffer {\n    constructor() {\n        this.frozen = false;\n        this.locked = false;\n        this.texts = [];\n        this.attributes = [];\n        this.removes = [];\n        this.mapRemoves = [];\n        this.movedMap = {};\n        this.addedSet = new Set();\n        this.movedSet = new Set();\n        this.droppedSet = new Set();\n        this.processMutations = (mutations) => {\n            mutations.forEach(this.processMutation);\n            this.emit();\n        };\n        this.emit = () => {\n            if (this.frozen || this.locked) {\n                return;\n            }\n            const adds = [];\n            const addedIds = new Set();\n            const addList = new DoubleLinkedList();\n            const getNextId = (n) => {\n                let ns = n;\n                let nextId = IGNORED_NODE;\n                while (nextId === IGNORED_NODE) {\n                    ns = ns && ns.nextSibling;\n                    nextId = ns && this.mirror.getId(ns);\n                }\n                return nextId;\n            };\n            const pushAdd = (n) => {\n                if (!n.parentNode || !inDom(n)) {\n                    return;\n                }\n                const parentId = isShadowRoot(n.parentNode)\n                    ? this.mirror.getId(getShadowHost(n))\n                    : this.mirror.getId(n.parentNode);\n                const nextId = getNextId(n);\n                if (parentId === -1 || nextId === -1) {\n                    return addList.addNode(n);\n                }\n                const sn = serializeNodeWithId(n, {\n                    doc: this.doc,\n                    mirror: this.mirror,\n                    blockClass: this.blockClass,\n                    blockSelector: this.blockSelector,\n                    maskAllText: this.maskAllText,\n                    unblockSelector: this.unblockSelector,\n                    maskTextClass: this.maskTextClass,\n                    unmaskTextClass: this.unmaskTextClass,\n                    maskTextSelector: this.maskTextSelector,\n                    unmaskTextSelector: this.unmaskTextSelector,\n                    skipChild: true,\n                    newlyAddedElement: true,\n                    inlineStylesheet: this.inlineStylesheet,\n                    maskInputOptions: this.maskInputOptions,\n                    maskAttributeFn: this.maskAttributeFn,\n                    maskTextFn: this.maskTextFn,\n                    maskInputFn: this.maskInputFn,\n                    slimDOMOptions: this.slimDOMOptions,\n                    dataURLOptions: this.dataURLOptions,\n                    recordCanvas: this.recordCanvas,\n                    inlineImages: this.inlineImages,\n                    onSerialize: (currentN) => {\n                        if (isSerializedIframe(currentN, this.mirror)) {\n                            this.iframeManager.addIframe(currentN);\n                        }\n                        if (isSerializedStylesheet(currentN, this.mirror)) {\n                            this.stylesheetManager.trackLinkElement(currentN);\n                        }\n                        if (hasShadowRoot(n)) {\n                            this.shadowDomManager.addShadowRoot(n.shadowRoot, this.doc);\n                        }\n                    },\n                    onIframeLoad: (iframe, childSn) => {\n                        this.iframeManager.attachIframe(iframe, childSn);\n                        this.shadowDomManager.observeAttachShadow(iframe);\n                    },\n                    onStylesheetLoad: (link, childSn) => {\n                        this.stylesheetManager.attachLinkElement(link, childSn);\n                    },\n                });\n                if (sn) {\n                    adds.push({\n                        parentId,\n                        nextId,\n                        node: sn,\n                    });\n                    addedIds.add(sn.id);\n                }\n            };\n            while (this.mapRemoves.length) {\n                this.mirror.removeNodeFromMap(this.mapRemoves.shift());\n            }\n            for (const n of this.movedSet) {\n                if (isParentRemoved(this.removes, n, this.mirror) &&\n                    !this.movedSet.has(n.parentNode)) {\n                    continue;\n                }\n                pushAdd(n);\n            }\n            for (const n of this.addedSet) {\n                if (!isAncestorInSet(this.droppedSet, n) &&\n                    !isParentRemoved(this.removes, n, this.mirror)) {\n                    pushAdd(n);\n                }\n                else if (isAncestorInSet(this.movedSet, n)) {\n                    pushAdd(n);\n                }\n                else {\n                    this.droppedSet.add(n);\n                }\n            }\n            let candidate = null;\n            while (addList.length) {\n                let node = null;\n                if (candidate) {\n                    const parentId = this.mirror.getId(candidate.value.parentNode);\n                    const nextId = getNextId(candidate.value);\n                    if (parentId !== -1 && nextId !== -1) {\n                        node = candidate;\n                    }\n                }\n                if (!node) {\n                    let tailNode = addList.tail;\n                    while (tailNode) {\n                        const _node = tailNode;\n                        tailNode = tailNode.previous;\n                        if (_node) {\n                            const parentId = this.mirror.getId(_node.value.parentNode);\n                            const nextId = getNextId(_node.value);\n                            if (nextId === -1)\n                                continue;\n                            else if (parentId !== -1) {\n                                node = _node;\n                                break;\n                            }\n                            else {\n                                const unhandledNode = _node.value;\n                                if (unhandledNode.parentNode &&\n                                    unhandledNode.parentNode.nodeType ===\n                                        Node.DOCUMENT_FRAGMENT_NODE) {\n                                    const shadowHost = unhandledNode.parentNode\n                                        .host;\n                                    const parentId = this.mirror.getId(shadowHost);\n                                    if (parentId !== -1) {\n                                        node = _node;\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (!node) {\n                    while (addList.head) {\n                        addList.removeNode(addList.head.value);\n                    }\n                    break;\n                }\n                candidate = node.previous;\n                addList.removeNode(node.value);\n                pushAdd(node.value);\n            }\n            const payload = {\n                texts: this.texts\n                    .map((text) => ({\n                    id: this.mirror.getId(text.node),\n                    value: text.value,\n                }))\n                    .filter((text) => !addedIds.has(text.id))\n                    .filter((text) => this.mirror.has(text.id)),\n                attributes: this.attributes\n                    .map((attribute) => {\n                    const { attributes } = attribute;\n                    if (typeof attributes.style === 'string') {\n                        const diffAsStr = JSON.stringify(attribute.styleDiff);\n                        const unchangedAsStr = JSON.stringify(attribute._unchangedStyles);\n                        if (diffAsStr.length < attributes.style.length) {\n                            if ((diffAsStr + unchangedAsStr).split('var(').length ===\n                                attributes.style.split('var(').length) {\n                                attributes.style = attribute.styleDiff;\n                            }\n                        }\n                    }\n                    return {\n                        id: this.mirror.getId(attribute.node),\n                        attributes: attributes,\n                    };\n                })\n                    .filter((attribute) => !addedIds.has(attribute.id))\n                    .filter((attribute) => this.mirror.has(attribute.id)),\n                removes: this.removes,\n                adds,\n            };\n            if (!payload.texts.length &&\n                !payload.attributes.length &&\n                !payload.removes.length &&\n                !payload.adds.length) {\n                return;\n            }\n            this.texts = [];\n            this.attributes = [];\n            this.removes = [];\n            this.addedSet = new Set();\n            this.movedSet = new Set();\n            this.droppedSet = new Set();\n            this.movedMap = {};\n            this.mutationCb(payload);\n        };\n        this.processMutation = (m) => {\n            if (isIgnored(m.target, this.mirror)) {\n                return;\n            }\n            let unattachedDoc;\n            try {\n                unattachedDoc = document.implementation.createHTMLDocument();\n            }\n            catch (e) {\n                unattachedDoc = this.doc;\n            }\n            switch (m.type) {\n                case 'characterData': {\n                    const value = m.target.textContent;\n                    if (!isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) &&\n                        value !== m.oldValue) {\n                        this.texts.push({\n                            value: needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, this.maskAllText) && value\n                                ? this.maskTextFn\n                                    ? this.maskTextFn(value)\n                                    : value.replace(/[\\S]/g, '*')\n                                : value,\n                            node: m.target,\n                        });\n                    }\n                    break;\n                }\n                case 'attributes': {\n                    const target = m.target;\n                    let attributeName = m.attributeName;\n                    let value = m.target.getAttribute(attributeName);\n                    if (attributeName === 'value') {\n                        const type = getInputType(target);\n                        const tagName = target.tagName;\n                        value = getInputValue(target, tagName, type);\n                        const isInputMasked = shouldMaskInput({\n                            maskInputOptions: this.maskInputOptions,\n                            tagName,\n                            type,\n                        });\n                        const forceMask = needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, isInputMasked);\n                        value = maskInputValue({\n                            isMasked: forceMask,\n                            element: target,\n                            value,\n                            maskInputFn: this.maskInputFn,\n                        });\n                    }\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) ||\n                        value === m.oldValue) {\n                        return;\n                    }\n                    let item = this.attributes.find((a) => a.node === m.target);\n                    if (target.tagName === 'IFRAME' &&\n                        attributeName === 'src' &&\n                        !this.keepIframeSrcFn(value)) {\n                        if (!target.contentDocument) {\n                            attributeName = 'rr_src';\n                        }\n                        else {\n                            return;\n                        }\n                    }\n                    if (!item) {\n                        item = {\n                            node: m.target,\n                            attributes: {},\n                            styleDiff: {},\n                            _unchangedStyles: {},\n                        };\n                        this.attributes.push(item);\n                    }\n                    if (attributeName === 'type' &&\n                        target.tagName === 'INPUT' &&\n                        (m.oldValue || '').toLowerCase() === 'password') {\n                        target.setAttribute('data-rr-is-password', 'true');\n                    }\n                    if (!ignoreAttribute(target.tagName, attributeName)) {\n                        item.attributes[attributeName] = transformAttribute(this.doc, toLowerCase(target.tagName), toLowerCase(attributeName), value, target, this.maskAttributeFn);\n                        if (attributeName === 'style') {\n                            const old = unattachedDoc.createElement('span');\n                            if (m.oldValue) {\n                                old.setAttribute('style', m.oldValue);\n                            }\n                            for (const pname of Array.from(target.style)) {\n                                const newValue = target.style.getPropertyValue(pname);\n                                const newPriority = target.style.getPropertyPriority(pname);\n                                if (newValue !== old.style.getPropertyValue(pname) ||\n                                    newPriority !== old.style.getPropertyPriority(pname)) {\n                                    if (newPriority === '') {\n                                        item.styleDiff[pname] = newValue;\n                                    }\n                                    else {\n                                        item.styleDiff[pname] = [newValue, newPriority];\n                                    }\n                                }\n                                else {\n                                    item._unchangedStyles[pname] = [newValue, newPriority];\n                                }\n                            }\n                            for (const pname of Array.from(old.style)) {\n                                if (target.style.getPropertyValue(pname) === '') {\n                                    item.styleDiff[pname] = false;\n                                }\n                            }\n                        }\n                    }\n                    break;\n                }\n                case 'childList': {\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, true)) {\n                        return;\n                    }\n                    m.addedNodes.forEach((n) => this.genAdds(n, m.target));\n                    m.removedNodes.forEach((n) => {\n                        const nodeId = this.mirror.getId(n);\n                        const parentId = isShadowRoot(m.target)\n                            ? this.mirror.getId(m.target.host)\n                            : this.mirror.getId(m.target);\n                        if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) ||\n                            isIgnored(n, this.mirror) ||\n                            !isSerialized(n, this.mirror)) {\n                            return;\n                        }\n                        if (this.addedSet.has(n)) {\n                            deepDelete(this.addedSet, n);\n                            this.droppedSet.add(n);\n                        }\n                        else if (this.addedSet.has(m.target) && nodeId === -1) ;\n                        else if (isAncestorRemoved(m.target, this.mirror)) ;\n                        else if (this.movedSet.has(n) &&\n                            this.movedMap[moveKey(nodeId, parentId)]) {\n                            deepDelete(this.movedSet, n);\n                        }\n                        else {\n                            this.removes.push({\n                                parentId,\n                                id: nodeId,\n                                isShadow: isShadowRoot(m.target) && isNativeShadowDom(m.target)\n                                    ? true\n                                    : undefined,\n                            });\n                        }\n                        this.mapRemoves.push(n);\n                    });\n                    break;\n                }\n            }\n        };\n        this.genAdds = (n, target) => {\n            if (this.processedNodeManager.inOtherBuffer(n, this))\n                return;\n            if (this.addedSet.has(n) || this.movedSet.has(n))\n                return;\n            if (this.mirror.hasNode(n)) {\n                if (isIgnored(n, this.mirror)) {\n                    return;\n                }\n                this.movedSet.add(n);\n                let targetId = null;\n                if (target && this.mirror.hasNode(target)) {\n                    targetId = this.mirror.getId(target);\n                }\n                if (targetId && targetId !== -1) {\n                    this.movedMap[moveKey(this.mirror.getId(n), targetId)] = true;\n                }\n            }\n            else {\n                this.addedSet.add(n);\n                this.droppedSet.delete(n);\n            }\n            if (!isBlocked(n, this.blockClass, this.blockSelector, this.unblockSelector, false)) {\n                n.childNodes.forEach((childN) => this.genAdds(childN));\n                if (hasShadowRoot(n)) {\n                    n.shadowRoot.childNodes.forEach((childN) => {\n                        this.processedNodeManager.add(childN, this);\n                        this.genAdds(childN, n);\n                    });\n                }\n            }\n        };\n    }\n    init(options) {\n        [\n            'mutationCb',\n            'blockClass',\n            'blockSelector',\n            'unblockSelector',\n            'maskAllText',\n            'maskTextClass',\n            'unmaskTextClass',\n            'maskTextSelector',\n            'unmaskTextSelector',\n            'inlineStylesheet',\n            'maskInputOptions',\n            'maskAttributeFn',\n            'maskTextFn',\n            'maskInputFn',\n            'keepIframeSrcFn',\n            'recordCanvas',\n            'inlineImages',\n            'slimDOMOptions',\n            'dataURLOptions',\n            'doc',\n            'mirror',\n            'iframeManager',\n            'stylesheetManager',\n            'shadowDomManager',\n            'canvasManager',\n            'processedNodeManager',\n        ].forEach((key) => {\n            this[key] = options[key];\n        });\n    }\n    freeze() {\n        this.frozen = true;\n        this.canvasManager.freeze();\n    }\n    unfreeze() {\n        this.frozen = false;\n        this.canvasManager.unfreeze();\n        this.emit();\n    }\n    isFrozen() {\n        return this.frozen;\n    }\n    lock() {\n        this.locked = true;\n        this.canvasManager.lock();\n    }\n    unlock() {\n        this.locked = false;\n        this.canvasManager.unlock();\n        this.emit();\n    }\n    reset() {\n        this.shadowDomManager.reset();\n        this.canvasManager.reset();\n    }\n}\nfunction deepDelete(addsSet, n) {\n    addsSet.delete(n);\n    n.childNodes.forEach((childN) => deepDelete(addsSet, childN));\n}\nfunction isParentRemoved(removes, n, mirror) {\n    if (removes.length === 0)\n        return false;\n    return _isParentRemoved(removes, n, mirror);\n}\nfunction _isParentRemoved(removes, n, mirror) {\n    const { parentNode } = n;\n    if (!parentNode) {\n        return false;\n    }\n    const parentId = mirror.getId(parentNode);\n    if (removes.some((r) => r.id === parentId)) {\n        return true;\n    }\n    return _isParentRemoved(removes, parentNode, mirror);\n}\nfunction isAncestorInSet(set, n) {\n    if (set.size === 0)\n        return false;\n    return _isAncestorInSet(set, n);\n}\nfunction _isAncestorInSet(set, n) {\n    const { parentNode } = n;\n    if (!parentNode) {\n        return false;\n    }\n    if (set.has(parentNode)) {\n        return true;\n    }\n    return _isAncestorInSet(set, parentNode);\n}\n\nlet errorHandler;\nfunction registerErrorHandler(handler) {\n    errorHandler = handler;\n}\nfunction unregisterErrorHandler() {\n    errorHandler = undefined;\n}\nconst callbackWrapper = (cb) => {\n    if (!errorHandler) {\n        return cb;\n    }\n    const rrwebWrapped = ((...rest) => {\n        try {\n            return cb(...rest);\n        }\n        catch (error) {\n            if (errorHandler && errorHandler(error) === true) {\n                return () => {\n                };\n            }\n            throw error;\n        }\n    });\n    return rrwebWrapped;\n};\n\nfunction _optionalChain$2(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\nconst mutationBuffers = [];\nfunction getEventTarget(event) {\n    try {\n        if ('composedPath' in event) {\n            const path = event.composedPath();\n            if (path.length) {\n                return path[0];\n            }\n        }\n        else if ('path' in event && event.path.length) {\n            return event.path[0];\n        }\n    }\n    catch (e2) {\n    }\n    return event && event.target;\n}\nfunction initMutationObserver(options, rootEl) {\n    const mutationBuffer = new MutationBuffer();\n    mutationBuffers.push(mutationBuffer);\n    mutationBuffer.init(options);\n    let mutationObserverCtor = window.MutationObserver ||\n        window.__rrMutationObserver;\n    const angularZoneSymbol = _optionalChain$2([window, 'optionalAccess', _ => _.Zone, 'optionalAccess', _2 => _2.__symbol__, 'optionalCall', _3 => _3('MutationObserver')]);\n    if (angularZoneSymbol &&\n        window[angularZoneSymbol]) {\n        mutationObserverCtor = window[angularZoneSymbol];\n    }\n    const observer = new mutationObserverCtor(callbackWrapper((mutations) => {\n        if (options.onMutation && options.onMutation(mutations) === false) {\n            return;\n        }\n        mutationBuffer.processMutations.bind(mutationBuffer)(mutations);\n    }));\n    observer.observe(rootEl, {\n        attributes: true,\n        attributeOldValue: true,\n        characterData: true,\n        characterDataOldValue: true,\n        childList: true,\n        subtree: true,\n    });\n    return observer;\n}\nfunction initMoveObserver({ mousemoveCb, sampling, doc, mirror, }) {\n    if (sampling.mousemove === false) {\n        return () => {\n        };\n    }\n    const threshold = typeof sampling.mousemove === 'number' ? sampling.mousemove : 50;\n    const callbackThreshold = typeof sampling.mousemoveCallback === 'number'\n        ? sampling.mousemoveCallback\n        : 500;\n    let positions = [];\n    let timeBaseline;\n    const wrappedCb = throttle$1(callbackWrapper((source) => {\n        const totalOffset = Date.now() - timeBaseline;\n        mousemoveCb(positions.map((p) => {\n            p.timeOffset -= totalOffset;\n            return p;\n        }), source);\n        positions = [];\n        timeBaseline = null;\n    }), callbackThreshold);\n    const updatePosition = callbackWrapper(throttle$1(callbackWrapper((evt) => {\n        const target = getEventTarget(evt);\n        const { clientX, clientY } = legacy_isTouchEvent(evt)\n            ? evt.changedTouches[0]\n            : evt;\n        if (!timeBaseline) {\n            timeBaseline = nowTimestamp();\n        }\n        positions.push({\n            x: clientX,\n            y: clientY,\n            id: mirror.getId(target),\n            timeOffset: nowTimestamp() - timeBaseline,\n        });\n        wrappedCb(typeof DragEvent !== 'undefined' && evt instanceof DragEvent\n            ? IncrementalSource.Drag\n            : evt instanceof MouseEvent\n                ? IncrementalSource.MouseMove\n                : IncrementalSource.TouchMove);\n    }), threshold, {\n        trailing: false,\n    }));\n    const handlers = [\n        on('mousemove', updatePosition, doc),\n        on('touchmove', updatePosition, doc),\n        on('drag', updatePosition, doc),\n    ];\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction initMouseInteractionObserver({ mouseInteractionCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\n    if (sampling.mouseInteraction === false) {\n        return () => {\n        };\n    }\n    const disableMap = sampling.mouseInteraction === true ||\n        sampling.mouseInteraction === undefined\n        ? {}\n        : sampling.mouseInteraction;\n    const handlers = [];\n    let currentPointerType = null;\n    const getHandler = (eventKey) => {\n        return (event) => {\n            const target = getEventTarget(event);\n            if (isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\n                return;\n            }\n            let pointerType = null;\n            let thisEventKey = eventKey;\n            if ('pointerType' in event) {\n                switch (event.pointerType) {\n                    case 'mouse':\n                        pointerType = PointerTypes.Mouse;\n                        break;\n                    case 'touch':\n                        pointerType = PointerTypes.Touch;\n                        break;\n                    case 'pen':\n                        pointerType = PointerTypes.Pen;\n                        break;\n                }\n                if (pointerType === PointerTypes.Touch) {\n                    if (MouseInteractions[eventKey] === MouseInteractions.MouseDown) {\n                        thisEventKey = 'TouchStart';\n                    }\n                    else if (MouseInteractions[eventKey] === MouseInteractions.MouseUp) {\n                        thisEventKey = 'TouchEnd';\n                    }\n                }\n                else if (pointerType === PointerTypes.Pen) ;\n            }\n            else if (legacy_isTouchEvent(event)) {\n                pointerType = PointerTypes.Touch;\n            }\n            if (pointerType !== null) {\n                currentPointerType = pointerType;\n                if ((thisEventKey.startsWith('Touch') &&\n                    pointerType === PointerTypes.Touch) ||\n                    (thisEventKey.startsWith('Mouse') &&\n                        pointerType === PointerTypes.Mouse)) {\n                    pointerType = null;\n                }\n            }\n            else if (MouseInteractions[eventKey] === MouseInteractions.Click) {\n                pointerType = currentPointerType;\n                currentPointerType = null;\n            }\n            const e = legacy_isTouchEvent(event) ? event.changedTouches[0] : event;\n            if (!e) {\n                return;\n            }\n            const id = mirror.getId(target);\n            const { clientX, clientY } = e;\n            callbackWrapper(mouseInteractionCb)({\n                type: MouseInteractions[thisEventKey],\n                id,\n                x: clientX,\n                y: clientY,\n                ...(pointerType !== null && { pointerType }),\n            });\n        };\n    };\n    Object.keys(MouseInteractions)\n        .filter((key) => Number.isNaN(Number(key)) &&\n        !key.endsWith('_Departed') &&\n        disableMap[key] !== false)\n        .forEach((eventKey) => {\n        let eventName = toLowerCase(eventKey);\n        const handler = getHandler(eventKey);\n        if (window.PointerEvent) {\n            switch (MouseInteractions[eventKey]) {\n                case MouseInteractions.MouseDown:\n                case MouseInteractions.MouseUp:\n                    eventName = eventName.replace('mouse', 'pointer');\n                    break;\n                case MouseInteractions.TouchStart:\n                case MouseInteractions.TouchEnd:\n                    return;\n            }\n        }\n        handlers.push(on(eventName, handler, doc));\n    });\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction initScrollObserver({ scrollCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\n    const updatePosition = callbackWrapper(throttle$1(callbackWrapper((evt) => {\n        const target = getEventTarget(evt);\n        if (!target ||\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\n            return;\n        }\n        const id = mirror.getId(target);\n        if (target === doc && doc.defaultView) {\n            const scrollLeftTop = getWindowScroll(doc.defaultView);\n            scrollCb({\n                id,\n                x: scrollLeftTop.left,\n                y: scrollLeftTop.top,\n            });\n        }\n        else {\n            scrollCb({\n                id,\n                x: target.scrollLeft,\n                y: target.scrollTop,\n            });\n        }\n    }), sampling.scroll || 100));\n    return on('scroll', updatePosition, doc);\n}\nfunction initViewportResizeObserver({ viewportResizeCb }, { win }) {\n    let lastH = -1;\n    let lastW = -1;\n    const updateDimension = callbackWrapper(throttle$1(callbackWrapper(() => {\n        const height = getWindowHeight();\n        const width = getWindowWidth();\n        if (lastH !== height || lastW !== width) {\n            viewportResizeCb({\n                width: Number(width),\n                height: Number(height),\n            });\n            lastH = height;\n            lastW = width;\n        }\n    }), 200));\n    return on('resize', updateDimension, win);\n}\nconst INPUT_TAGS = ['INPUT', 'TEXTAREA', 'SELECT'];\nconst lastInputValueMap = new WeakMap();\nfunction initInputObserver({ inputCb, doc, mirror, blockClass, blockSelector, unblockSelector, ignoreClass, ignoreSelector, maskInputOptions, maskInputFn, sampling, userTriggeredOnInput, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, }) {\n    function eventHandler(event) {\n        let target = getEventTarget(event);\n        const userTriggered = event.isTrusted;\n        const tagName = target && toUpperCase(target.tagName);\n        if (tagName === 'OPTION')\n            target = target.parentElement;\n        if (!target ||\n            !tagName ||\n            INPUT_TAGS.indexOf(tagName) < 0 ||\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\n            return;\n        }\n        const el = target;\n        if (el.classList.contains(ignoreClass) ||\n            (ignoreSelector && el.matches(ignoreSelector))) {\n            return;\n        }\n        const type = getInputType(target);\n        let text = getInputValue(el, tagName, type);\n        let isChecked = false;\n        const isInputMasked = shouldMaskInput({\n            maskInputOptions,\n            tagName,\n            type,\n        });\n        const forceMask = needMaskingText(target, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked);\n        if (type === 'radio' || type === 'checkbox') {\n            isChecked = target.checked;\n        }\n        text = maskInputValue({\n            isMasked: forceMask,\n            element: target,\n            value: text,\n            maskInputFn,\n        });\n        cbWithDedup(target, userTriggeredOnInput\n            ? { text, isChecked, userTriggered }\n            : { text, isChecked });\n        const name = target.name;\n        if (type === 'radio' && name && isChecked) {\n            doc\n                .querySelectorAll(`input[type=\"radio\"][name=\"${name}\"]`)\n                .forEach((el) => {\n                if (el !== target) {\n                    const text = maskInputValue({\n                        isMasked: forceMask,\n                        element: el,\n                        value: getInputValue(el, tagName, type),\n                        maskInputFn,\n                    });\n                    cbWithDedup(el, userTriggeredOnInput\n                        ? { text, isChecked: !isChecked, userTriggered: false }\n                        : { text, isChecked: !isChecked });\n                }\n            });\n        }\n    }\n    function cbWithDedup(target, v) {\n        const lastInputValue = lastInputValueMap.get(target);\n        if (!lastInputValue ||\n            lastInputValue.text !== v.text ||\n            lastInputValue.isChecked !== v.isChecked) {\n            lastInputValueMap.set(target, v);\n            const id = mirror.getId(target);\n            callbackWrapper(inputCb)({\n                ...v,\n                id,\n            });\n        }\n    }\n    const events = sampling.input === 'last' ? ['change'] : ['input', 'change'];\n    const handlers = events.map((eventName) => on(eventName, callbackWrapper(eventHandler), doc));\n    const currentWindow = doc.defaultView;\n    if (!currentWindow) {\n        return () => {\n            handlers.forEach((h) => h());\n        };\n    }\n    const propertyDescriptor = currentWindow.Object.getOwnPropertyDescriptor(currentWindow.HTMLInputElement.prototype, 'value');\n    const hookProperties = [\n        [currentWindow.HTMLInputElement.prototype, 'value'],\n        [currentWindow.HTMLInputElement.prototype, 'checked'],\n        [currentWindow.HTMLSelectElement.prototype, 'value'],\n        [currentWindow.HTMLTextAreaElement.prototype, 'value'],\n        [currentWindow.HTMLSelectElement.prototype, 'selectedIndex'],\n        [currentWindow.HTMLOptionElement.prototype, 'selected'],\n    ];\n    if (propertyDescriptor && propertyDescriptor.set) {\n        handlers.push(...hookProperties.map((p) => hookSetter(p[0], p[1], {\n            set() {\n                callbackWrapper(eventHandler)({\n                    target: this,\n                    isTrusted: false,\n                });\n            },\n        }, false, currentWindow)));\n    }\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction getNestedCSSRulePositions(rule) {\n    const positions = [];\n    function recurse(childRule, pos) {\n        if ((hasNestedCSSRule('CSSGroupingRule') &&\n            childRule.parentRule instanceof CSSGroupingRule) ||\n            (hasNestedCSSRule('CSSMediaRule') &&\n                childRule.parentRule instanceof CSSMediaRule) ||\n            (hasNestedCSSRule('CSSSupportsRule') &&\n                childRule.parentRule instanceof CSSSupportsRule) ||\n            (hasNestedCSSRule('CSSConditionRule') &&\n                childRule.parentRule instanceof CSSConditionRule)) {\n            const rules = Array.from(childRule.parentRule.cssRules);\n            const index = rules.indexOf(childRule);\n            pos.unshift(index);\n        }\n        else if (childRule.parentStyleSheet) {\n            const rules = Array.from(childRule.parentStyleSheet.cssRules);\n            const index = rules.indexOf(childRule);\n            pos.unshift(index);\n        }\n        return pos;\n    }\n    return recurse(rule, positions);\n}\nfunction getIdAndStyleId(sheet, mirror, styleMirror) {\n    let id, styleId;\n    if (!sheet)\n        return {};\n    if (sheet.ownerNode)\n        id = mirror.getId(sheet.ownerNode);\n    else\n        styleId = styleMirror.getId(sheet);\n    return {\n        styleId,\n        id,\n    };\n}\nfunction initStyleSheetObserver({ styleSheetRuleCb, mirror, stylesheetManager }, { win }) {\n    if (!win.CSSStyleSheet || !win.CSSStyleSheet.prototype) {\n        return () => {\n        };\n    }\n    const insertRule = win.CSSStyleSheet.prototype.insertRule;\n    win.CSSStyleSheet.prototype.insertRule = new Proxy(insertRule, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            const [rule, index] = argumentsList;\n            const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                styleSheetRuleCb({\n                    id,\n                    styleId,\n                    adds: [{ rule, index }],\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    const deleteRule = win.CSSStyleSheet.prototype.deleteRule;\n    win.CSSStyleSheet.prototype.deleteRule = new Proxy(deleteRule, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            const [index] = argumentsList;\n            const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                styleSheetRuleCb({\n                    id,\n                    styleId,\n                    removes: [{ index }],\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    let replace;\n    if (win.CSSStyleSheet.prototype.replace) {\n        replace = win.CSSStyleSheet.prototype.replace;\n        win.CSSStyleSheet.prototype.replace = new Proxy(replace, {\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\n                const [text] = argumentsList;\n                const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                    styleSheetRuleCb({\n                        id,\n                        styleId,\n                        replace: text,\n                    });\n                }\n                return target.apply(thisArg, argumentsList);\n            }),\n        });\n    }\n    let replaceSync;\n    if (win.CSSStyleSheet.prototype.replaceSync) {\n        replaceSync = win.CSSStyleSheet.prototype.replaceSync;\n        win.CSSStyleSheet.prototype.replaceSync = new Proxy(replaceSync, {\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\n                const [text] = argumentsList;\n                const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                    styleSheetRuleCb({\n                        id,\n                        styleId,\n                        replaceSync: text,\n                    });\n                }\n                return target.apply(thisArg, argumentsList);\n            }),\n        });\n    }\n    const supportedNestedCSSRuleTypes = {};\n    if (canMonkeyPatchNestedCSSRule('CSSGroupingRule')) {\n        supportedNestedCSSRuleTypes.CSSGroupingRule = win.CSSGroupingRule;\n    }\n    else {\n        if (canMonkeyPatchNestedCSSRule('CSSMediaRule')) {\n            supportedNestedCSSRuleTypes.CSSMediaRule = win.CSSMediaRule;\n        }\n        if (canMonkeyPatchNestedCSSRule('CSSConditionRule')) {\n            supportedNestedCSSRuleTypes.CSSConditionRule = win.CSSConditionRule;\n        }\n        if (canMonkeyPatchNestedCSSRule('CSSSupportsRule')) {\n            supportedNestedCSSRuleTypes.CSSSupportsRule = win.CSSSupportsRule;\n        }\n    }\n    const unmodifiedFunctions = {};\n    Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\n        unmodifiedFunctions[typeKey] = {\n            insertRule: type.prototype.insertRule,\n            deleteRule: type.prototype.deleteRule,\n        };\n        type.prototype.insertRule = new Proxy(unmodifiedFunctions[typeKey].insertRule, {\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\n                const [rule, index] = argumentsList;\n                const { id, styleId } = getIdAndStyleId(thisArg.parentStyleSheet, mirror, stylesheetManager.styleMirror);\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                    styleSheetRuleCb({\n                        id,\n                        styleId,\n                        adds: [\n                            {\n                                rule,\n                                index: [\n                                    ...getNestedCSSRulePositions(thisArg),\n                                    index || 0,\n                                ],\n                            },\n                        ],\n                    });\n                }\n                return target.apply(thisArg, argumentsList);\n            }),\n        });\n        type.prototype.deleteRule = new Proxy(unmodifiedFunctions[typeKey].deleteRule, {\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\n                const [index] = argumentsList;\n                const { id, styleId } = getIdAndStyleId(thisArg.parentStyleSheet, mirror, stylesheetManager.styleMirror);\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                    styleSheetRuleCb({\n                        id,\n                        styleId,\n                        removes: [\n                            { index: [...getNestedCSSRulePositions(thisArg), index] },\n                        ],\n                    });\n                }\n                return target.apply(thisArg, argumentsList);\n            }),\n        });\n    });\n    return callbackWrapper(() => {\n        win.CSSStyleSheet.prototype.insertRule = insertRule;\n        win.CSSStyleSheet.prototype.deleteRule = deleteRule;\n        replace && (win.CSSStyleSheet.prototype.replace = replace);\n        replaceSync && (win.CSSStyleSheet.prototype.replaceSync = replaceSync);\n        Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\n            type.prototype.insertRule = unmodifiedFunctions[typeKey].insertRule;\n            type.prototype.deleteRule = unmodifiedFunctions[typeKey].deleteRule;\n        });\n    });\n}\nfunction initAdoptedStyleSheetObserver({ mirror, stylesheetManager, }, host) {\n    let hostId = null;\n    if (host.nodeName === '#document')\n        hostId = mirror.getId(host);\n    else\n        hostId = mirror.getId(host.host);\n    const patchTarget = host.nodeName === '#document'\n        ? _optionalChain$2([host, 'access', _4 => _4.defaultView, 'optionalAccess', _5 => _5.Document])\n        : _optionalChain$2([host, 'access', _6 => _6.ownerDocument, 'optionalAccess', _7 => _7.defaultView, 'optionalAccess', _8 => _8.ShadowRoot]);\n    const originalPropertyDescriptor = _optionalChain$2([patchTarget, 'optionalAccess', _9 => _9.prototype])\n        ? Object.getOwnPropertyDescriptor(_optionalChain$2([patchTarget, 'optionalAccess', _10 => _10.prototype]), 'adoptedStyleSheets')\n        : undefined;\n    if (hostId === null ||\n        hostId === -1 ||\n        !patchTarget ||\n        !originalPropertyDescriptor)\n        return () => {\n        };\n    Object.defineProperty(host, 'adoptedStyleSheets', {\n        configurable: originalPropertyDescriptor.configurable,\n        enumerable: originalPropertyDescriptor.enumerable,\n        get() {\n            return _optionalChain$2([originalPropertyDescriptor, 'access', _11 => _11.get, 'optionalAccess', _12 => _12.call, 'call', _13 => _13(this)]);\n        },\n        set(sheets) {\n            const result = _optionalChain$2([originalPropertyDescriptor, 'access', _14 => _14.set, 'optionalAccess', _15 => _15.call, 'call', _16 => _16(this, sheets)]);\n            if (hostId !== null && hostId !== -1) {\n                try {\n                    stylesheetManager.adoptStyleSheets(sheets, hostId);\n                }\n                catch (e) {\n                }\n            }\n            return result;\n        },\n    });\n    return callbackWrapper(() => {\n        Object.defineProperty(host, 'adoptedStyleSheets', {\n            configurable: originalPropertyDescriptor.configurable,\n            enumerable: originalPropertyDescriptor.enumerable,\n            get: originalPropertyDescriptor.get,\n            set: originalPropertyDescriptor.set,\n        });\n    });\n}\nfunction initStyleDeclarationObserver({ styleDeclarationCb, mirror, ignoreCSSAttributes, stylesheetManager, }, { win }) {\n    const setProperty = win.CSSStyleDeclaration.prototype.setProperty;\n    win.CSSStyleDeclaration.prototype.setProperty = new Proxy(setProperty, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            const [property, value, priority] = argumentsList;\n            if (ignoreCSSAttributes.has(property)) {\n                return setProperty.apply(thisArg, [property, value, priority]);\n            }\n            const { id, styleId } = getIdAndStyleId(_optionalChain$2([thisArg, 'access', _17 => _17.parentRule, 'optionalAccess', _18 => _18.parentStyleSheet]), mirror, stylesheetManager.styleMirror);\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                styleDeclarationCb({\n                    id,\n                    styleId,\n                    set: {\n                        property,\n                        value,\n                        priority,\n                    },\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    const removeProperty = win.CSSStyleDeclaration.prototype.removeProperty;\n    win.CSSStyleDeclaration.prototype.removeProperty = new Proxy(removeProperty, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            const [property] = argumentsList;\n            if (ignoreCSSAttributes.has(property)) {\n                return removeProperty.apply(thisArg, [property]);\n            }\n            const { id, styleId } = getIdAndStyleId(_optionalChain$2([thisArg, 'access', _19 => _19.parentRule, 'optionalAccess', _20 => _20.parentStyleSheet]), mirror, stylesheetManager.styleMirror);\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                styleDeclarationCb({\n                    id,\n                    styleId,\n                    remove: {\n                        property,\n                    },\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    return callbackWrapper(() => {\n        win.CSSStyleDeclaration.prototype.setProperty = setProperty;\n        win.CSSStyleDeclaration.prototype.removeProperty = removeProperty;\n    });\n}\nfunction initMediaInteractionObserver({ mediaInteractionCb, blockClass, blockSelector, unblockSelector, mirror, sampling, doc, }) {\n    const handler = callbackWrapper((type) => throttle$1(callbackWrapper((event) => {\n        const target = getEventTarget(event);\n        if (!target ||\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\n            return;\n        }\n        const { currentTime, volume, muted, playbackRate } = target;\n        mediaInteractionCb({\n            type,\n            id: mirror.getId(target),\n            currentTime,\n            volume,\n            muted,\n            playbackRate,\n        });\n    }), sampling.media || 500));\n    const handlers = [\n        on('play', handler(0), doc),\n        on('pause', handler(1), doc),\n        on('seeked', handler(2), doc),\n        on('volumechange', handler(3), doc),\n        on('ratechange', handler(4), doc),\n    ];\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction initFontObserver({ fontCb, doc }) {\n    const win = doc.defaultView;\n    if (!win) {\n        return () => {\n        };\n    }\n    const handlers = [];\n    const fontMap = new WeakMap();\n    const originalFontFace = win.FontFace;\n    win.FontFace = function FontFace(family, source, descriptors) {\n        const fontFace = new originalFontFace(family, source, descriptors);\n        fontMap.set(fontFace, {\n            family,\n            buffer: typeof source !== 'string',\n            descriptors,\n            fontSource: typeof source === 'string'\n                ? source\n                : JSON.stringify(Array.from(new Uint8Array(source))),\n        });\n        return fontFace;\n    };\n    const restoreHandler = patch(doc.fonts, 'add', function (original) {\n        return function (fontFace) {\n            setTimeout(callbackWrapper(() => {\n                const p = fontMap.get(fontFace);\n                if (p) {\n                    fontCb(p);\n                    fontMap.delete(fontFace);\n                }\n            }), 0);\n            return original.apply(this, [fontFace]);\n        };\n    });\n    handlers.push(() => {\n        win.FontFace = originalFontFace;\n    });\n    handlers.push(restoreHandler);\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction initSelectionObserver(param) {\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, selectionCb, } = param;\n    let collapsed = true;\n    const updateSelection = callbackWrapper(() => {\n        const selection = doc.getSelection();\n        if (!selection || (collapsed && _optionalChain$2([selection, 'optionalAccess', _21 => _21.isCollapsed])))\n            return;\n        collapsed = selection.isCollapsed || false;\n        const ranges = [];\n        const count = selection.rangeCount || 0;\n        for (let i = 0; i < count; i++) {\n            const range = selection.getRangeAt(i);\n            const { startContainer, startOffset, endContainer, endOffset } = range;\n            const blocked = isBlocked(startContainer, blockClass, blockSelector, unblockSelector, true) ||\n                isBlocked(endContainer, blockClass, blockSelector, unblockSelector, true);\n            if (blocked)\n                continue;\n            ranges.push({\n                start: mirror.getId(startContainer),\n                startOffset,\n                end: mirror.getId(endContainer),\n                endOffset,\n            });\n        }\n        selectionCb({ ranges });\n    });\n    updateSelection();\n    return on('selectionchange', updateSelection);\n}\nfunction initCustomElementObserver({ doc, customElementCb, }) {\n    const win = doc.defaultView;\n    if (!win || !win.customElements)\n        return () => { };\n    const restoreHandler = patch(win.customElements, 'define', function (original) {\n        return function (name, constructor, options) {\n            try {\n                customElementCb({\n                    define: {\n                        name,\n                    },\n                });\n            }\n            catch (e) {\n            }\n            return original.apply(this, [name, constructor, options]);\n        };\n    });\n    return restoreHandler;\n}\nfunction initObservers(o, _hooks = {}) {\n    const currentWindow = o.doc.defaultView;\n    if (!currentWindow) {\n        return () => {\n        };\n    }\n    const mutationObserver = initMutationObserver(o, o.doc);\n    const mousemoveHandler = initMoveObserver(o);\n    const mouseInteractionHandler = initMouseInteractionObserver(o);\n    const scrollHandler = initScrollObserver(o);\n    const viewportResizeHandler = initViewportResizeObserver(o, {\n        win: currentWindow,\n    });\n    const inputHandler = initInputObserver(o);\n    const mediaInteractionHandler = initMediaInteractionObserver(o);\n    const styleSheetObserver = initStyleSheetObserver(o, { win: currentWindow });\n    const adoptedStyleSheetObserver = initAdoptedStyleSheetObserver(o, o.doc);\n    const styleDeclarationObserver = initStyleDeclarationObserver(o, {\n        win: currentWindow,\n    });\n    const fontObserver = o.collectFonts\n        ? initFontObserver(o)\n        : () => {\n        };\n    const selectionObserver = initSelectionObserver(o);\n    const customElementObserver = initCustomElementObserver(o);\n    const pluginHandlers = [];\n    for (const plugin of o.plugins) {\n        pluginHandlers.push(plugin.observer(plugin.callback, currentWindow, plugin.options));\n    }\n    return callbackWrapper(() => {\n        mutationBuffers.forEach((b) => b.reset());\n        mutationObserver.disconnect();\n        mousemoveHandler();\n        mouseInteractionHandler();\n        scrollHandler();\n        viewportResizeHandler();\n        inputHandler();\n        mediaInteractionHandler();\n        styleSheetObserver();\n        adoptedStyleSheetObserver();\n        styleDeclarationObserver();\n        fontObserver();\n        selectionObserver();\n        customElementObserver();\n        pluginHandlers.forEach((h) => h());\n    });\n}\nfunction hasNestedCSSRule(prop) {\n    return typeof window[prop] !== 'undefined';\n}\nfunction canMonkeyPatchNestedCSSRule(prop) {\n    return Boolean(typeof window[prop] !== 'undefined' &&\n        window[prop].prototype &&\n        'insertRule' in window[prop].prototype &&\n        'deleteRule' in window[prop].prototype);\n}\n\nclass CrossOriginIframeMirror {\n    constructor(generateIdFn) {\n        this.generateIdFn = generateIdFn;\n        this.iframeIdToRemoteIdMap = new WeakMap();\n        this.iframeRemoteIdToIdMap = new WeakMap();\n    }\n    getId(iframe, remoteId, idToRemoteMap, remoteToIdMap) {\n        const idToRemoteIdMap = idToRemoteMap || this.getIdToRemoteIdMap(iframe);\n        const remoteIdToIdMap = remoteToIdMap || this.getRemoteIdToIdMap(iframe);\n        let id = idToRemoteIdMap.get(remoteId);\n        if (!id) {\n            id = this.generateIdFn();\n            idToRemoteIdMap.set(remoteId, id);\n            remoteIdToIdMap.set(id, remoteId);\n        }\n        return id;\n    }\n    getIds(iframe, remoteId) {\n        const idToRemoteIdMap = this.getIdToRemoteIdMap(iframe);\n        const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\n        return remoteId.map((id) => this.getId(iframe, id, idToRemoteIdMap, remoteIdToIdMap));\n    }\n    getRemoteId(iframe, id, map) {\n        const remoteIdToIdMap = map || this.getRemoteIdToIdMap(iframe);\n        if (typeof id !== 'number')\n            return id;\n        const remoteId = remoteIdToIdMap.get(id);\n        if (!remoteId)\n            return -1;\n        return remoteId;\n    }\n    getRemoteIds(iframe, ids) {\n        const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\n        return ids.map((id) => this.getRemoteId(iframe, id, remoteIdToIdMap));\n    }\n    reset(iframe) {\n        if (!iframe) {\n            this.iframeIdToRemoteIdMap = new WeakMap();\n            this.iframeRemoteIdToIdMap = new WeakMap();\n            return;\n        }\n        this.iframeIdToRemoteIdMap.delete(iframe);\n        this.iframeRemoteIdToIdMap.delete(iframe);\n    }\n    getIdToRemoteIdMap(iframe) {\n        let idToRemoteIdMap = this.iframeIdToRemoteIdMap.get(iframe);\n        if (!idToRemoteIdMap) {\n            idToRemoteIdMap = new Map();\n            this.iframeIdToRemoteIdMap.set(iframe, idToRemoteIdMap);\n        }\n        return idToRemoteIdMap;\n    }\n    getRemoteIdToIdMap(iframe) {\n        let remoteIdToIdMap = this.iframeRemoteIdToIdMap.get(iframe);\n        if (!remoteIdToIdMap) {\n            remoteIdToIdMap = new Map();\n            this.iframeRemoteIdToIdMap.set(iframe, remoteIdToIdMap);\n        }\n        return remoteIdToIdMap;\n    }\n}\n\nfunction _optionalChain$1(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\nclass IframeManagerNoop {\n    constructor() {\n        this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\n        this.crossOriginIframeRootIdMap = new WeakMap();\n    }\n    addIframe() {\n    }\n    addLoadListener() {\n    }\n    attachIframe() {\n    }\n}\nclass IframeManager {\n    constructor(options) {\n        this.iframes = new WeakMap();\n        this.crossOriginIframeMap = new WeakMap();\n        this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\n        this.crossOriginIframeRootIdMap = new WeakMap();\n        this.mutationCb = options.mutationCb;\n        this.wrappedEmit = options.wrappedEmit;\n        this.stylesheetManager = options.stylesheetManager;\n        this.recordCrossOriginIframes = options.recordCrossOriginIframes;\n        this.crossOriginIframeStyleMirror = new CrossOriginIframeMirror(this.stylesheetManager.styleMirror.generateId.bind(this.stylesheetManager.styleMirror));\n        this.mirror = options.mirror;\n        if (this.recordCrossOriginIframes) {\n            window.addEventListener('message', this.handleMessage.bind(this));\n        }\n    }\n    addIframe(iframeEl) {\n        this.iframes.set(iframeEl, true);\n        if (iframeEl.contentWindow)\n            this.crossOriginIframeMap.set(iframeEl.contentWindow, iframeEl);\n    }\n    addLoadListener(cb) {\n        this.loadListener = cb;\n    }\n    attachIframe(iframeEl, childSn) {\n        this.mutationCb({\n            adds: [\n                {\n                    parentId: this.mirror.getId(iframeEl),\n                    nextId: null,\n                    node: childSn,\n                },\n            ],\n            removes: [],\n            texts: [],\n            attributes: [],\n            isAttachIframe: true,\n        });\n        _optionalChain$1([this, 'access', _ => _.loadListener, 'optionalCall', _2 => _2(iframeEl)]);\n        if (iframeEl.contentDocument &&\n            iframeEl.contentDocument.adoptedStyleSheets &&\n            iframeEl.contentDocument.adoptedStyleSheets.length > 0)\n            this.stylesheetManager.adoptStyleSheets(iframeEl.contentDocument.adoptedStyleSheets, this.mirror.getId(iframeEl.contentDocument));\n    }\n    handleMessage(message) {\n        const crossOriginMessageEvent = message;\n        if (crossOriginMessageEvent.data.type !== 'rrweb' ||\n            crossOriginMessageEvent.origin !== crossOriginMessageEvent.data.origin)\n            return;\n        const iframeSourceWindow = message.source;\n        if (!iframeSourceWindow)\n            return;\n        const iframeEl = this.crossOriginIframeMap.get(message.source);\n        if (!iframeEl)\n            return;\n        const transformedEvent = this.transformCrossOriginEvent(iframeEl, crossOriginMessageEvent.data.event);\n        if (transformedEvent)\n            this.wrappedEmit(transformedEvent, crossOriginMessageEvent.data.isCheckout);\n    }\n    transformCrossOriginEvent(iframeEl, e) {\n        switch (e.type) {\n            case EventType.FullSnapshot: {\n                this.crossOriginIframeMirror.reset(iframeEl);\n                this.crossOriginIframeStyleMirror.reset(iframeEl);\n                this.replaceIdOnNode(e.data.node, iframeEl);\n                const rootId = e.data.node.id;\n                this.crossOriginIframeRootIdMap.set(iframeEl, rootId);\n                this.patchRootIdOnNode(e.data.node, rootId);\n                return {\n                    timestamp: e.timestamp,\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.Mutation,\n                        adds: [\n                            {\n                                parentId: this.mirror.getId(iframeEl),\n                                nextId: null,\n                                node: e.data.node,\n                            },\n                        ],\n                        removes: [],\n                        texts: [],\n                        attributes: [],\n                        isAttachIframe: true,\n                    },\n                };\n            }\n            case EventType.Meta:\n            case EventType.Load:\n            case EventType.DomContentLoaded: {\n                return false;\n            }\n            case EventType.Plugin: {\n                return e;\n            }\n            case EventType.Custom: {\n                this.replaceIds(e.data.payload, iframeEl, ['id', 'parentId', 'previousId', 'nextId']);\n                return e;\n            }\n            case EventType.IncrementalSnapshot: {\n                switch (e.data.source) {\n                    case IncrementalSource.Mutation: {\n                        e.data.adds.forEach((n) => {\n                            this.replaceIds(n, iframeEl, [\n                                'parentId',\n                                'nextId',\n                                'previousId',\n                            ]);\n                            this.replaceIdOnNode(n.node, iframeEl);\n                            const rootId = this.crossOriginIframeRootIdMap.get(iframeEl);\n                            rootId && this.patchRootIdOnNode(n.node, rootId);\n                        });\n                        e.data.removes.forEach((n) => {\n                            this.replaceIds(n, iframeEl, ['parentId', 'id']);\n                        });\n                        e.data.attributes.forEach((n) => {\n                            this.replaceIds(n, iframeEl, ['id']);\n                        });\n                        e.data.texts.forEach((n) => {\n                            this.replaceIds(n, iframeEl, ['id']);\n                        });\n                        return e;\n                    }\n                    case IncrementalSource.Drag:\n                    case IncrementalSource.TouchMove:\n                    case IncrementalSource.MouseMove: {\n                        e.data.positions.forEach((p) => {\n                            this.replaceIds(p, iframeEl, ['id']);\n                        });\n                        return e;\n                    }\n                    case IncrementalSource.ViewportResize: {\n                        return false;\n                    }\n                    case IncrementalSource.MediaInteraction:\n                    case IncrementalSource.MouseInteraction:\n                    case IncrementalSource.Scroll:\n                    case IncrementalSource.CanvasMutation:\n                    case IncrementalSource.Input: {\n                        this.replaceIds(e.data, iframeEl, ['id']);\n                        return e;\n                    }\n                    case IncrementalSource.StyleSheetRule:\n                    case IncrementalSource.StyleDeclaration: {\n                        this.replaceIds(e.data, iframeEl, ['id']);\n                        this.replaceStyleIds(e.data, iframeEl, ['styleId']);\n                        return e;\n                    }\n                    case IncrementalSource.Font: {\n                        return e;\n                    }\n                    case IncrementalSource.Selection: {\n                        e.data.ranges.forEach((range) => {\n                            this.replaceIds(range, iframeEl, ['start', 'end']);\n                        });\n                        return e;\n                    }\n                    case IncrementalSource.AdoptedStyleSheet: {\n                        this.replaceIds(e.data, iframeEl, ['id']);\n                        this.replaceStyleIds(e.data, iframeEl, ['styleIds']);\n                        _optionalChain$1([e, 'access', _3 => _3.data, 'access', _4 => _4.styles, 'optionalAccess', _5 => _5.forEach, 'call', _6 => _6((style) => {\n                            this.replaceStyleIds(style, iframeEl, ['styleId']);\n                        })]);\n                        return e;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n    replace(iframeMirror, obj, iframeEl, keys) {\n        for (const key of keys) {\n            if (!Array.isArray(obj[key]) && typeof obj[key] !== 'number')\n                continue;\n            if (Array.isArray(obj[key])) {\n                obj[key] = iframeMirror.getIds(iframeEl, obj[key]);\n            }\n            else {\n                obj[key] = iframeMirror.getId(iframeEl, obj[key]);\n            }\n        }\n        return obj;\n    }\n    replaceIds(obj, iframeEl, keys) {\n        return this.replace(this.crossOriginIframeMirror, obj, iframeEl, keys);\n    }\n    replaceStyleIds(obj, iframeEl, keys) {\n        return this.replace(this.crossOriginIframeStyleMirror, obj, iframeEl, keys);\n    }\n    replaceIdOnNode(node, iframeEl) {\n        this.replaceIds(node, iframeEl, ['id', 'rootId']);\n        if ('childNodes' in node) {\n            node.childNodes.forEach((child) => {\n                this.replaceIdOnNode(child, iframeEl);\n            });\n        }\n    }\n    patchRootIdOnNode(node, rootId) {\n        if (node.type !== NodeType$1.Document && !node.rootId)\n            node.rootId = rootId;\n        if ('childNodes' in node) {\n            node.childNodes.forEach((child) => {\n                this.patchRootIdOnNode(child, rootId);\n            });\n        }\n    }\n}\n\nclass ShadowDomManagerNoop {\n    init() {\n    }\n    addShadowRoot() {\n    }\n    observeAttachShadow() {\n    }\n    reset() {\n    }\n}\nclass ShadowDomManager {\n    constructor(options) {\n        this.shadowDoms = new WeakSet();\n        this.restoreHandlers = [];\n        this.mutationCb = options.mutationCb;\n        this.scrollCb = options.scrollCb;\n        this.bypassOptions = options.bypassOptions;\n        this.mirror = options.mirror;\n        this.init();\n    }\n    init() {\n        this.reset();\n        this.patchAttachShadow(Element, document);\n    }\n    addShadowRoot(shadowRoot, doc) {\n        if (!isNativeShadowDom(shadowRoot))\n            return;\n        if (this.shadowDoms.has(shadowRoot))\n            return;\n        this.shadowDoms.add(shadowRoot);\n        const observer = initMutationObserver({\n            ...this.bypassOptions,\n            doc,\n            mutationCb: this.mutationCb,\n            mirror: this.mirror,\n            shadowDomManager: this,\n        }, shadowRoot);\n        this.restoreHandlers.push(() => observer.disconnect());\n        this.restoreHandlers.push(initScrollObserver({\n            ...this.bypassOptions,\n            scrollCb: this.scrollCb,\n            doc: shadowRoot,\n            mirror: this.mirror,\n        }));\n        setTimeout(() => {\n            if (shadowRoot.adoptedStyleSheets &&\n                shadowRoot.adoptedStyleSheets.length > 0)\n                this.bypassOptions.stylesheetManager.adoptStyleSheets(shadowRoot.adoptedStyleSheets, this.mirror.getId(shadowRoot.host));\n            this.restoreHandlers.push(initAdoptedStyleSheetObserver({\n                mirror: this.mirror,\n                stylesheetManager: this.bypassOptions.stylesheetManager,\n            }, shadowRoot));\n        }, 0);\n    }\n    observeAttachShadow(iframeElement) {\n        if (!iframeElement.contentWindow || !iframeElement.contentDocument)\n            return;\n        this.patchAttachShadow(iframeElement.contentWindow.Element, iframeElement.contentDocument);\n    }\n    patchAttachShadow(element, doc) {\n        const manager = this;\n        this.restoreHandlers.push(patch(element.prototype, 'attachShadow', function (original) {\n            return function (option) {\n                const shadowRoot = original.call(this, option);\n                if (this.shadowRoot && inDom(this))\n                    manager.addShadowRoot(this.shadowRoot, doc);\n                return shadowRoot;\n            };\n        }));\n    }\n    reset() {\n        this.restoreHandlers.forEach((handler) => {\n            try {\n                handler();\n            }\n            catch (e) {\n            }\n        });\n        this.restoreHandlers = [];\n        this.shadowDoms = new WeakSet();\n    }\n}\n\nclass CanvasManagerNoop {\n    reset() {\n    }\n    freeze() {\n    }\n    unfreeze() {\n    }\n    lock() {\n    }\n    unlock() {\n    }\n    snapshot() {\n    }\n}\n\nclass StylesheetManager {\n    constructor(options) {\n        this.trackedLinkElements = new WeakSet();\n        this.styleMirror = new StyleSheetMirror();\n        this.mutationCb = options.mutationCb;\n        this.adoptedStyleSheetCb = options.adoptedStyleSheetCb;\n    }\n    attachLinkElement(linkEl, childSn) {\n        if ('_cssText' in childSn.attributes)\n            this.mutationCb({\n                adds: [],\n                removes: [],\n                texts: [],\n                attributes: [\n                    {\n                        id: childSn.id,\n                        attributes: childSn\n                            .attributes,\n                    },\n                ],\n            });\n        this.trackLinkElement(linkEl);\n    }\n    trackLinkElement(linkEl) {\n        if (this.trackedLinkElements.has(linkEl))\n            return;\n        this.trackedLinkElements.add(linkEl);\n        this.trackStylesheetInLinkElement(linkEl);\n    }\n    adoptStyleSheets(sheets, hostId) {\n        if (sheets.length === 0)\n            return;\n        const adoptedStyleSheetData = {\n            id: hostId,\n            styleIds: [],\n        };\n        const styles = [];\n        for (const sheet of sheets) {\n            let styleId;\n            if (!this.styleMirror.has(sheet)) {\n                styleId = this.styleMirror.add(sheet);\n                styles.push({\n                    styleId,\n                    rules: Array.from(sheet.rules || CSSRule, (r, index) => ({\n                        rule: stringifyRule(r),\n                        index,\n                    })),\n                });\n            }\n            else\n                styleId = this.styleMirror.getId(sheet);\n            adoptedStyleSheetData.styleIds.push(styleId);\n        }\n        if (styles.length > 0)\n            adoptedStyleSheetData.styles = styles;\n        this.adoptedStyleSheetCb(adoptedStyleSheetData);\n    }\n    reset() {\n        this.styleMirror.reset();\n        this.trackedLinkElements = new WeakSet();\n    }\n    trackStylesheetInLinkElement(linkEl) {\n    }\n}\n\nclass ProcessedNodeManager {\n    constructor() {\n        this.nodeMap = new WeakMap();\n        this.loop = true;\n        this.periodicallyClear();\n    }\n    periodicallyClear() {\n        onRequestAnimationFrame(() => {\n            this.clear();\n            if (this.loop)\n                this.periodicallyClear();\n        });\n    }\n    inOtherBuffer(node, thisBuffer) {\n        const buffers = this.nodeMap.get(node);\n        return (buffers && Array.from(buffers).some((buffer) => buffer !== thisBuffer));\n    }\n    add(node, buffer) {\n        this.nodeMap.set(node, (this.nodeMap.get(node) || new Set()).add(buffer));\n    }\n    clear() {\n        this.nodeMap = new WeakMap();\n    }\n    destroy() {\n        this.loop = false;\n    }\n}\n\nfunction wrapEvent(e) {\n    const eWithTime = e;\n    eWithTime.timestamp = nowTimestamp();\n    return eWithTime;\n}\nlet _takeFullSnapshot;\nconst mirror = createMirror();\nfunction record(options = {}) {\n    const { emit, checkoutEveryNms, checkoutEveryNth, blockClass = 'rr-block', blockSelector = null, unblockSelector = null, ignoreClass = 'rr-ignore', ignoreSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, maskAllInputs, maskInputOptions: _maskInputOptions, slimDOMOptions: _slimDOMOptions, maskAttributeFn, maskInputFn, maskTextFn, packFn, sampling = {}, dataURLOptions = {}, mousemoveWait, recordCanvas = false, recordCrossOriginIframes = false, recordAfter = options.recordAfter === 'DOMContentLoaded'\n        ? options.recordAfter\n        : 'load', userTriggeredOnInput = false, collectFonts = false, inlineImages = false, plugins, keepIframeSrcFn = () => false, ignoreCSSAttributes = new Set([]), errorHandler, onMutation, getCanvasManager, } = options;\n    registerErrorHandler(errorHandler);\n    const inEmittingFrame = recordCrossOriginIframes\n        ? window.parent === window\n        : true;\n    let passEmitsToParent = false;\n    if (!inEmittingFrame) {\n        try {\n            if (window.parent.document) {\n                passEmitsToParent = false;\n            }\n        }\n        catch (e) {\n            passEmitsToParent = true;\n        }\n    }\n    if (inEmittingFrame && !emit) {\n        throw new Error('emit function is required');\n    }\n    if (mousemoveWait !== undefined && sampling.mousemove === undefined) {\n        sampling.mousemove = mousemoveWait;\n    }\n    mirror.reset();\n    const maskInputOptions = maskAllInputs === true\n        ? {\n            color: true,\n            date: true,\n            'datetime-local': true,\n            email: true,\n            month: true,\n            number: true,\n            range: true,\n            search: true,\n            tel: true,\n            text: true,\n            time: true,\n            url: true,\n            week: true,\n            textarea: true,\n            select: true,\n            radio: true,\n            checkbox: true,\n        }\n        : _maskInputOptions !== undefined\n            ? _maskInputOptions\n            : {};\n    const slimDOMOptions = _slimDOMOptions === true || _slimDOMOptions === 'all'\n        ? {\n            script: true,\n            comment: true,\n            headFavicon: true,\n            headWhitespace: true,\n            headMetaSocial: true,\n            headMetaRobots: true,\n            headMetaHttpEquiv: true,\n            headMetaVerification: true,\n            headMetaAuthorship: _slimDOMOptions === 'all',\n            headMetaDescKeywords: _slimDOMOptions === 'all',\n        }\n        : _slimDOMOptions\n            ? _slimDOMOptions\n            : {};\n    polyfill();\n    let lastFullSnapshotEvent;\n    let incrementalSnapshotCount = 0;\n    const eventProcessor = (e) => {\n        for (const plugin of plugins || []) {\n            if (plugin.eventProcessor) {\n                e = plugin.eventProcessor(e);\n            }\n        }\n        if (packFn &&\n            !passEmitsToParent) {\n            e = packFn(e);\n        }\n        return e;\n    };\n    const wrappedEmit = (e, isCheckout) => {\n        if (_optionalChain([mutationBuffers, 'access', _ => _[0], 'optionalAccess', _2 => _2.isFrozen, 'call', _3 => _3()]) &&\n            e.type !== EventType.FullSnapshot &&\n            !(e.type === EventType.IncrementalSnapshot &&\n                e.data.source === IncrementalSource.Mutation)) {\n            mutationBuffers.forEach((buf) => buf.unfreeze());\n        }\n        if (inEmittingFrame) {\n            _optionalChain([emit, 'optionalCall', _4 => _4(eventProcessor(e), isCheckout)]);\n        }\n        else if (passEmitsToParent) {\n            const message = {\n                type: 'rrweb',\n                event: eventProcessor(e),\n                origin: window.location.origin,\n                isCheckout,\n            };\n            window.parent.postMessage(message, '*');\n        }\n        if (e.type === EventType.FullSnapshot) {\n            lastFullSnapshotEvent = e;\n            incrementalSnapshotCount = 0;\n        }\n        else if (e.type === EventType.IncrementalSnapshot) {\n            if (e.data.source === IncrementalSource.Mutation &&\n                e.data.isAttachIframe) {\n                return;\n            }\n            incrementalSnapshotCount++;\n            const exceedCount = checkoutEveryNth && incrementalSnapshotCount >= checkoutEveryNth;\n            const exceedTime = checkoutEveryNms &&\n                e.timestamp - lastFullSnapshotEvent.timestamp > checkoutEveryNms;\n            if (exceedCount || exceedTime) {\n                takeFullSnapshot(true);\n            }\n        }\n    };\n    const wrappedMutationEmit = (m) => {\n        wrappedEmit(wrapEvent({\n            type: EventType.IncrementalSnapshot,\n            data: {\n                source: IncrementalSource.Mutation,\n                ...m,\n            },\n        }));\n    };\n    const wrappedScrollEmit = (p) => wrappedEmit(wrapEvent({\n        type: EventType.IncrementalSnapshot,\n        data: {\n            source: IncrementalSource.Scroll,\n            ...p,\n        },\n    }));\n    const wrappedCanvasMutationEmit = (p) => wrappedEmit(wrapEvent({\n        type: EventType.IncrementalSnapshot,\n        data: {\n            source: IncrementalSource.CanvasMutation,\n            ...p,\n        },\n    }));\n    const wrappedAdoptedStyleSheetEmit = (a) => wrappedEmit(wrapEvent({\n        type: EventType.IncrementalSnapshot,\n        data: {\n            source: IncrementalSource.AdoptedStyleSheet,\n            ...a,\n        },\n    }));\n    const stylesheetManager = new StylesheetManager({\n        mutationCb: wrappedMutationEmit,\n        adoptedStyleSheetCb: wrappedAdoptedStyleSheetEmit,\n    });\n    const iframeManager = typeof __RRWEB_EXCLUDE_IFRAME__ === 'boolean' && __RRWEB_EXCLUDE_IFRAME__\n        ? new IframeManagerNoop()\n        : new IframeManager({\n            mirror,\n            mutationCb: wrappedMutationEmit,\n            stylesheetManager: stylesheetManager,\n            recordCrossOriginIframes,\n            wrappedEmit,\n        });\n    for (const plugin of plugins || []) {\n        if (plugin.getMirror)\n            plugin.getMirror({\n                nodeMirror: mirror,\n                crossOriginIframeMirror: iframeManager.crossOriginIframeMirror,\n                crossOriginIframeStyleMirror: iframeManager.crossOriginIframeStyleMirror,\n            });\n    }\n    const processedNodeManager = new ProcessedNodeManager();\n    const canvasManager = _getCanvasManager(getCanvasManager, {\n        mirror,\n        win: window,\n        mutationCb: (p) => wrappedEmit(wrapEvent({\n            type: EventType.IncrementalSnapshot,\n            data: {\n                source: IncrementalSource.CanvasMutation,\n                ...p,\n            },\n        })),\n        recordCanvas,\n        blockClass,\n        blockSelector,\n        unblockSelector,\n        sampling: sampling['canvas'],\n        dataURLOptions,\n        errorHandler,\n    });\n    const shadowDomManager = typeof __RRWEB_EXCLUDE_SHADOW_DOM__ === 'boolean' &&\n        __RRWEB_EXCLUDE_SHADOW_DOM__\n        ? new ShadowDomManagerNoop()\n        : new ShadowDomManager({\n            mutationCb: wrappedMutationEmit,\n            scrollCb: wrappedScrollEmit,\n            bypassOptions: {\n                onMutation,\n                blockClass,\n                blockSelector,\n                unblockSelector,\n                maskAllText,\n                maskTextClass,\n                unmaskTextClass,\n                maskTextSelector,\n                unmaskTextSelector,\n                inlineStylesheet,\n                maskInputOptions,\n                dataURLOptions,\n                maskAttributeFn,\n                maskTextFn,\n                maskInputFn,\n                recordCanvas,\n                inlineImages,\n                sampling,\n                slimDOMOptions,\n                iframeManager,\n                stylesheetManager,\n                canvasManager,\n                keepIframeSrcFn,\n                processedNodeManager,\n            },\n            mirror,\n        });\n    const takeFullSnapshot = (isCheckout = false) => {\n        wrappedEmit(wrapEvent({\n            type: EventType.Meta,\n            data: {\n                href: window.location.href,\n                width: getWindowWidth(),\n                height: getWindowHeight(),\n            },\n        }), isCheckout);\n        stylesheetManager.reset();\n        shadowDomManager.init();\n        mutationBuffers.forEach((buf) => buf.lock());\n        const node = snapshot(document, {\n            mirror,\n            blockClass,\n            blockSelector,\n            unblockSelector,\n            maskAllText,\n            maskTextClass,\n            unmaskTextClass,\n            maskTextSelector,\n            unmaskTextSelector,\n            inlineStylesheet,\n            maskAllInputs: maskInputOptions,\n            maskAttributeFn,\n            maskInputFn,\n            maskTextFn,\n            slimDOM: slimDOMOptions,\n            dataURLOptions,\n            recordCanvas,\n            inlineImages,\n            onSerialize: (n) => {\n                if (isSerializedIframe(n, mirror)) {\n                    iframeManager.addIframe(n);\n                }\n                if (isSerializedStylesheet(n, mirror)) {\n                    stylesheetManager.trackLinkElement(n);\n                }\n                if (hasShadowRoot(n)) {\n                    shadowDomManager.addShadowRoot(n.shadowRoot, document);\n                }\n            },\n            onIframeLoad: (iframe, childSn) => {\n                iframeManager.attachIframe(iframe, childSn);\n                shadowDomManager.observeAttachShadow(iframe);\n            },\n            onStylesheetLoad: (linkEl, childSn) => {\n                stylesheetManager.attachLinkElement(linkEl, childSn);\n            },\n            keepIframeSrcFn,\n        });\n        if (!node) {\n            return console.warn('Failed to snapshot the document');\n        }\n        wrappedEmit(wrapEvent({\n            type: EventType.FullSnapshot,\n            data: {\n                node,\n                initialOffset: getWindowScroll(window),\n            },\n        }));\n        mutationBuffers.forEach((buf) => buf.unlock());\n        if (document.adoptedStyleSheets && document.adoptedStyleSheets.length > 0)\n            stylesheetManager.adoptStyleSheets(document.adoptedStyleSheets, mirror.getId(document));\n    };\n    _takeFullSnapshot = takeFullSnapshot;\n    try {\n        const handlers = [];\n        const observe = (doc) => {\n            return callbackWrapper(initObservers)({\n                onMutation,\n                mutationCb: wrappedMutationEmit,\n                mousemoveCb: (positions, source) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source,\n                        positions,\n                    },\n                })),\n                mouseInteractionCb: (d) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.MouseInteraction,\n                        ...d,\n                    },\n                })),\n                scrollCb: wrappedScrollEmit,\n                viewportResizeCb: (d) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.ViewportResize,\n                        ...d,\n                    },\n                })),\n                inputCb: (v) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.Input,\n                        ...v,\n                    },\n                })),\n                mediaInteractionCb: (p) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.MediaInteraction,\n                        ...p,\n                    },\n                })),\n                styleSheetRuleCb: (r) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.StyleSheetRule,\n                        ...r,\n                    },\n                })),\n                styleDeclarationCb: (r) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.StyleDeclaration,\n                        ...r,\n                    },\n                })),\n                canvasMutationCb: wrappedCanvasMutationEmit,\n                fontCb: (p) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.Font,\n                        ...p,\n                    },\n                })),\n                selectionCb: (p) => {\n                    wrappedEmit(wrapEvent({\n                        type: EventType.IncrementalSnapshot,\n                        data: {\n                            source: IncrementalSource.Selection,\n                            ...p,\n                        },\n                    }));\n                },\n                customElementCb: (c) => {\n                    wrappedEmit(wrapEvent({\n                        type: EventType.IncrementalSnapshot,\n                        data: {\n                            source: IncrementalSource.CustomElement,\n                            ...c,\n                        },\n                    }));\n                },\n                blockClass,\n                ignoreClass,\n                ignoreSelector,\n                maskAllText,\n                maskTextClass,\n                unmaskTextClass,\n                maskTextSelector,\n                unmaskTextSelector,\n                maskInputOptions,\n                inlineStylesheet,\n                sampling,\n                recordCanvas,\n                inlineImages,\n                userTriggeredOnInput,\n                collectFonts,\n                doc,\n                maskAttributeFn,\n                maskInputFn,\n                maskTextFn,\n                keepIframeSrcFn,\n                blockSelector,\n                unblockSelector,\n                slimDOMOptions,\n                dataURLOptions,\n                mirror,\n                iframeManager,\n                stylesheetManager,\n                shadowDomManager,\n                processedNodeManager,\n                canvasManager,\n                ignoreCSSAttributes,\n                plugins: _optionalChain([plugins\n, 'optionalAccess', _5 => _5.filter, 'call', _6 => _6((p) => p.observer)\n, 'optionalAccess', _7 => _7.map, 'call', _8 => _8((p) => ({\n                    observer: p.observer,\n                    options: p.options,\n                    callback: (payload) => wrappedEmit(wrapEvent({\n                        type: EventType.Plugin,\n                        data: {\n                            plugin: p.name,\n                            payload,\n                        },\n                    })),\n                }))]) || [],\n            }, {});\n        };\n        iframeManager.addLoadListener((iframeEl) => {\n            try {\n                handlers.push(observe(iframeEl.contentDocument));\n            }\n            catch (error) {\n                console.warn(error);\n            }\n        });\n        const init = () => {\n            takeFullSnapshot();\n            handlers.push(observe(document));\n        };\n        if (document.readyState === 'interactive' ||\n            document.readyState === 'complete') {\n            init();\n        }\n        else {\n            handlers.push(on('DOMContentLoaded', () => {\n                wrappedEmit(wrapEvent({\n                    type: EventType.DomContentLoaded,\n                    data: {},\n                }));\n                if (recordAfter === 'DOMContentLoaded')\n                    init();\n            }));\n            handlers.push(on('load', () => {\n                wrappedEmit(wrapEvent({\n                    type: EventType.Load,\n                    data: {},\n                }));\n                if (recordAfter === 'load')\n                    init();\n            }, window));\n        }\n        return () => {\n            handlers.forEach((h) => h());\n            processedNodeManager.destroy();\n            _takeFullSnapshot = undefined;\n            unregisterErrorHandler();\n        };\n    }\n    catch (error) {\n        console.warn(error);\n    }\n}\nfunction takeFullSnapshot(isCheckout) {\n    if (!_takeFullSnapshot) {\n        throw new Error('please take full snapshot after start recording');\n    }\n    _takeFullSnapshot(isCheckout);\n}\nrecord.mirror = mirror;\nrecord.takeFullSnapshot = takeFullSnapshot;\nfunction _getCanvasManager(getCanvasManagerFn, options) {\n    try {\n        return getCanvasManagerFn\n            ? getCanvasManagerFn(options)\n            : new CanvasManagerNoop();\n    }\n    catch (e2) {\n        console.warn('Unable to initialize CanvasManager');\n        return new CanvasManagerNoop();\n    }\n}\n\nconst ReplayEventTypeIncrementalSnapshot = 3;\nconst ReplayEventTypeCustom = 5;\n\n/**\n * Converts a timestamp to ms, if it was in s, or keeps it as ms.\n */\nfunction timestampToMs(timestamp) {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp : timestamp * 1000;\n}\n\n/**\n * Converts a timestamp to s, if it was in ms, or keeps it as s.\n */\nfunction timestampToS(timestamp) {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n\n/**\n * Add a breadcrumb event to replay.\n */\nfunction addBreadcrumbEvent(replay, breadcrumb) {\n  if (breadcrumb.category === 'sentry.transaction') {\n    return;\n  }\n\n  if (['ui.click', 'ui.input'].includes(breadcrumb.category )) {\n    replay.triggerUserActivity();\n  } else {\n    replay.checkAndHandleExpiredSession();\n  }\n\n  replay.addUpdate(() => {\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.throttledAddEvent({\n      type: EventType.Custom,\n      // TODO: We were converting from ms to seconds for breadcrumbs, spans,\n      // but maybe we should just keep them as milliseconds\n      timestamp: (breadcrumb.timestamp || 0) * 1000,\n      data: {\n        tag: 'breadcrumb',\n        // normalize to max. 10 depth and 1_000 properties per object\n        payload: normalize(breadcrumb, 10, 1000),\n      },\n    });\n\n    // Do not flush after console log messages\n    return breadcrumb.category === 'console';\n  });\n}\n\nconst INTERACTIVE_SELECTOR = 'button,a';\n\n/** Get the closest interactive parent element, or else return the given element. */\nfunction getClosestInteractive(element) {\n  const closestInteractive = element.closest(INTERACTIVE_SELECTOR);\n  return closestInteractive || element;\n}\n\n/**\n * For clicks, we check if the target is inside of a button or link\n * If so, we use this as the target instead\n * This is useful because if you click on the image in <button><img></button>,\n * The target will be the image, not the button, which we don't want here\n */\nfunction getClickTargetNode(event) {\n  const target = getTargetNode(event);\n\n  if (!target || !(target instanceof Element)) {\n    return target;\n  }\n\n  return getClosestInteractive(target);\n}\n\n/** Get the event target node. */\nfunction getTargetNode(event) {\n  if (isEventWithTarget(event)) {\n    return event.target ;\n  }\n\n  return event;\n}\n\nfunction isEventWithTarget(event) {\n  return typeof event === 'object' && !!event && 'target' in event;\n}\n\nlet handlers;\n\n/**\n * Register a handler to be called when `window.open()` is called.\n * Returns a cleanup function.\n */\nfunction onWindowOpen(cb) {\n  // Ensure to only register this once\n  if (!handlers) {\n    handlers = [];\n    monkeyPatchWindowOpen();\n  }\n\n  handlers.push(cb);\n\n  return () => {\n    const pos = handlers ? handlers.indexOf(cb) : -1;\n    if (pos > -1) {\n      (handlers ).splice(pos, 1);\n    }\n  };\n}\n\nfunction monkeyPatchWindowOpen() {\n  fill(WINDOW, 'open', function (originalWindowOpen) {\n    return function (...args) {\n      if (handlers) {\n        try {\n          handlers.forEach(handler => handler());\n        } catch (e) {\n          // ignore errors in here\n        }\n      }\n\n      return originalWindowOpen.apply(WINDOW, args);\n    };\n  });\n}\n\n/** Handle a click. */\nfunction handleClick(clickDetector, clickBreadcrumb, node) {\n  clickDetector.handleClick(clickBreadcrumb, node);\n}\n\n/** A click detector class that can be used to detect slow or rage clicks on elements. */\nclass ClickDetector  {\n  // protected for testing\n\n   constructor(\n    replay,\n    slowClickConfig,\n    // Just for easier testing\n    _addBreadcrumbEvent = addBreadcrumbEvent,\n  ) {\n    this._lastMutation = 0;\n    this._lastScroll = 0;\n    this._clicks = [];\n\n    // We want everything in s, but options are in ms\n    this._timeout = slowClickConfig.timeout / 1000;\n    this._threshold = slowClickConfig.threshold / 1000;\n    this._scollTimeout = slowClickConfig.scrollTimeout / 1000;\n    this._replay = replay;\n    this._ignoreSelector = slowClickConfig.ignoreSelector;\n    this._addBreadcrumbEvent = _addBreadcrumbEvent;\n  }\n\n  /** Register click detection handlers on mutation or scroll. */\n   addListeners() {\n    const cleanupWindowOpen = onWindowOpen(() => {\n      // Treat window.open as mutation\n      this._lastMutation = nowInSeconds();\n    });\n\n    this._teardown = () => {\n      cleanupWindowOpen();\n\n      this._clicks = [];\n      this._lastMutation = 0;\n      this._lastScroll = 0;\n    };\n  }\n\n  /** Clean up listeners. */\n   removeListeners() {\n    if (this._teardown) {\n      this._teardown();\n    }\n\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n  }\n\n  /** @inheritDoc */\n   handleClick(breadcrumb, node) {\n    if (ignoreElement(node, this._ignoreSelector) || !isClickBreadcrumb(breadcrumb)) {\n      return;\n    }\n\n    const newClick = {\n      timestamp: timestampToS(breadcrumb.timestamp),\n      clickBreadcrumb: breadcrumb,\n      // Set this to 0 so we know it originates from the click breadcrumb\n      clickCount: 0,\n      node,\n    };\n\n    // If there was a click in the last 1s on the same element, ignore it - only keep a single reference per second\n    if (\n      this._clicks.some(click => click.node === newClick.node && Math.abs(click.timestamp - newClick.timestamp) < 1)\n    ) {\n      return;\n    }\n\n    this._clicks.push(newClick);\n\n    // If this is the first new click, set a timeout to check for multi clicks\n    if (this._clicks.length === 1) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** @inheritDoc */\n   registerMutation(timestamp = Date.now()) {\n    this._lastMutation = timestampToS(timestamp);\n  }\n\n  /** @inheritDoc */\n   registerScroll(timestamp = Date.now()) {\n    this._lastScroll = timestampToS(timestamp);\n  }\n\n  /** @inheritDoc */\n   registerClick(element) {\n    const node = getClosestInteractive(element);\n    this._handleMultiClick(node );\n  }\n\n  /** Count multiple clicks on elements. */\n   _handleMultiClick(node) {\n    this._getClicks(node).forEach(click => {\n      click.clickCount++;\n    });\n  }\n\n  /** Get all pending clicks for a given node. */\n   _getClicks(node) {\n    return this._clicks.filter(click => click.node === node);\n  }\n\n  /** Check the clicks that happened. */\n   _checkClicks() {\n    const timedOutClicks = [];\n\n    const now = nowInSeconds();\n\n    this._clicks.forEach(click => {\n      if (!click.mutationAfter && this._lastMutation) {\n        click.mutationAfter = click.timestamp <= this._lastMutation ? this._lastMutation - click.timestamp : undefined;\n      }\n      if (!click.scrollAfter && this._lastScroll) {\n        click.scrollAfter = click.timestamp <= this._lastScroll ? this._lastScroll - click.timestamp : undefined;\n      }\n\n      // All of these are in seconds!\n      if (click.timestamp + this._timeout <= now) {\n        timedOutClicks.push(click);\n      }\n    });\n\n    // Remove \"old\" clicks\n    for (const click of timedOutClicks) {\n      const pos = this._clicks.indexOf(click);\n\n      if (pos > -1) {\n        this._generateBreadcrumbs(click);\n        this._clicks.splice(pos, 1);\n      }\n    }\n\n    // Trigger new check, unless no clicks left\n    if (this._clicks.length) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** Generate matching breadcrumb(s) for the click. */\n   _generateBreadcrumbs(click) {\n    const replay = this._replay;\n    const hadScroll = click.scrollAfter && click.scrollAfter <= this._scollTimeout;\n    const hadMutation = click.mutationAfter && click.mutationAfter <= this._threshold;\n\n    const isSlowClick = !hadScroll && !hadMutation;\n    const { clickCount, clickBreadcrumb } = click;\n\n    // Slow click\n    if (isSlowClick) {\n      // If `mutationAfter` is set, it means a mutation happened after the threshold, but before the timeout\n      // If not, it means we just timed out without scroll & mutation\n      const timeAfterClickMs = Math.min(click.mutationAfter || this._timeout, this._timeout) * 1000;\n      const endReason = timeAfterClickMs < this._timeout * 1000 ? 'mutation' : 'timeout';\n\n      const breadcrumb = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.slowClickDetected',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          timeAfterClickMs,\n          endReason,\n          // If clickCount === 0, it means multiClick was not correctly captured here\n          // - we still want to send 1 in this case\n          clickCount: clickCount || 1,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n      return;\n    }\n\n    // Multi click\n    if (clickCount > 1) {\n      const breadcrumb = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.multiClick',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          clickCount,\n          metric: true,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n    }\n  }\n\n  /** Schedule to check current clicks. */\n   _scheduleCheckClicks() {\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n\n    this._checkClickTimeout = setTimeout(() => this._checkClicks(), 1000);\n  }\n}\n\nconst SLOW_CLICK_TAGS = ['A', 'BUTTON', 'INPUT'];\n\n/** exported for tests only */\nfunction ignoreElement(node, ignoreSelector) {\n  if (!SLOW_CLICK_TAGS.includes(node.tagName)) {\n    return true;\n  }\n\n  // If <input> tag, we only want to consider input[type='submit'] & input[type='button']\n  if (node.tagName === 'INPUT' && !['submit', 'button'].includes(node.getAttribute('type') || '')) {\n    return true;\n  }\n\n  // If <a> tag, detect special variants that may not lead to an action\n  // If target !== _self, we may open the link somewhere else, which would lead to no action\n  // Also, when downloading a file, we may not leave the page, but still not trigger an action\n  if (\n    node.tagName === 'A' &&\n    (node.hasAttribute('download') || (node.hasAttribute('target') && node.getAttribute('target') !== '_self'))\n  ) {\n    return true;\n  }\n\n  if (ignoreSelector && node.matches(ignoreSelector)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isClickBreadcrumb(breadcrumb) {\n  return !!(breadcrumb.data && typeof breadcrumb.data.nodeId === 'number' && breadcrumb.timestamp);\n}\n\n// This is good enough for us, and is easier to test/mock than `timestampInSeconds`\nfunction nowInSeconds() {\n  return Date.now() / 1000;\n}\n\n/** Update the click detector based on a recording event of rrweb. */\nfunction updateClickDetectorForRecordingEvent(clickDetector, event) {\n  try {\n    // note: We only consider incremental snapshots here\n    // This means that any full snapshot is ignored for mutation detection - the reason is that we simply cannot know if a mutation happened here.\n    // E.g. think that we are buffering, an error happens and we take a full snapshot because we switched to session mode -\n    // in this scenario, we would not know if a dead click happened because of the error, which is a key dead click scenario.\n    // Instead, by ignoring full snapshots, we have the risk that we generate a false positive\n    // (if a mutation _did_ happen but was \"swallowed\" by the full snapshot)\n    // But this should be more unlikely as we'd generally capture the incremental snapshot right away\n\n    if (!isIncrementalEvent(event)) {\n      return;\n    }\n\n    const { source } = event.data;\n    if (source === IncrementalSource.Mutation) {\n      clickDetector.registerMutation(event.timestamp);\n    }\n\n    if (source === IncrementalSource.Scroll) {\n      clickDetector.registerScroll(event.timestamp);\n    }\n\n    if (isIncrementalMouseInteraction(event)) {\n      const { type, id } = event.data;\n      const node = record.mirror.getNode(id);\n\n      if (node instanceof HTMLElement && type === MouseInteractions.Click) {\n        clickDetector.registerClick(node);\n      }\n    }\n  } catch (e) {\n    // ignore errors here, e.g. if accessing something that does not exist\n  }\n}\n\nfunction isIncrementalEvent(event) {\n  return event.type === ReplayEventTypeIncrementalSnapshot;\n}\n\nfunction isIncrementalMouseInteraction(\n  event,\n) {\n  return event.data.source === IncrementalSource.MouseInteraction;\n}\n\n/**\n * Create a breadcrumb for a replay.\n */\nfunction createBreadcrumb(\n  breadcrumb,\n) {\n  return {\n    timestamp: Date.now() / 1000,\n    type: 'default',\n    ...breadcrumb,\n  };\n}\n\nvar NodeType;\n(function (NodeType) {\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\n})(NodeType || (NodeType = {}));\n\n// Note that these are the serialized attributes and not attributes directly on\n// the DOM Node. Attributes we are interested in:\nconst ATTRIBUTES_TO_RECORD = new Set([\n  'id',\n  'class',\n  'aria-label',\n  'role',\n  'name',\n  'alt',\n  'title',\n  'data-test-id',\n  'data-testid',\n  'disabled',\n  'aria-disabled',\n  'data-sentry-component',\n]);\n\n/**\n * Inclusion list of attributes that we want to record from the DOM element\n */\nfunction getAttributesToRecord(attributes) {\n  const obj = {};\n  for (const key in attributes) {\n    if (ATTRIBUTES_TO_RECORD.has(key)) {\n      let normalizedKey = key;\n\n      if (key === 'data-testid' || key === 'data-test-id') {\n        normalizedKey = 'testId';\n      }\n\n      obj[normalizedKey] = attributes[key];\n    }\n  }\n\n  return obj;\n}\n\nconst handleDomListener = (\n  replay,\n) => {\n  return (handlerData) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleDom(handlerData);\n\n    if (!result) {\n      return;\n    }\n\n    const isClick = handlerData.name === 'click';\n    const event = isClick ? (handlerData.event ) : undefined;\n    // Ignore clicks if ctrl/alt/meta/shift keys are held down as they alter behavior of clicks (e.g. open in new tab)\n    if (\n      isClick &&\n      replay.clickDetector &&\n      event &&\n      event.target &&\n      !event.altKey &&\n      !event.metaKey &&\n      !event.ctrlKey &&\n      !event.shiftKey\n    ) {\n      handleClick(\n        replay.clickDetector,\n        result ,\n        getClickTargetNode(handlerData.event ) ,\n      );\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n};\n\n/** Get the base DOM breadcrumb. */\nfunction getBaseDomBreadcrumb(target, message) {\n  const nodeId = record.mirror.getId(target);\n  const node = nodeId && record.mirror.getNode(nodeId);\n  const meta = node && record.mirror.getMeta(node);\n  const element = meta && isElement(meta) ? meta : null;\n\n  return {\n    message,\n    data: element\n      ? {\n          nodeId,\n          node: {\n            id: nodeId,\n            tagName: element.tagName,\n            textContent: Array.from(element.childNodes)\n              .map((node) => node.type === NodeType.Text && node.textContent)\n              .filter(Boolean) // filter out empty values\n              .map(text => (text ).trim())\n              .join(''),\n            attributes: getAttributesToRecord(element.attributes),\n          },\n        }\n      : {},\n  };\n}\n\n/**\n * An event handler to react to DOM events.\n * Exported for tests.\n */\nfunction handleDom(handlerData) {\n  const { target, message } = getDomTarget(handlerData);\n\n  return createBreadcrumb({\n    category: `ui.${handlerData.name}`,\n    ...getBaseDomBreadcrumb(target, message),\n  });\n}\n\nfunction getDomTarget(handlerData) {\n  const isClick = handlerData.name === 'click';\n\n  let message;\n  let target = null;\n\n  // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n  try {\n    target = isClick ? getClickTargetNode(handlerData.event ) : getTargetNode(handlerData.event );\n    message = htmlTreeAsString(target, { maxStringLength: 200 }) || '<unknown>';\n  } catch (e) {\n    message = '<unknown>';\n  }\n\n  return { target, message };\n}\n\nfunction isElement(node) {\n  return node.type === NodeType.Element;\n}\n\n/** Handle keyboard events & create breadcrumbs. */\nfunction handleKeyboardEvent(replay, event) {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  // Update user activity, but do not restart recording as it can create\n  // noisy/low-value replays (e.g. user comes back from idle, hits alt-tab, new\n  // session with a single \"keydown\" breadcrumb is created)\n  replay.updateUserActivity();\n\n  const breadcrumb = getKeyboardBreadcrumb(event);\n\n  if (!breadcrumb) {\n    return;\n  }\n\n  addBreadcrumbEvent(replay, breadcrumb);\n}\n\n/** exported only for tests */\nfunction getKeyboardBreadcrumb(event) {\n  const { metaKey, shiftKey, ctrlKey, altKey, key, target } = event;\n\n  // never capture for input fields\n  if (!target || isInputElement(target ) || !key) {\n    return null;\n  }\n\n  // Note: We do not consider shift here, as that means \"uppercase\"\n  const hasModifierKey = metaKey || ctrlKey || altKey;\n  const isCharacterKey = key.length === 1; // other keys like Escape, Tab, etc have a longer length\n\n  // Do not capture breadcrumb if only a word key is pressed\n  // This could leak e.g. user input\n  if (!hasModifierKey && isCharacterKey) {\n    return null;\n  }\n\n  const message = htmlTreeAsString(target, { maxStringLength: 200 }) || '<unknown>';\n  const baseBreadcrumb = getBaseDomBreadcrumb(target , message);\n\n  return createBreadcrumb({\n    category: 'ui.keyDown',\n    message,\n    data: {\n      ...baseBreadcrumb.data,\n      metaKey,\n      shiftKey,\n      ctrlKey,\n      altKey,\n      key,\n    },\n  });\n}\n\nfunction isInputElement(target) {\n  return target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable;\n}\n\n// Map entryType -> function to normalize data for event\nconst ENTRY_TYPES\n\n = {\n  // @ts-expect-error TODO: entry type does not fit the create* functions entry type\n  resource: createResourceEntry,\n  paint: createPaintEntry,\n  // @ts-expect-error TODO: entry type does not fit the create* functions entry type\n  navigation: createNavigationEntry,\n};\n\n/**\n * Create replay performance entries from the browser performance entries.\n */\nfunction createPerformanceEntries(\n  entries,\n) {\n  return entries.map(createPerformanceEntry).filter(Boolean) ;\n}\n\nfunction createPerformanceEntry(entry) {\n  if (!ENTRY_TYPES[entry.entryType]) {\n    return null;\n  }\n\n  return ENTRY_TYPES[entry.entryType](entry);\n}\n\nfunction getAbsoluteTime(time) {\n  // browserPerformanceTimeOrigin can be undefined if `performance` or\n  // `performance.now` doesn't exist, but this is already checked by this integration\n  return ((browserPerformanceTimeOrigin || WINDOW.performance.timeOrigin) + time) / 1000;\n}\n\nfunction createPaintEntry(entry) {\n  const { duration, entryType, name, startTime } = entry;\n\n  const start = getAbsoluteTime(startTime);\n  return {\n    type: entryType,\n    name,\n    start,\n    end: start + duration,\n    data: undefined,\n  };\n}\n\nfunction createNavigationEntry(entry) {\n  const {\n    entryType,\n    name,\n    decodedBodySize,\n    duration,\n    domComplete,\n    encodedBodySize,\n    domContentLoadedEventStart,\n    domContentLoadedEventEnd,\n    domInteractive,\n    loadEventStart,\n    loadEventEnd,\n    redirectCount,\n    startTime,\n    transferSize,\n    type,\n  } = entry;\n\n  // Ignore entries with no duration, they do not seem to be useful and cause dupes\n  if (duration === 0) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${type}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(domComplete),\n    name,\n    data: {\n      size: transferSize,\n      decodedBodySize,\n      encodedBodySize,\n      duration,\n      domInteractive,\n      domContentLoadedEventStart,\n      domContentLoadedEventEnd,\n      loadEventStart,\n      loadEventEnd,\n      domComplete,\n      redirectCount,\n    },\n  };\n}\n\nfunction createResourceEntry(\n  entry,\n) {\n  const {\n    entryType,\n    initiatorType,\n    name,\n    responseEnd,\n    startTime,\n    decodedBodySize,\n    encodedBodySize,\n    responseStatus,\n    transferSize,\n  } = entry;\n\n  // Core SDK handles these\n  if (['fetch', 'xmlhttprequest'].includes(initiatorType)) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${initiatorType}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(responseEnd),\n    name,\n    data: {\n      size: transferSize,\n      statusCode: responseStatus,\n      decodedBodySize,\n      encodedBodySize,\n    },\n  };\n}\n\n/**\n * Add a LCP event to the replay based on an LCP metric.\n */\nfunction getLargestContentfulPaint(metric\n\n) {\n  const entries = metric.entries;\n  const lastEntry = entries[entries.length - 1] ;\n  const element = lastEntry ? lastEntry.element : undefined;\n\n  const value = metric.value;\n\n  const end = getAbsoluteTime(value);\n\n  const data = {\n    type: 'largest-contentful-paint',\n    name: 'largest-contentful-paint',\n    start: end,\n    end,\n    data: {\n      value,\n      size: value,\n      nodeId: element ? record.mirror.getId(element) : undefined,\n    },\n  };\n\n  return data;\n}\n\n/**\n * Sets up a PerformanceObserver to listen to all performance entry types.\n * Returns a callback to stop observing.\n */\nfunction setupPerformanceObserver(replay) {\n  function addPerformanceEntry(entry) {\n    // It is possible for entries to come up multiple times\n    if (!replay.performanceEntries.includes(entry)) {\n      replay.performanceEntries.push(entry);\n    }\n  }\n\n  function onEntries({ entries }) {\n    entries.forEach(addPerformanceEntry);\n  }\n\n  const clearCallbacks = [];\n\n  (['navigation', 'paint', 'resource'] ).forEach(type => {\n    clearCallbacks.push(addPerformanceInstrumentationHandler(type, onEntries));\n  });\n\n  clearCallbacks.push(\n    addLcpInstrumentationHandler(({ metric }) => {\n      replay.replayPerformanceEntries.push(getLargestContentfulPaint(metric));\n    }),\n  );\n\n  // A callback to cleanup all handlers\n  return () => {\n    clearCallbacks.forEach(clearCallback => clearCallback());\n  };\n}\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nconst r = `var t=Uint8Array,n=Uint16Array,r=Int32Array,e=new t([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),i=new t([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),a=new t([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),s=function(t,e){for(var i=new n(31),a=0;a<31;++a)i[a]=e+=1<<t[a-1];var s=new r(i[30]);for(a=1;a<30;++a)for(var o=i[a];o<i[a+1];++o)s[o]=o-i[a]<<5|a;return{b:i,r:s}},o=s(e,2),f=o.b,h=o.r;f[28]=258,h[258]=28;for(var l=s(i,0).r,u=new n(32768),c=0;c<32768;++c){var v=(43690&c)>>1|(21845&c)<<1;v=(61680&(v=(52428&v)>>2|(13107&v)<<2))>>4|(3855&v)<<4,u[c]=((65280&v)>>8|(255&v)<<8)>>1}var d=function(t,r,e){for(var i=t.length,a=0,s=new n(r);a<i;++a)t[a]&&++s[t[a]-1];var o,f=new n(r);for(a=1;a<r;++a)f[a]=f[a-1]+s[a-1]<<1;if(e){o=new n(1<<r);var h=15-r;for(a=0;a<i;++a)if(t[a])for(var l=a<<4|t[a],c=r-t[a],v=f[t[a]-1]++<<c,d=v|(1<<c)-1;v<=d;++v)o[u[v]>>h]=l}else for(o=new n(i),a=0;a<i;++a)t[a]&&(o[a]=u[f[t[a]-1]++]>>15-t[a]);return o},g=new t(288);for(c=0;c<144;++c)g[c]=8;for(c=144;c<256;++c)g[c]=9;for(c=256;c<280;++c)g[c]=7;for(c=280;c<288;++c)g[c]=8;var w=new t(32);for(c=0;c<32;++c)w[c]=5;var p=d(g,9,0),y=d(w,5,0),m=function(t){return(t+7)/8|0},b=function(n,r,e){return(null==r||r<0)&&(r=0),(null==e||e>n.length)&&(e=n.length),new t(n.subarray(r,e))},M=[\"unexpected EOF\",\"invalid block type\",\"invalid length/literal\",\"invalid distance\",\"stream finished\",\"no stream handler\",,\"no callback\",\"invalid UTF-8 data\",\"extra field too long\",\"date not in range 1980-2099\",\"filename too long\",\"stream finishing\",\"invalid zip data\"],E=function(t,n,r){var e=new Error(n||M[t]);if(e.code=t,Error.captureStackTrace&&Error.captureStackTrace(e,E),!r)throw e;return e},z=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8},A=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8,t[e+2]|=r>>16},_=function(r,e){for(var i=[],a=0;a<r.length;++a)r[a]&&i.push({s:a,f:r[a]});var s=i.length,o=i.slice();if(!s)return{t:F,l:0};if(1==s){var f=new t(i[0].s+1);return f[i[0].s]=1,{t:f,l:1}}i.sort((function(t,n){return t.f-n.f})),i.push({s:-1,f:25001});var h=i[0],l=i[1],u=0,c=1,v=2;for(i[0]={s:-1,f:h.f+l.f,l:h,r:l};c!=s-1;)h=i[i[u].f<i[v].f?u++:v++],l=i[u!=c&&i[u].f<i[v].f?u++:v++],i[c++]={s:-1,f:h.f+l.f,l:h,r:l};var d=o[0].s;for(a=1;a<s;++a)o[a].s>d&&(d=o[a].s);var g=new n(d+1),w=x(i[c-1],g,0);if(w>e){a=0;var p=0,y=w-e,m=1<<y;for(o.sort((function(t,n){return g[n.s]-g[t.s]||t.f-n.f}));a<s;++a){var b=o[a].s;if(!(g[b]>e))break;p+=m-(1<<w-g[b]),g[b]=e}for(p>>=y;p>0;){var M=o[a].s;g[M]<e?p-=1<<e-g[M]++-1:++a}for(;a>=0&&p;--a){var E=o[a].s;g[E]==e&&(--g[E],++p)}w=e}return{t:new t(g),l:w}},x=function(t,n,r){return-1==t.s?Math.max(x(t.l,n,r+1),x(t.r,n,r+1)):n[t.s]=r},D=function(t){for(var r=t.length;r&&!t[--r];);for(var e=new n(++r),i=0,a=t[0],s=1,o=function(t){e[i++]=t},f=1;f<=r;++f)if(t[f]==a&&f!=r)++s;else{if(!a&&s>2){for(;s>138;s-=138)o(32754);s>2&&(o(s>10?s-11<<5|28690:s-3<<5|12305),s=0)}else if(s>3){for(o(a),--s;s>6;s-=6)o(8304);s>2&&(o(s-3<<5|8208),s=0)}for(;s--;)o(a);s=1,a=t[f]}return{c:e.subarray(0,i),n:r}},T=function(t,n){for(var r=0,e=0;e<n.length;++e)r+=t[e]*n[e];return r},k=function(t,n,r){var e=r.length,i=m(n+2);t[i]=255&e,t[i+1]=e>>8,t[i+2]=255^t[i],t[i+3]=255^t[i+1];for(var a=0;a<e;++a)t[i+a+4]=r[a];return 8*(i+4+e)},C=function(t,r,s,o,f,h,l,u,c,v,m){z(r,m++,s),++f[256];for(var b=_(f,15),M=b.t,E=b.l,x=_(h,15),C=x.t,U=x.l,F=D(M),I=F.c,S=F.n,L=D(C),O=L.c,j=L.n,q=new n(19),B=0;B<I.length;++B)++q[31&I[B]];for(B=0;B<O.length;++B)++q[31&O[B]];for(var G=_(q,7),H=G.t,J=G.l,K=19;K>4&&!H[a[K-1]];--K);var N,P,Q,R,V=v+5<<3,W=T(f,g)+T(h,w)+l,X=T(f,M)+T(h,C)+l+14+3*K+T(q,H)+2*q[16]+3*q[17]+7*q[18];if(c>=0&&V<=W&&V<=X)return k(r,m,t.subarray(c,c+v));if(z(r,m,1+(X<W)),m+=2,X<W){N=d(M,E,0),P=M,Q=d(C,U,0),R=C;var Y=d(H,J,0);z(r,m,S-257),z(r,m+5,j-1),z(r,m+10,K-4),m+=14;for(B=0;B<K;++B)z(r,m+3*B,H[a[B]]);m+=3*K;for(var Z=[I,O],$=0;$<2;++$){var tt=Z[$];for(B=0;B<tt.length;++B){var nt=31&tt[B];z(r,m,Y[nt]),m+=H[nt],nt>15&&(z(r,m,tt[B]>>5&127),m+=tt[B]>>12)}}}else N=p,P=g,Q=y,R=w;for(B=0;B<u;++B){var rt=o[B];if(rt>255){A(r,m,N[(nt=rt>>18&31)+257]),m+=P[nt+257],nt>7&&(z(r,m,rt>>23&31),m+=e[nt]);var et=31&rt;A(r,m,Q[et]),m+=R[et],et>3&&(A(r,m,rt>>5&8191),m+=i[et])}else A(r,m,N[rt]),m+=P[rt]}return A(r,m,N[256]),m+P[256]},U=new r([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),F=new t(0),I=function(){for(var t=new Int32Array(256),n=0;n<256;++n){for(var r=n,e=9;--e;)r=(1&r&&-306674912)^r>>>1;t[n]=r}return t}(),S=function(){var t=1,n=0;return{p:function(r){for(var e=t,i=n,a=0|r.length,s=0;s!=a;){for(var o=Math.min(s+2655,a);s<o;++s)i+=e+=r[s];e=(65535&e)+15*(e>>16),i=(65535&i)+15*(i>>16)}t=e,n=i},d:function(){return(255&(t%=65521))<<24|(65280&t)<<8|(255&(n%=65521))<<8|n>>8}}},L=function(a,s,o,f,u){if(!u&&(u={l:1},s.dictionary)){var c=s.dictionary.subarray(-32768),v=new t(c.length+a.length);v.set(c),v.set(a,c.length),a=v,u.w=c.length}return function(a,s,o,f,u,c){var v=c.z||a.length,d=new t(f+v+5*(1+Math.ceil(v/7e3))+u),g=d.subarray(f,d.length-u),w=c.l,p=7&(c.r||0);if(s){p&&(g[0]=c.r>>3);for(var y=U[s-1],M=y>>13,E=8191&y,z=(1<<o)-1,A=c.p||new n(32768),_=c.h||new n(z+1),x=Math.ceil(o/3),D=2*x,T=function(t){return(a[t]^a[t+1]<<x^a[t+2]<<D)&z},F=new r(25e3),I=new n(288),S=new n(32),L=0,O=0,j=c.i||0,q=0,B=c.w||0,G=0;j+2<v;++j){var H=T(j),J=32767&j,K=_[H];if(A[J]=K,_[H]=J,B<=j){var N=v-j;if((L>7e3||q>24576)&&(N>423||!w)){p=C(a,g,0,F,I,S,O,q,G,j-G,p),q=L=O=0,G=j;for(var P=0;P<286;++P)I[P]=0;for(P=0;P<30;++P)S[P]=0}var Q=2,R=0,V=E,W=J-K&32767;if(N>2&&H==T(j-W))for(var X=Math.min(M,N)-1,Y=Math.min(32767,j),Z=Math.min(258,N);W<=Y&&--V&&J!=K;){if(a[j+Q]==a[j+Q-W]){for(var $=0;$<Z&&a[j+$]==a[j+$-W];++$);if($>Q){if(Q=$,R=W,$>X)break;var tt=Math.min(W,$-2),nt=0;for(P=0;P<tt;++P){var rt=j-W+P&32767,et=rt-A[rt]&32767;et>nt&&(nt=et,K=rt)}}}W+=(J=K)-(K=A[J])&32767}if(R){F[q++]=268435456|h[Q]<<18|l[R];var it=31&h[Q],at=31&l[R];O+=e[it]+i[at],++I[257+it],++S[at],B=j+Q,++L}else F[q++]=a[j],++I[a[j]]}}for(j=Math.max(j,B);j<v;++j)F[q++]=a[j],++I[a[j]];p=C(a,g,w,F,I,S,O,q,G,j-G,p),w||(c.r=7&p|g[p/8|0]<<3,p-=7,c.h=_,c.p=A,c.i=j,c.w=B)}else{for(j=c.w||0;j<v+w;j+=65535){var st=j+65535;st>=v&&(g[p/8|0]=w,st=v),p=k(g,p+1,a.subarray(j,st))}c.i=v}return b(d,0,f+m(p)+u)}(a,null==s.level?6:s.level,null==s.mem?Math.ceil(1.5*Math.max(8,Math.min(13,Math.log(a.length)))):12+s.mem,o,f,u)},O=function(t,n,r){for(;r;++n)t[n]=r,r>>>=8},j=function(){function n(n,r){if(\"function\"==typeof n&&(r=n,n={}),this.ondata=r,this.o=n||{},this.s={l:0,i:32768,w:32768,z:32768},this.b=new t(98304),this.o.dictionary){var e=this.o.dictionary.subarray(-32768);this.b.set(e,32768-e.length),this.s.i=32768-e.length}}return n.prototype.p=function(t,n){this.ondata(L(t,this.o,0,0,this.s),n)},n.prototype.push=function(n,r){this.ondata||E(5),this.s.l&&E(4);var e=n.length+this.s.z;if(e>this.b.length){if(e>2*this.b.length-32768){var i=new t(-32768&e);i.set(this.b.subarray(0,this.s.z)),this.b=i}var a=this.b.length-this.s.z;a&&(this.b.set(n.subarray(0,a),this.s.z),this.s.z=this.b.length,this.p(this.b,!1)),this.b.set(this.b.subarray(-32768)),this.b.set(n.subarray(a),32768),this.s.z=n.length-a+32768,this.s.i=32766,this.s.w=32768}else this.b.set(n,this.s.z),this.s.z+=n.length;this.s.l=1&r,(this.s.z>this.s.w+8191||r)&&(this.p(this.b,r||!1),this.s.w=this.s.i,this.s.i-=2)},n}();function q(t,n){n||(n={});var r=function(){var t=-1;return{p:function(n){for(var r=t,e=0;e<n.length;++e)r=I[255&r^n[e]]^r>>>8;t=r},d:function(){return~t}}}(),e=t.length;r.p(t);var i,a=L(t,n,10+((i=n).filename?i.filename.length+1:0),8),s=a.length;return function(t,n){var r=n.filename;if(t[0]=31,t[1]=139,t[2]=8,t[8]=n.level<2?4:9==n.level?2:0,t[9]=3,0!=n.mtime&&O(t,4,Math.floor(new Date(n.mtime||Date.now())/1e3)),r){t[3]=8;for(var e=0;e<=r.length;++e)t[e+10]=r.charCodeAt(e)}}(a,n),O(a,s-8,r.d()),O(a,s-4,e),a}var B=function(){function t(t,n){this.c=S(),this.v=1,j.call(this,t,n)}return t.prototype.push=function(t,n){this.c.p(t),j.prototype.push.call(this,t,n)},t.prototype.p=function(t,n){var r=L(t,this.o,this.v&&(this.o.dictionary?6:2),n&&4,this.s);this.v&&(function(t,n){var r=n.level,e=0==r?0:r<6?1:9==r?3:2;if(t[0]=120,t[1]=e<<6|(n.dictionary&&32),t[1]|=31-(t[0]<<8|t[1])%31,n.dictionary){var i=S();i.p(n.dictionary),O(t,2,i.d())}}(r,this.o),this.v=0),n&&O(r,r.length-4,this.c.d()),this.ondata(r,n)},t}(),G=\"undefined\"!=typeof TextEncoder&&new TextEncoder,H=\"undefined\"!=typeof TextDecoder&&new TextDecoder;try{H.decode(F,{stream:!0})}catch(t){}var J=function(){function t(t){this.ondata=t}return t.prototype.push=function(t,n){this.ondata||E(5),this.d&&E(4),this.ondata(K(t),this.d=n||!1)},t}();function K(n,r){if(r){for(var e=new t(n.length),i=0;i<n.length;++i)e[i]=n.charCodeAt(i);return e}if(G)return G.encode(n);var a=n.length,s=new t(n.length+(n.length>>1)),o=0,f=function(t){s[o++]=t};for(i=0;i<a;++i){if(o+5>s.length){var h=new t(o+8+(a-i<<1));h.set(s),s=h}var l=n.charCodeAt(i);l<128||r?f(l):l<2048?(f(192|l>>6),f(128|63&l)):l>55295&&l<57344?(f(240|(l=65536+(1047552&l)|1023&n.charCodeAt(++i))>>18),f(128|l>>12&63),f(128|l>>6&63),f(128|63&l)):(f(224|l>>12),f(128|l>>6&63),f(128|63&l))}return b(s,0,o)}const N=new class{constructor(){this._init()}clear(){this._init()}addEvent(t){if(!t)throw new Error(\"Adding invalid event\");const n=this._hasEvents?\",\":\"\";this.stream.push(n+t),this._hasEvents=!0}finish(){this.stream.push(\"]\",!0);const t=function(t){let n=0;for(let r=0,e=t.length;r<e;r++)n+=t[r].length;const r=new Uint8Array(n);for(let n=0,e=0,i=t.length;n<i;n++){const i=t[n];r.set(i,e),e+=i.length}return r}(this._deflatedData);return this._init(),t}_init(){this._hasEvents=!1,this._deflatedData=[],this.deflate=new B,this.deflate.ondata=(t,n)=>{this._deflatedData.push(t)},this.stream=new J(((t,n)=>{this.deflate.push(t,n)})),this.stream.push(\"[\")}},P={clear:()=>{N.clear()},addEvent:t=>N.addEvent(t),finish:()=>N.finish(),compress:t=>function(t){return q(K(t))}(t)};addEventListener(\"message\",(function(t){const n=t.data.method,r=t.data.id,e=t.data.arg;if(n in P&&\"function\"==typeof P[n])try{const t=P[n](e);postMessage({id:r,method:n,success:!0,response:t})}catch(t){postMessage({id:r,method:n,success:!1,response:t.message}),console.error(t)}})),postMessage({id:void 0,method:\"init\",success:!0,response:void 0});`;\n\nfunction e(){const e=new Blob([r]);return URL.createObjectURL(e)}\n\n/**\n * Log a message in debug mode, and add a breadcrumb when _experiment.traceInternals is enabled.\n */\nfunction logInfo(message, shouldAddBreadcrumb) {\n  if (!DEBUG_BUILD) {\n    return;\n  }\n\n  logger.info(message);\n\n  if (shouldAddBreadcrumb) {\n    addLogBreadcrumb(message);\n  }\n}\n\n/**\n * Log a message, and add a breadcrumb in the next tick.\n * This is necessary when the breadcrumb may be added before the replay is initialized.\n */\nfunction logInfoNextTick(message, shouldAddBreadcrumb) {\n  if (!DEBUG_BUILD) {\n    return;\n  }\n\n  logger.info(message);\n\n  if (shouldAddBreadcrumb) {\n    // Wait a tick here to avoid race conditions for some initial logs\n    // which may be added before replay is initialized\n    setTimeout(() => {\n      addLogBreadcrumb(message);\n    }, 0);\n  }\n}\n\nfunction addLogBreadcrumb(message) {\n  addBreadcrumb(\n    {\n      category: 'console',\n      data: {\n        logger: 'replay',\n      },\n      level: 'info',\n      message,\n    },\n    { level: 'info' },\n  );\n}\n\n/** This error indicates that the event buffer size exceeded the limit.. */\nclass EventBufferSizeExceededError extends Error {\n   constructor() {\n    super(`Event buffer exceeded maximum size of ${REPLAY_MAX_EVENT_BUFFER_SIZE}.`);\n  }\n}\n\n/**\n * A basic event buffer that does not do any compression.\n * Used as fallback if the compression worker cannot be loaded or is disabled.\n */\nclass EventBufferArray  {\n  /** All the events that are buffered to be sent. */\n\n  /** @inheritdoc */\n\n   constructor() {\n    this.events = [];\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n   get hasEvents() {\n    return this.events.length > 0;\n  }\n\n  /** @inheritdoc */\n   get type() {\n    return 'sync';\n  }\n\n  /** @inheritdoc */\n   destroy() {\n    this.events = [];\n  }\n\n  /** @inheritdoc */\n   async addEvent(event) {\n    const eventSize = JSON.stringify(event).length;\n    this._totalSize += eventSize;\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      throw new EventBufferSizeExceededError();\n    }\n\n    this.events.push(event);\n  }\n\n  /** @inheritdoc */\n   finish() {\n    return new Promise(resolve => {\n      // Make a copy of the events array reference and immediately clear the\n      // events member so that we do not lose new events while uploading\n      // attachment.\n      const eventsRet = this.events;\n      this.clear();\n      resolve(JSON.stringify(eventsRet));\n    });\n  }\n\n  /** @inheritdoc */\n   clear() {\n    this.events = [];\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n   getEarliestTimestamp() {\n    const timestamp = this.events.map(event => event.timestamp).sort()[0];\n\n    if (!timestamp) {\n      return null;\n    }\n\n    return timestampToMs(timestamp);\n  }\n}\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nclass WorkerHandler {\n\n   constructor(worker) {\n    this._worker = worker;\n    this._id = 0;\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n   ensureReady() {\n    // Ensure we only check once\n    if (this._ensureReadyPromise) {\n      return this._ensureReadyPromise;\n    }\n\n    this._ensureReadyPromise = new Promise((resolve, reject) => {\n      this._worker.addEventListener(\n        'message',\n        ({ data }) => {\n          if ((data ).success) {\n            resolve();\n          } else {\n            reject();\n          }\n        },\n        { once: true },\n      );\n\n      this._worker.addEventListener(\n        'error',\n        error => {\n          reject(error);\n        },\n        { once: true },\n      );\n    });\n\n    return this._ensureReadyPromise;\n  }\n\n  /**\n   * Destroy the worker.\n   */\n   destroy() {\n    logInfo('[Replay] Destroying compression worker');\n    this._worker.terminate();\n  }\n\n  /**\n   * Post message to worker and wait for response before resolving promise.\n   */\n   postMessage(method, arg) {\n    const id = this._getAndIncrementId();\n\n    return new Promise((resolve, reject) => {\n      const listener = ({ data }) => {\n        const response = data ;\n        if (response.method !== method) {\n          return;\n        }\n\n        // There can be multiple listeners for a single method, the id ensures\n        // that the response matches the caller.\n        if (response.id !== id) {\n          return;\n        }\n\n        // At this point, we'll always want to remove listener regardless of result status\n        this._worker.removeEventListener('message', listener);\n\n        if (!response.success) {\n          // TODO: Do some error handling, not sure what\n          DEBUG_BUILD && logger.error('[Replay]', response.response);\n\n          reject(new Error('Error in compression worker'));\n          return;\n        }\n\n        resolve(response.response );\n      };\n\n      // Note: we can't use `once` option because it's possible it needs to\n      // listen to multiple messages\n      this._worker.addEventListener('message', listener);\n      this._worker.postMessage({ id, method, arg });\n    });\n  }\n\n  /** Get the current ID and increment it for the next call. */\n   _getAndIncrementId() {\n    return this._id++;\n  }\n}\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nclass EventBufferCompressionWorker  {\n  /** @inheritdoc */\n\n   constructor(worker) {\n    this._worker = new WorkerHandler(worker);\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n   get hasEvents() {\n    return !!this._earliestTimestamp;\n  }\n\n  /** @inheritdoc */\n   get type() {\n    return 'worker';\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n   ensureReady() {\n    return this._worker.ensureReady();\n  }\n\n  /**\n   * Destroy the event buffer.\n   */\n   destroy() {\n    this._worker.destroy();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfuly received and processed by worker.\n   */\n   addEvent(event) {\n    const timestamp = timestampToMs(event.timestamp);\n    if (!this._earliestTimestamp || timestamp < this._earliestTimestamp) {\n      this._earliestTimestamp = timestamp;\n    }\n\n    const data = JSON.stringify(event);\n    this._totalSize += data.length;\n\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      return Promise.reject(new EventBufferSizeExceededError());\n    }\n\n    return this._sendEventToWorker(data);\n  }\n\n  /**\n   * Finish the event buffer and return the compressed data.\n   */\n   finish() {\n    return this._finishRequest();\n  }\n\n  /** @inheritdoc */\n   clear() {\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    this.hasCheckout = false;\n\n    // We do not wait on this, as we assume the order of messages is consistent for the worker\n    this._worker.postMessage('clear').then(null, e => {\n      DEBUG_BUILD && logger.warn('[Replay] Sending \"clear\" message to worker failed', e);\n    });\n  }\n\n  /** @inheritdoc */\n   getEarliestTimestamp() {\n    return this._earliestTimestamp;\n  }\n\n  /**\n   * Send the event to the worker.\n   */\n   _sendEventToWorker(data) {\n    return this._worker.postMessage('addEvent', data);\n  }\n\n  /**\n   * Finish the request and return the compressed data from the worker.\n   */\n   async _finishRequest() {\n    const response = await this._worker.postMessage('finish');\n\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n\n    return response;\n  }\n}\n\n/**\n * This proxy will try to use the compression worker, and fall back to use the simple buffer if an error occurs there.\n * This can happen e.g. if the worker cannot be loaded.\n * Exported only for testing.\n */\nclass EventBufferProxy  {\n\n   constructor(worker) {\n    this._fallback = new EventBufferArray();\n    this._compression = new EventBufferCompressionWorker(worker);\n    this._used = this._fallback;\n\n    this._ensureWorkerIsLoadedPromise = this._ensureWorkerIsLoaded();\n  }\n\n  /** @inheritdoc */\n   get type() {\n    return this._used.type;\n  }\n\n  /** @inheritDoc */\n   get hasEvents() {\n    return this._used.hasEvents;\n  }\n\n  /** @inheritdoc */\n   get hasCheckout() {\n    return this._used.hasCheckout;\n  }\n  /** @inheritdoc */\n   set hasCheckout(value) {\n    this._used.hasCheckout = value;\n  }\n\n  /** @inheritDoc */\n   destroy() {\n    this._fallback.destroy();\n    this._compression.destroy();\n  }\n\n  /** @inheritdoc */\n   clear() {\n    return this._used.clear();\n  }\n\n  /** @inheritdoc */\n   getEarliestTimestamp() {\n    return this._used.getEarliestTimestamp();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfully added.\n   */\n   addEvent(event) {\n    return this._used.addEvent(event);\n  }\n\n  /** @inheritDoc */\n   async finish() {\n    // Ensure the worker is loaded, so the sent event is compressed\n    await this.ensureWorkerIsLoaded();\n\n    return this._used.finish();\n  }\n\n  /** Ensure the worker has loaded. */\n   ensureWorkerIsLoaded() {\n    return this._ensureWorkerIsLoadedPromise;\n  }\n\n  /** Actually check if the worker has been loaded. */\n   async _ensureWorkerIsLoaded() {\n    try {\n      await this._compression.ensureReady();\n    } catch (error) {\n      // If the worker fails to load, we fall back to the simple buffer.\n      // Nothing more to do from our side here\n      logInfo('[Replay] Failed to load the compression worker, falling back to simple buffer');\n      return;\n    }\n\n    // Now we need to switch over the array buffer to the compression worker\n    await this._switchToCompressionWorker();\n  }\n\n  /** Switch the used buffer to the compression worker. */\n   async _switchToCompressionWorker() {\n    const { events, hasCheckout } = this._fallback;\n\n    const addEventPromises = [];\n    for (const event of events) {\n      addEventPromises.push(this._compression.addEvent(event));\n    }\n\n    this._compression.hasCheckout = hasCheckout;\n\n    // We switch over to the new buffer immediately - any further events will be added\n    // after the previously buffered ones\n    this._used = this._compression;\n\n    // Wait for original events to be re-added before resolving\n    try {\n      await Promise.all(addEventPromises);\n    } catch (error) {\n      DEBUG_BUILD && logger.warn('[Replay] Failed to add events when switching buffers.', error);\n    }\n  }\n}\n\n/**\n * Create an event buffer for replays.\n */\nfunction createEventBuffer({\n  useCompression,\n  workerUrl: customWorkerUrl,\n}) {\n  if (\n    useCompression &&\n    // eslint-disable-next-line no-restricted-globals\n    window.Worker\n  ) {\n    const worker = _loadWorker(customWorkerUrl);\n\n    if (worker) {\n      return worker;\n    }\n  }\n\n  logInfo('[Replay] Using simple buffer');\n  return new EventBufferArray();\n}\n\nfunction _loadWorker(customWorkerUrl) {\n  try {\n    const workerUrl = customWorkerUrl || _getWorkerUrl();\n\n    if (!workerUrl) {\n      return;\n    }\n\n    logInfo(`[Replay] Using compression worker${customWorkerUrl ? ` from ${customWorkerUrl}` : ''}`);\n    const worker = new Worker(workerUrl);\n    return new EventBufferProxy(worker);\n  } catch (error) {\n    logInfo('[Replay] Failed to create compression worker');\n    // Fall back to use simple event buffer array\n  }\n}\n\nfunction _getWorkerUrl() {\n  if (typeof __SENTRY_EXCLUDE_REPLAY_WORKER__ === 'undefined' || !__SENTRY_EXCLUDE_REPLAY_WORKER__) {\n    return e();\n  }\n\n  return '';\n}\n\n/** If sessionStorage is available. */\nfunction hasSessionStorage() {\n  try {\n    // This can throw, e.g. when being accessed in a sandboxed iframe\n    return 'sessionStorage' in WINDOW && !!WINDOW.sessionStorage;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Removes the session from Session Storage and unsets session in replay instance\n */\nfunction clearSession(replay) {\n  deleteSession();\n  replay.session = undefined;\n}\n\n/**\n * Deletes a session from storage\n */\nfunction deleteSession() {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.removeItem(REPLAY_SESSION_KEY);\n  } catch (e) {\n    // Ignore potential SecurityError exceptions\n  }\n}\n\n/**\n * Given a sample rate, returns true if replay should be sampled.\n *\n * 1.0 = 100% sampling\n * 0.0 = 0% sampling\n */\nfunction isSampled(sampleRate) {\n  if (sampleRate === undefined) {\n    return false;\n  }\n\n  // Math.random() returns a number in range of 0 to 1 (inclusive of 0, but not 1)\n  return Math.random() < sampleRate;\n}\n\n/**\n * Get a session with defaults & applied sampling.\n */\nfunction makeSession(session) {\n  const now = Date.now();\n  const id = session.id || uuid4();\n  // Note that this means we cannot set a started/lastActivity of `0`, but this should not be relevant outside of tests.\n  const started = session.started || now;\n  const lastActivity = session.lastActivity || now;\n  const segmentId = session.segmentId || 0;\n  const sampled = session.sampled;\n  const previousSessionId = session.previousSessionId;\n\n  return {\n    id,\n    started,\n    lastActivity,\n    segmentId,\n    sampled,\n    previousSessionId,\n  };\n}\n\n/**\n * Save a session to session storage.\n */\nfunction saveSession(session) {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.setItem(REPLAY_SESSION_KEY, JSON.stringify(session));\n  } catch (e) {\n    // Ignore potential SecurityError exceptions\n  }\n}\n\n/**\n * Get the sampled status for a session based on sample rates & current sampled status.\n */\nfunction getSessionSampleType(sessionSampleRate, allowBuffering) {\n  return isSampled(sessionSampleRate) ? 'session' : allowBuffering ? 'buffer' : false;\n}\n\n/**\n * Create a new session, which in its current implementation is a Sentry event\n * that all replays will be saved to as attachments. Currently, we only expect\n * one of these Sentry events per \"replay session\".\n */\nfunction createSession(\n  { sessionSampleRate, allowBuffering, stickySession = false },\n  { previousSessionId } = {},\n) {\n  const sampled = getSessionSampleType(sessionSampleRate, allowBuffering);\n  const session = makeSession({\n    sampled,\n    previousSessionId,\n  });\n\n  if (stickySession) {\n    saveSession(session);\n  }\n\n  return session;\n}\n\n/**\n * Fetches a session from storage\n */\nfunction fetchSession(traceInternals) {\n  if (!hasSessionStorage()) {\n    return null;\n  }\n\n  try {\n    // This can throw if cookies are disabled\n    const sessionStringFromStorage = WINDOW.sessionStorage.getItem(REPLAY_SESSION_KEY);\n\n    if (!sessionStringFromStorage) {\n      return null;\n    }\n\n    const sessionObj = JSON.parse(sessionStringFromStorage) ;\n\n    logInfoNextTick('[Replay] Loading existing session', traceInternals);\n\n    return makeSession(sessionObj);\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Given an initial timestamp and an expiry duration, checks to see if current\n * time should be considered as expired.\n */\nfunction isExpired(\n  initialTime,\n  expiry,\n  targetTime = +new Date(),\n) {\n  // Always expired if < 0\n  if (initialTime === null || expiry === undefined || expiry < 0) {\n    return true;\n  }\n\n  // Never expires if == 0\n  if (expiry === 0) {\n    return false;\n  }\n\n  return initialTime + expiry <= targetTime;\n}\n\n/**\n * Checks to see if session is expired\n */\nfunction isSessionExpired(\n  session,\n  {\n    maxReplayDuration,\n    sessionIdleExpire,\n    targetTime = Date.now(),\n  },\n) {\n  return (\n    // First, check that maximum session length has not been exceeded\n    isExpired(session.started, maxReplayDuration, targetTime) ||\n    // check that the idle timeout has not been exceeded (i.e. user has\n    // performed an action within the last `sessionIdleExpire` ms)\n    isExpired(session.lastActivity, sessionIdleExpire, targetTime)\n  );\n}\n\n/** If the session should be refreshed or not. */\nfunction shouldRefreshSession(\n  session,\n  { sessionIdleExpire, maxReplayDuration },\n) {\n  // If not expired, all good, just keep the session\n  if (!isSessionExpired(session, { sessionIdleExpire, maxReplayDuration })) {\n    return false;\n  }\n\n  // If we are buffering & haven't ever flushed yet, always continue\n  if (session.sampled === 'buffer' && session.segmentId === 0) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Get or create a session, when initializing the replay.\n * Returns a session that may be unsampled.\n */\nfunction loadOrCreateSession(\n  {\n    traceInternals,\n    sessionIdleExpire,\n    maxReplayDuration,\n    previousSessionId,\n  }\n\n,\n  sessionOptions,\n) {\n  const existingSession = sessionOptions.stickySession && fetchSession(traceInternals);\n\n  // No session exists yet, just create a new one\n  if (!existingSession) {\n    logInfoNextTick('[Replay] Creating new session', traceInternals);\n    return createSession(sessionOptions, { previousSessionId });\n  }\n\n  if (!shouldRefreshSession(existingSession, { sessionIdleExpire, maxReplayDuration })) {\n    return existingSession;\n  }\n\n  logInfoNextTick('[Replay] Session in sessionStorage is expired, creating new one...');\n  return createSession(sessionOptions, { previousSessionId: existingSession.id });\n}\n\nfunction isCustomEvent(event) {\n  return event.type === EventType.Custom;\n}\n\n/**\n * Add an event to the event buffer.\n * In contrast to `addEvent`, this does not return a promise & does not wait for the adding of the event to succeed/fail.\n * Instead this returns `true` if we tried to add the event, else false.\n * It returns `false` e.g. if we are paused, disabled, or out of the max replay duration.\n *\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nfunction addEventSync(replay, event, isCheckout) {\n  if (!shouldAddEvent(replay, event)) {\n    return false;\n  }\n\n  // This should never reject\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  _addEvent(replay, event, isCheckout);\n\n  return true;\n}\n\n/**\n * Add an event to the event buffer.\n * Resolves to `null` if no event was added, else to `void`.\n *\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nfunction addEvent(\n  replay,\n  event,\n  isCheckout,\n) {\n  if (!shouldAddEvent(replay, event)) {\n    return Promise.resolve(null);\n  }\n\n  return _addEvent(replay, event, isCheckout);\n}\n\nasync function _addEvent(\n  replay,\n  event,\n  isCheckout,\n) {\n  if (!replay.eventBuffer) {\n    return null;\n  }\n\n  try {\n    if (isCheckout && replay.recordingMode === 'buffer') {\n      replay.eventBuffer.clear();\n    }\n\n    if (isCheckout) {\n      replay.eventBuffer.hasCheckout = true;\n    }\n\n    const replayOptions = replay.getOptions();\n\n    const eventAfterPossibleCallback = maybeApplyCallback(event, replayOptions.beforeAddRecordingEvent);\n\n    if (!eventAfterPossibleCallback) {\n      return;\n    }\n\n    return await replay.eventBuffer.addEvent(eventAfterPossibleCallback);\n  } catch (error) {\n    const reason = error && error instanceof EventBufferSizeExceededError ? 'addEventSizeExceeded' : 'addEvent';\n\n    DEBUG_BUILD && logger.error(error);\n    await replay.stop({ reason });\n\n    const client = getClient();\n\n    if (client) {\n      client.recordDroppedEvent('internal_sdk_error', 'replay');\n    }\n  }\n}\n\n/** Exported only for tests. */\nfunction shouldAddEvent(replay, event) {\n  if (!replay.eventBuffer || replay.isPaused() || !replay.isEnabled()) {\n    return false;\n  }\n\n  const timestampInMs = timestampToMs(event.timestamp);\n\n  // Throw out events that happen more than 5 minutes ago. This can happen if\n  // page has been left open and idle for a long period of time and user\n  // comes back to trigger a new session. The performance entries rely on\n  // `performance.timeOrigin`, which is when the page first opened.\n  if (timestampInMs + replay.timeouts.sessionIdlePause < Date.now()) {\n    return false;\n  }\n\n  // Throw out events that are +60min from the initial timestamp\n  if (timestampInMs > replay.getContext().initialTimestamp + replay.getOptions().maxReplayDuration) {\n    logInfo(\n      `[Replay] Skipping event with timestamp ${timestampInMs} because it is after maxReplayDuration`,\n      replay.getOptions()._experiments.traceInternals,\n    );\n    return false;\n  }\n\n  return true;\n}\n\nfunction maybeApplyCallback(\n  event,\n  callback,\n) {\n  try {\n    if (typeof callback === 'function' && isCustomEvent(event)) {\n      return callback(event);\n    }\n  } catch (error) {\n    DEBUG_BUILD &&\n      logger.error('[Replay] An error occured in the `beforeAddRecordingEvent` callback, skipping the event...', error);\n    return null;\n  }\n\n  return event;\n}\n\n/** If the event is an error event */\nfunction isErrorEvent(event) {\n  return !event.type;\n}\n\n/** If the event is a transaction event */\nfunction isTransactionEvent(event) {\n  return event.type === 'transaction';\n}\n\n/** If the event is an replay event */\nfunction isReplayEvent(event) {\n  return event.type === 'replay_event';\n}\n\n/** If the event is a feedback event */\nfunction isFeedbackEvent(event) {\n  return event.type === 'feedback';\n}\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nfunction handleAfterSendEvent(replay) {\n  // Custom transports may still be returning `Promise<void>`, which means we cannot expect the status code to be available there\n  // TODO (v8): remove this check as it will no longer be necessary\n  const enforceStatusCode = isBaseTransportSend();\n\n  return (event, sendResponse) => {\n    if (!replay.isEnabled() || (!isErrorEvent(event) && !isTransactionEvent(event))) {\n      return;\n    }\n\n    const statusCode = sendResponse && sendResponse.statusCode;\n\n    // We only want to do stuff on successful error sending, otherwise you get error replays without errors attached\n    // If not using the base transport, we allow `undefined` response (as a custom transport may not implement this correctly yet)\n    // If we do use the base transport, we skip if we encountered an non-OK status code\n    if (enforceStatusCode && (!statusCode || statusCode < 200 || statusCode >= 300)) {\n      return;\n    }\n\n    if (isTransactionEvent(event)) {\n      handleTransactionEvent(replay, event);\n      return;\n    }\n\n    handleErrorEvent(replay, event);\n  };\n}\n\nfunction handleTransactionEvent(replay, event) {\n  const replayContext = replay.getContext();\n\n  // Collect traceIds in _context regardless of `recordingMode`\n  // In error mode, _context gets cleared on every checkout\n  // We limit to max. 100 transactions linked\n  if (event.contexts && event.contexts.trace && event.contexts.trace.trace_id && replayContext.traceIds.size < 100) {\n    replayContext.traceIds.add(event.contexts.trace.trace_id );\n  }\n}\n\nfunction handleErrorEvent(replay, event) {\n  const replayContext = replay.getContext();\n\n  // Add error to list of errorIds of replay. This is ok to do even if not\n  // sampled because context will get reset at next checkout.\n  // XXX: There is also a race condition where it's possible to capture an\n  // error to Sentry before Replay SDK has loaded, but response returns after\n  // it was loaded, and this gets called.\n  // We limit to max. 100 errors linked\n  if (event.event_id && replayContext.errorIds.size < 100) {\n    replayContext.errorIds.add(event.event_id);\n  }\n\n  // If error event is tagged with replay id it means it was sampled (when in buffer mode)\n  // Need to be very careful that this does not cause an infinite loop\n  if (replay.recordingMode !== 'buffer' || !event.tags || !event.tags.replayId) {\n    return;\n  }\n\n  const { beforeErrorSampling } = replay.getOptions();\n  if (typeof beforeErrorSampling === 'function' && !beforeErrorSampling(event)) {\n    return;\n  }\n\n  setTimeout(() => {\n    // Capture current event buffer as new replay\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.sendBufferedReplayOrFlush();\n  });\n}\n\nfunction isBaseTransportSend() {\n  const client = getClient();\n  if (!client) {\n    return false;\n  }\n\n  const transport = client.getTransport();\n  if (!transport) {\n    return false;\n  }\n\n  return (\n    (transport.send ).__sentry__baseTransport__ || false\n  );\n}\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nfunction handleBeforeSendEvent(replay) {\n  return (event) => {\n    if (!replay.isEnabled() || !isErrorEvent(event)) {\n      return;\n    }\n\n    handleHydrationError(replay, event);\n  };\n}\n\nfunction handleHydrationError(replay, event) {\n  const exceptionValue = event.exception && event.exception.values && event.exception.values[0].value;\n  if (typeof exceptionValue !== 'string') {\n    return;\n  }\n\n  if (\n    // Only matches errors in production builds of react-dom\n    // Example https://reactjs.org/docs/error-decoder.html?invariant=423\n    exceptionValue.match(/reactjs\\.org\\/docs\\/error-decoder\\.html\\?invariant=(418|419|422|423|425)/) ||\n    // Development builds of react-dom\n    // Error 1: Hydration failed because the initial UI does not match what was rendered on the server.\n    // Error 2: Text content does not match server-rendered HTML. Warning: Text content did not match.\n    exceptionValue.match(/(does not match server-rendered HTML|Hydration failed because)/i)\n  ) {\n    const breadcrumb = createBreadcrumb({\n      category: 'replay.hydrate-error',\n    });\n    addBreadcrumbEvent(replay, breadcrumb);\n  }\n}\n\n/**\n * Returns true if we think the given event is an error originating inside of rrweb.\n */\nfunction isRrwebError(event, hint) {\n  if (event.type || !event.exception || !event.exception.values || !event.exception.values.length) {\n    return false;\n  }\n\n  // @ts-expect-error this may be set by rrweb when it finds errors\n  if (hint.originalException && hint.originalException.__rrweb__) {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Add a feedback breadcrumb event to replay.\n */\nfunction addFeedbackBreadcrumb(replay, event) {\n  replay.triggerUserActivity();\n  replay.addUpdate(() => {\n    if (!event.timestamp) {\n      // Ignore events that don't have timestamps (this shouldn't happen, more of a typing issue)\n      // Return true here so that we don't flush\n      return true;\n    }\n\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: event.timestamp * 1000,\n      data: {\n        tag: 'breadcrumb',\n        payload: {\n          timestamp: event.timestamp,\n          type: 'default',\n          category: 'sentry.feedback',\n          data: {\n            feedbackId: event.event_id,\n          },\n        },\n      },\n    } );\n\n    return false;\n  });\n}\n\n/**\n * Determine if event should be sampled (only applies in buffer mode).\n * When an event is captured by `hanldleGlobalEvent`, when in buffer mode\n * we determine if we want to sample the error or not.\n */\nfunction shouldSampleForBufferEvent(replay, event) {\n  if (replay.recordingMode !== 'buffer') {\n    return false;\n  }\n\n  // ignore this error because otherwise we could loop indefinitely with\n  // trying to capture replay and failing\n  if (event.message === UNABLE_TO_SEND_REPLAY) {\n    return false;\n  }\n\n  // Require the event to be an error event & to have an exception\n  if (!event.exception || event.type) {\n    return false;\n  }\n\n  return isSampled(replay.getOptions().errorSampleRate);\n}\n\n/**\n * Returns a listener to be added to `addEventProcessor(listener)`.\n */\nfunction handleGlobalEventListener(\n  replay,\n  includeAfterSendEventHandling = false,\n) {\n  const afterSendHandler = includeAfterSendEventHandling ? handleAfterSendEvent(replay) : undefined;\n\n  return Object.assign(\n    (event, hint) => {\n      // Do nothing if replay has been disabled\n      if (!replay.isEnabled()) {\n        return event;\n      }\n\n      if (isReplayEvent(event)) {\n        // Replays have separate set of breadcrumbs, do not include breadcrumbs\n        // from core SDK\n        delete event.breadcrumbs;\n        return event;\n      }\n\n      // We only want to handle errors, transactions, and feedbacks, nothing else\n      if (!isErrorEvent(event) && !isTransactionEvent(event) && !isFeedbackEvent(event)) {\n        return event;\n      }\n\n      // Ensure we do not add replay_id if the session is expired\n      const isSessionActive = replay.checkAndHandleExpiredSession();\n      if (!isSessionActive) {\n        return event;\n      }\n\n      if (isFeedbackEvent(event)) {\n        // This should never reject\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        replay.flush();\n        event.contexts.feedback.replay_id = replay.getSessionId();\n        // Add a replay breadcrumb for this piece of feedback\n        addFeedbackBreadcrumb(replay, event);\n        return event;\n      }\n\n      // Unless `captureExceptions` is enabled, we want to ignore errors coming from rrweb\n      // As there can be a bunch of stuff going wrong in internals there, that we don't want to bubble up to users\n      if (isRrwebError(event, hint) && !replay.getOptions()._experiments.captureExceptions) {\n        DEBUG_BUILD && logger.log('[Replay] Ignoring error from rrweb internals', event);\n        return null;\n      }\n\n      // When in buffer mode, we decide to sample here.\n      // Later, in `handleAfterSendEvent`, if the replayId is set, we know that we sampled\n      // And convert the buffer session to a full session\n      const isErrorEventSampled = shouldSampleForBufferEvent(replay, event);\n\n      // Tag errors if it has been sampled in buffer mode, or if it is session mode\n      // Only tag transactions if in session mode\n      const shouldTagReplayId = isErrorEventSampled || replay.recordingMode === 'session';\n\n      if (shouldTagReplayId) {\n        event.tags = { ...event.tags, replayId: replay.getSessionId() };\n      }\n\n      // In cases where a custom client is used that does not support the new hooks (yet),\n      // we manually call this hook method here\n      if (afterSendHandler) {\n        // Pretend the error had a 200 response so we always capture it\n        afterSendHandler(event, { statusCode: 200 });\n      }\n\n      return event;\n    },\n    { id: 'Replay' },\n  );\n}\n\n/**\n * Create a \"span\" for each performance entry.\n */\nfunction createPerformanceSpans(\n  replay,\n  entries,\n) {\n  return entries.map(({ type, start, end, name, data }) => {\n    const response = replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: start,\n      data: {\n        tag: 'performanceSpan',\n        payload: {\n          op: type,\n          description: name,\n          startTimestamp: start,\n          endTimestamp: end,\n          data,\n        },\n      },\n    });\n\n    // If response is a string, it means its either THROTTLED or SKIPPED\n    return typeof response === 'string' ? Promise.resolve(null) : response;\n  });\n}\n\nfunction handleHistory(handlerData) {\n  const { from, to } = handlerData;\n\n  const now = Date.now() / 1000;\n\n  return {\n    type: 'navigation.push',\n    start: now,\n    end: now,\n    name: to,\n    data: {\n      previous: from,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addHistoryInstrumentationHandler(listener)`.\n */\nfunction handleHistorySpanListener(replay) {\n  return (handlerData) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleHistory(handlerData);\n\n    if (result === null) {\n      return;\n    }\n\n    // Need to collect visited URLs\n    replay.getContext().urls.push(result.name);\n    replay.triggerUserActivity();\n\n    replay.addUpdate(() => {\n      createPerformanceSpans(replay, [result]);\n      // Returning false to flush\n      return false;\n    });\n  };\n}\n\n/**\n * Check whether a given request URL should be filtered out. This is so we\n * don't log Sentry ingest requests.\n */\nfunction shouldFilterRequest(replay, url) {\n  // If we enabled the `traceInternals` experiment, we want to trace everything\n  if (DEBUG_BUILD && replay.getOptions()._experiments.traceInternals) {\n    return false;\n  }\n\n  return isSentryRequestUrl(url, getClient());\n}\n\n/** Add a performance entry breadcrumb */\nfunction addNetworkBreadcrumb(\n  replay,\n  result,\n) {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  if (result === null) {\n    return;\n  }\n\n  if (shouldFilterRequest(replay, result.name)) {\n    return;\n  }\n\n  replay.addUpdate(() => {\n    createPerformanceSpans(replay, [result]);\n    // Returning true will cause `addUpdate` to not flush\n    // We do not want network requests to cause a flush. This will prevent\n    // recurring/polling requests from keeping the replay session alive.\n    return true;\n  });\n}\n\n/** only exported for tests */\nfunction handleFetch(handlerData) {\n  const { startTimestamp, endTimestamp, fetchData, response } = handlerData;\n\n  if (!endTimestamp) {\n    return null;\n  }\n\n  // This is only used as a fallback, so we know the body sizes are never set here\n  const { method, url } = fetchData;\n\n  return {\n    type: 'resource.fetch',\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    name: url,\n    data: {\n      method,\n      statusCode: response ? (response ).status : undefined,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addFetchInstrumentationHandler(listener)`.\n */\nfunction handleFetchSpanListener(replay) {\n  return (handlerData) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleFetch(handlerData);\n\n    addNetworkBreadcrumb(replay, result);\n  };\n}\n\n/** only exported for tests */\nfunction handleXhr(handlerData) {\n  const { startTimestamp, endTimestamp, xhr } = handlerData;\n\n  const sentryXhrData = xhr[SENTRY_XHR_DATA_KEY];\n\n  if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n    return null;\n  }\n\n  // This is only used as a fallback, so we know the body sizes are never set here\n  const { method, url, status_code: statusCode } = sentryXhrData;\n\n  if (url === undefined) {\n    return null;\n  }\n\n  return {\n    type: 'resource.xhr',\n    name: url,\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    data: {\n      method,\n      statusCode,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addXhrInstrumentationHandler(listener)`.\n */\nfunction handleXhrSpanListener(replay) {\n  return (handlerData) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleXhr(handlerData);\n\n    addNetworkBreadcrumb(replay, result);\n  };\n}\n\n/** Get the size of a body. */\nfunction getBodySize(\n  body,\n  textEncoder,\n) {\n  if (!body) {\n    return undefined;\n  }\n\n  try {\n    if (typeof body === 'string') {\n      return textEncoder.encode(body).length;\n    }\n\n    if (body instanceof URLSearchParams) {\n      return textEncoder.encode(body.toString()).length;\n    }\n\n    if (body instanceof FormData) {\n      const formDataStr = _serializeFormData(body);\n      return textEncoder.encode(formDataStr).length;\n    }\n\n    if (body instanceof Blob) {\n      return body.size;\n    }\n\n    if (body instanceof ArrayBuffer) {\n      return body.byteLength;\n    }\n\n    // Currently unhandled types: ArrayBufferView, ReadableStream\n  } catch (e) {\n    // just return undefined\n  }\n\n  return undefined;\n}\n\n/** Convert a Content-Length header to number/undefined.  */\nfunction parseContentLengthHeader(header) {\n  if (!header) {\n    return undefined;\n  }\n\n  const size = parseInt(header, 10);\n  return isNaN(size) ? undefined : size;\n}\n\n/** Get the string representation of a body. */\nfunction getBodyString(body) {\n  try {\n    if (typeof body === 'string') {\n      return [body];\n    }\n\n    if (body instanceof URLSearchParams) {\n      return [body.toString()];\n    }\n\n    if (body instanceof FormData) {\n      return [_serializeFormData(body)];\n    }\n\n    if (!body) {\n      return [undefined];\n    }\n  } catch (e2) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize body', body);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  DEBUG_BUILD && logger.info('[Replay] Skipping network body because of body type', body);\n\n  return [undefined, 'UNPARSEABLE_BODY_TYPE'];\n}\n\n/** Merge a warning into an existing network request/response. */\nfunction mergeWarning(\n  info,\n  warning,\n) {\n  if (!info) {\n    return {\n      headers: {},\n      size: undefined,\n      _meta: {\n        warnings: [warning],\n      },\n    };\n  }\n\n  const newMeta = { ...info._meta };\n  const existingWarnings = newMeta.warnings || [];\n  newMeta.warnings = [...existingWarnings, warning];\n\n  info._meta = newMeta;\n  return info;\n}\n\n/** Convert ReplayNetworkRequestData to a PerformanceEntry. */\nfunction makeNetworkReplayBreadcrumb(\n  type,\n  data,\n) {\n  if (!data) {\n    return null;\n  }\n\n  const { startTimestamp, endTimestamp, url, method, statusCode, request, response } = data;\n\n  const result = {\n    type,\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    name: url,\n    data: dropUndefinedKeys({\n      method,\n      statusCode,\n      request,\n      response,\n    }),\n  };\n\n  return result;\n}\n\n/** Build the request or response part of a replay network breadcrumb that was skipped. */\nfunction buildSkippedNetworkRequestOrResponse(bodySize) {\n  return {\n    headers: {},\n    size: bodySize,\n    _meta: {\n      warnings: ['URL_SKIPPED'],\n    },\n  };\n}\n\n/** Build the request or response part of a replay network breadcrumb. */\nfunction buildNetworkRequestOrResponse(\n  headers,\n  bodySize,\n  body,\n) {\n  if (!bodySize && Object.keys(headers).length === 0) {\n    return undefined;\n  }\n\n  if (!bodySize) {\n    return {\n      headers,\n    };\n  }\n\n  if (!body) {\n    return {\n      headers,\n      size: bodySize,\n    };\n  }\n\n  const info = {\n    headers,\n    size: bodySize,\n  };\n\n  const { body: normalizedBody, warnings } = normalizeNetworkBody(body);\n  info.body = normalizedBody;\n  if (warnings && warnings.length > 0) {\n    info._meta = {\n      warnings,\n    };\n  }\n\n  return info;\n}\n\n/** Filter a set of headers */\nfunction getAllowedHeaders(headers, allowedHeaders) {\n  return Object.keys(headers).reduce((filteredHeaders, key) => {\n    const normalizedKey = key.toLowerCase();\n    // Avoid putting empty strings into the headers\n    if (allowedHeaders.includes(normalizedKey) && headers[key]) {\n      filteredHeaders[normalizedKey] = headers[key];\n    }\n    return filteredHeaders;\n  }, {});\n}\n\nfunction _serializeFormData(formData) {\n  // This is a bit simplified, but gives us a decent estimate\n  // This converts e.g. { name: 'Anne Smith', age: 13 } to 'name=Anne+Smith&age=13'\n  // @ts-expect-error passing FormData to URLSearchParams actually works\n  return new URLSearchParams(formData).toString();\n}\n\nfunction normalizeNetworkBody(body)\n\n {\n  if (!body || typeof body !== 'string') {\n    return {\n      body,\n    };\n  }\n\n  const exceedsSizeLimit = body.length > NETWORK_BODY_MAX_SIZE;\n  const isProbablyJson = _strIsProbablyJson(body);\n\n  if (exceedsSizeLimit) {\n    const truncatedBody = body.slice(0, NETWORK_BODY_MAX_SIZE);\n\n    if (isProbablyJson) {\n      return {\n        body: truncatedBody,\n        warnings: ['MAYBE_JSON_TRUNCATED'],\n      };\n    }\n\n    return {\n      body: `${truncatedBody}…`,\n      warnings: ['TEXT_TRUNCATED'],\n    };\n  }\n\n  if (isProbablyJson) {\n    try {\n      const jsonBody = JSON.parse(body);\n      return {\n        body: jsonBody,\n      };\n    } catch (e3) {\n      // fall back to just send the body as string\n    }\n  }\n\n  return {\n    body,\n  };\n}\n\nfunction _strIsProbablyJson(str) {\n  const first = str[0];\n  const last = str[str.length - 1];\n\n  // Simple check: If this does not start & end with {} or [], it's not JSON\n  return (first === '[' && last === ']') || (first === '{' && last === '}');\n}\n\n/** Match an URL against a list of strings/Regex. */\nfunction urlMatches(url, urls) {\n  const fullUrl = getFullUrl(url);\n\n  return stringMatchesSomePattern(fullUrl, urls);\n}\n\n/** exported for tests */\nfunction getFullUrl(url, baseURI = WINDOW.document.baseURI) {\n  // Short circuit for common cases:\n  if (url.startsWith('http://') || url.startsWith('https://') || url.startsWith(WINDOW.location.origin)) {\n    return url;\n  }\n  const fixedUrl = new URL(url, baseURI);\n\n  // If these do not match, we are not dealing with a relative URL, so just return it\n  if (fixedUrl.origin !== new URL(baseURI).origin) {\n    return url;\n  }\n\n  const fullUrl = fixedUrl.href;\n\n  // Remove trailing slashes, if they don't match the original URL\n  if (!url.endsWith('/') && fullUrl.endsWith('/')) {\n    return fullUrl.slice(0, -1);\n  }\n\n  return fullUrl;\n}\n\n/**\n * Capture a fetch breadcrumb to a replay.\n * This adds additional data (where approriate).\n */\nasync function captureFetchBreadcrumbToReplay(\n  breadcrumb,\n  hint,\n  options\n\n,\n) {\n  try {\n    const data = await _prepareFetchData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.fetch', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    DEBUG_BUILD && logger.error('[Replay] Failed to capture fetch breadcrumb', error);\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nfunction enrichFetchBreadcrumb(\n  breadcrumb,\n  hint,\n  options,\n) {\n  const { input, response } = hint;\n\n  const body = input ? _getFetchRequestArgBody(input) : undefined;\n  const reqSize = getBodySize(body, options.textEncoder);\n\n  const resSize = response ? parseContentLengthHeader(response.headers.get('content-length')) : undefined;\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nasync function _prepareFetchData(\n  breadcrumb,\n  hint,\n  options\n\n,\n) {\n  const now = Date.now();\n  const { startTimestamp = now, endTimestamp = now } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  const captureDetails =\n    urlMatches(url, options.networkDetailAllowUrls) && !urlMatches(url, options.networkDetailDenyUrls);\n\n  const request = captureDetails\n    ? _getRequestInfo(options, hint.input, requestBodySize)\n    : buildSkippedNetworkRequestOrResponse(requestBodySize);\n  const response = await _getResponseInfo(captureDetails, options, hint.response, responseBodySize);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request,\n    response,\n  };\n}\n\nfunction _getRequestInfo(\n  { networkCaptureBodies, networkRequestHeaders },\n  input,\n  requestBodySize,\n) {\n  const headers = input ? getRequestHeaders(input, networkRequestHeaders) : {};\n\n  if (!networkCaptureBodies) {\n    return buildNetworkRequestOrResponse(headers, requestBodySize, undefined);\n  }\n\n  // We only want to transmit string or string-like bodies\n  const requestBody = _getFetchRequestArgBody(input);\n  const [bodyStr, warning] = getBodyString(requestBody);\n  const data = buildNetworkRequestOrResponse(headers, requestBodySize, bodyStr);\n\n  if (warning) {\n    return mergeWarning(data, warning);\n  }\n\n  return data;\n}\n\n/** Exported only for tests. */\nasync function _getResponseInfo(\n  captureDetails,\n  {\n    networkCaptureBodies,\n    textEncoder,\n    networkResponseHeaders,\n  }\n\n,\n  response,\n  responseBodySize,\n) {\n  if (!captureDetails && responseBodySize !== undefined) {\n    return buildSkippedNetworkRequestOrResponse(responseBodySize);\n  }\n\n  const headers = response ? getAllHeaders(response.headers, networkResponseHeaders) : {};\n\n  if (!response || (!networkCaptureBodies && responseBodySize !== undefined)) {\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n\n  const [bodyText, warning] = await _parseFetchResponseBody(response);\n  const result = getResponseData(bodyText, {\n    networkCaptureBodies,\n    textEncoder,\n    responseBodySize,\n    captureDetails,\n    headers,\n  });\n\n  if (warning) {\n    return mergeWarning(result, warning);\n  }\n\n  return result;\n}\n\nfunction getResponseData(\n  bodyText,\n  {\n    networkCaptureBodies,\n    textEncoder,\n    responseBodySize,\n    captureDetails,\n    headers,\n  }\n\n,\n) {\n  try {\n    const size =\n      bodyText && bodyText.length && responseBodySize === undefined\n        ? getBodySize(bodyText, textEncoder)\n        : responseBodySize;\n\n    if (!captureDetails) {\n      return buildSkippedNetworkRequestOrResponse(size);\n    }\n\n    if (networkCaptureBodies) {\n      return buildNetworkRequestOrResponse(headers, size, bodyText);\n    }\n\n    return buildNetworkRequestOrResponse(headers, size, undefined);\n  } catch (error) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize response body', error);\n    // fallback\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n}\n\nasync function _parseFetchResponseBody(response) {\n  const res = _tryCloneResponse(response);\n\n  if (!res) {\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  try {\n    const text = await _tryGetResponseText(res);\n    return [text];\n  } catch (error) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to get text body from response', error);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n}\n\nfunction _getFetchRequestArgBody(fetchArgs = []) {\n  // We only support getting the body from the fetch options\n  if (fetchArgs.length !== 2 || typeof fetchArgs[1] !== 'object') {\n    return undefined;\n  }\n\n  return (fetchArgs[1] ).body;\n}\n\nfunction getAllHeaders(headers, allowedHeaders) {\n  const allHeaders = {};\n\n  allowedHeaders.forEach(header => {\n    if (headers.get(header)) {\n      allHeaders[header] = headers.get(header) ;\n    }\n  });\n\n  return allHeaders;\n}\n\nfunction getRequestHeaders(fetchArgs, allowedHeaders) {\n  if (fetchArgs.length === 1 && typeof fetchArgs[0] !== 'string') {\n    return getHeadersFromOptions(fetchArgs[0] , allowedHeaders);\n  }\n\n  if (fetchArgs.length === 2) {\n    return getHeadersFromOptions(fetchArgs[1] , allowedHeaders);\n  }\n\n  return {};\n}\n\nfunction getHeadersFromOptions(\n  input,\n  allowedHeaders,\n) {\n  if (!input) {\n    return {};\n  }\n\n  const headers = input.headers;\n\n  if (!headers) {\n    return {};\n  }\n\n  if (headers instanceof Headers) {\n    return getAllHeaders(headers, allowedHeaders);\n  }\n\n  // We do not support this, as it is not really documented (anymore?)\n  if (Array.isArray(headers)) {\n    return {};\n  }\n\n  return getAllowedHeaders(headers, allowedHeaders);\n}\n\nfunction _tryCloneResponse(response) {\n  try {\n    // We have to clone this, as the body can only be read once\n    return response.clone();\n  } catch (error) {\n    // this can throw if the response was already consumed before\n    DEBUG_BUILD && logger.warn('[Replay] Failed to clone response body', error);\n  }\n}\n\n/**\n * Get the response body of a fetch request, or timeout after 500ms.\n * Fetch can return a streaming body, that may not resolve (or not for a long time).\n * If that happens, we rather abort after a short time than keep waiting for this.\n */\nfunction _tryGetResponseText(response) {\n  return new Promise((resolve, reject) => {\n    const timeout = setTimeout(() => reject(new Error('Timeout while trying to read response body')), 500);\n\n    _getResponseText(response)\n      .then(\n        txt => resolve(txt),\n        reason => reject(reason),\n      )\n      .finally(() => clearTimeout(timeout));\n  });\n}\n\nasync function _getResponseText(response) {\n  // Force this to be a promise, just to be safe\n  // eslint-disable-next-line no-return-await\n  return await response.text();\n}\n\n/**\n * Capture an XHR breadcrumb to a replay.\n * This adds additional data (where approriate).\n */\nasync function captureXhrBreadcrumbToReplay(\n  breadcrumb,\n  hint,\n  options,\n) {\n  try {\n    const data = _prepareXhrData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.xhr', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    DEBUG_BUILD && logger.error('[Replay] Failed to capture xhr breadcrumb', error);\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nfunction enrichXhrBreadcrumb(\n  breadcrumb,\n  hint,\n  options,\n) {\n  const { xhr, input } = hint;\n\n  if (!xhr) {\n    return;\n  }\n\n  const reqSize = getBodySize(input, options.textEncoder);\n  const resSize = xhr.getResponseHeader('content-length')\n    ? parseContentLengthHeader(xhr.getResponseHeader('content-length'))\n    : _getBodySize(xhr.response, xhr.responseType, options.textEncoder);\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nfunction _prepareXhrData(\n  breadcrumb,\n  hint,\n  options,\n) {\n  const now = Date.now();\n  const { startTimestamp = now, endTimestamp = now, input, xhr } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  if (!url) {\n    return null;\n  }\n\n  if (!xhr || !urlMatches(url, options.networkDetailAllowUrls) || urlMatches(url, options.networkDetailDenyUrls)) {\n    const request = buildSkippedNetworkRequestOrResponse(requestBodySize);\n    const response = buildSkippedNetworkRequestOrResponse(responseBodySize);\n    return {\n      startTimestamp,\n      endTimestamp,\n      url,\n      method,\n      statusCode,\n      request,\n      response,\n    };\n  }\n\n  const xhrInfo = xhr[SENTRY_XHR_DATA_KEY];\n  const networkRequestHeaders = xhrInfo\n    ? getAllowedHeaders(xhrInfo.request_headers, options.networkRequestHeaders)\n    : {};\n  const networkResponseHeaders = getAllowedHeaders(getResponseHeaders(xhr), options.networkResponseHeaders);\n\n  const [requestBody, requestWarning] = options.networkCaptureBodies ? getBodyString(input) : [undefined];\n  const [responseBody, responseWarning] = options.networkCaptureBodies ? _getXhrResponseBody(xhr) : [undefined];\n\n  const request = buildNetworkRequestOrResponse(networkRequestHeaders, requestBodySize, requestBody);\n  const response = buildNetworkRequestOrResponse(networkResponseHeaders, responseBodySize, responseBody);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request: requestWarning ? mergeWarning(request, requestWarning) : request,\n    response: responseWarning ? mergeWarning(response, responseWarning) : response,\n  };\n}\n\nfunction getResponseHeaders(xhr) {\n  const headers = xhr.getAllResponseHeaders();\n\n  if (!headers) {\n    return {};\n  }\n\n  return headers.split('\\r\\n').reduce((acc, line) => {\n    const [key, value] = line.split(': ');\n    acc[key.toLowerCase()] = value;\n    return acc;\n  }, {});\n}\n\nfunction _getXhrResponseBody(xhr) {\n  // We collect errors that happen, but only log them if we can't get any response body\n  const errors = [];\n\n  try {\n    return [xhr.responseText];\n  } catch (e) {\n    errors.push(e);\n  }\n\n  // Try to manually parse the response body, if responseText fails\n  try {\n    return _parseXhrResponse(xhr.response, xhr.responseType);\n  } catch (e) {\n    errors.push(e);\n  }\n\n  DEBUG_BUILD && logger.warn('[Replay] Failed to get xhr response body', ...errors);\n\n  return [undefined];\n}\n\n/**\n * Get the string representation of the XHR response.\n * Based on MDN, these are the possible types of the response:\n * string\n * ArrayBuffer\n * Blob\n * Document\n * POJO\n *\n * Exported only for tests.\n */\nfunction _parseXhrResponse(\n  body,\n  responseType,\n) {\n  try {\n    if (typeof body === 'string') {\n      return [body];\n    }\n\n    if (body instanceof Document) {\n      return [body.body.outerHTML];\n    }\n\n    if (responseType === 'json' && body && typeof body === 'object') {\n      return [JSON.stringify(body)];\n    }\n\n    if (!body) {\n      return [undefined];\n    }\n  } catch (e2) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize body', body);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  DEBUG_BUILD && logger.info('[Replay] Skipping network body because of body type', body);\n\n  return [undefined, 'UNPARSEABLE_BODY_TYPE'];\n}\n\nfunction _getBodySize(\n  body,\n  responseType,\n  textEncoder,\n) {\n  try {\n    const bodyStr = responseType === 'json' && body && typeof body === 'object' ? JSON.stringify(body) : body;\n    return getBodySize(bodyStr, textEncoder);\n  } catch (e3) {\n    return undefined;\n  }\n}\n\n/**\n * This method does two things:\n * - It enriches the regular XHR/fetch breadcrumbs with request/response size data\n * - It captures the XHR/fetch breadcrumbs to the replay\n *   (enriching it with further data that is _not_ added to the regular breadcrumbs)\n */\nfunction handleNetworkBreadcrumbs(replay) {\n  const client = getClient();\n\n  try {\n    const textEncoder = new TextEncoder();\n\n    const {\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    } = replay.getOptions();\n\n    const options = {\n      replay,\n      textEncoder,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    };\n\n    if (client && client.on) {\n      client.on('beforeAddBreadcrumb', (breadcrumb, hint) => beforeAddNetworkBreadcrumb(options, breadcrumb, hint));\n    } else {\n      // Fallback behavior\n      addFetchInstrumentationHandler(handleFetchSpanListener(replay));\n      addXhrInstrumentationHandler(handleXhrSpanListener(replay));\n    }\n  } catch (e2) {\n    // Do nothing\n  }\n}\n\n/** just exported for tests */\nfunction beforeAddNetworkBreadcrumb(\n  options,\n  breadcrumb,\n  hint,\n) {\n  if (!breadcrumb.data) {\n    return;\n  }\n\n  try {\n    if (_isXhrBreadcrumb(breadcrumb) && _isXhrHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichXhrBreadcrumb(breadcrumb, hint, options);\n\n      // This call should not reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      captureXhrBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n\n    if (_isFetchBreadcrumb(breadcrumb) && _isFetchHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichFetchBreadcrumb(breadcrumb, hint, options);\n\n      // This call should not reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      captureFetchBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n  } catch (e) {\n    DEBUG_BUILD && logger.warn('Error when enriching network breadcrumb');\n  }\n}\n\nfunction _isXhrBreadcrumb(breadcrumb) {\n  return breadcrumb.category === 'xhr';\n}\n\nfunction _isFetchBreadcrumb(breadcrumb) {\n  return breadcrumb.category === 'fetch';\n}\n\nfunction _isXhrHint(hint) {\n  return hint && hint.xhr;\n}\n\nfunction _isFetchHint(hint) {\n  return hint && hint.response;\n}\n\nlet _LAST_BREADCRUMB = null;\n\nfunction isBreadcrumbWithCategory(breadcrumb) {\n  return !!breadcrumb.category;\n}\n\nconst handleScopeListener =\n  (replay) =>\n  (scope) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleScope(scope);\n\n    if (!result) {\n      return;\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n\n/**\n * An event handler to handle scope changes.\n */\nfunction handleScope(scope) {\n  // TODO (v8): Remove this guard. This was put in place because we introduced\n  // Scope.getLastBreadcrumb mid-v7 which caused incompatibilities with older SDKs.\n  // For now, we'll just return null if the method doesn't exist but we should eventually\n  // get rid of this guard.\n  const newBreadcrumb = scope.getLastBreadcrumb && scope.getLastBreadcrumb();\n\n  // Listener can be called when breadcrumbs have not changed, so we store the\n  // reference to the last crumb and only return a crumb if it has changed\n  if (_LAST_BREADCRUMB === newBreadcrumb || !newBreadcrumb) {\n    return null;\n  }\n\n  _LAST_BREADCRUMB = newBreadcrumb;\n\n  if (\n    !isBreadcrumbWithCategory(newBreadcrumb) ||\n    ['fetch', 'xhr', 'sentry.event', 'sentry.transaction'].includes(newBreadcrumb.category) ||\n    newBreadcrumb.category.startsWith('ui.')\n  ) {\n    return null;\n  }\n\n  if (newBreadcrumb.category === 'console') {\n    return normalizeConsoleBreadcrumb(newBreadcrumb);\n  }\n\n  return createBreadcrumb(newBreadcrumb);\n}\n\n/** exported for tests only */\nfunction normalizeConsoleBreadcrumb(\n  breadcrumb,\n) {\n  const args = breadcrumb.data && breadcrumb.data.arguments;\n\n  if (!Array.isArray(args) || args.length === 0) {\n    return createBreadcrumb(breadcrumb);\n  }\n\n  let isTruncated = false;\n\n  // Avoid giant args captures\n  const normalizedArgs = args.map(arg => {\n    if (!arg) {\n      return arg;\n    }\n    if (typeof arg === 'string') {\n      if (arg.length > CONSOLE_ARG_MAX_SIZE) {\n        isTruncated = true;\n        return `${arg.slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n      }\n\n      return arg;\n    }\n    if (typeof arg === 'object') {\n      try {\n        const normalizedArg = normalize(arg, 7);\n        const stringified = JSON.stringify(normalizedArg);\n        if (stringified.length > CONSOLE_ARG_MAX_SIZE) {\n          isTruncated = true;\n          // We use the pretty printed JSON string here as a base\n          return `${JSON.stringify(normalizedArg, null, 2).slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n        }\n        return normalizedArg;\n      } catch (e) {\n        // fall back to default\n      }\n    }\n\n    return arg;\n  });\n\n  return createBreadcrumb({\n    ...breadcrumb,\n    data: {\n      ...breadcrumb.data,\n      arguments: normalizedArgs,\n      ...(isTruncated ? { _meta: { warnings: ['CONSOLE_ARG_TRUNCATED'] } } : {}),\n    },\n  });\n}\n\n/**\n * Add global listeners that cannot be removed.\n */\nfunction addGlobalListeners(replay) {\n  // Listeners from core SDK //\n  const scope = getCurrentScope();\n  const client = getClient();\n\n  scope.addScopeListener(handleScopeListener(replay));\n  addClickKeypressInstrumentationHandler(handleDomListener(replay));\n  addHistoryInstrumentationHandler(handleHistorySpanListener(replay));\n  handleNetworkBreadcrumbs(replay);\n\n  // Tag all (non replay) events that get sent to Sentry with the current\n  // replay ID so that we can reference them later in the UI\n  const eventProcessor = handleGlobalEventListener(replay, !hasHooks(client));\n  if (client && client.addEventProcessor) {\n    client.addEventProcessor(eventProcessor);\n  } else {\n    addEventProcessor(eventProcessor);\n  }\n\n  // If a custom client has no hooks yet, we continue to use the \"old\" implementation\n  if (hasHooks(client)) {\n    client.on('beforeSendEvent', handleBeforeSendEvent(replay));\n    client.on('afterSendEvent', handleAfterSendEvent(replay));\n    client.on('createDsc', (dsc) => {\n      const replayId = replay.getSessionId();\n      // We do not want to set the DSC when in buffer mode, as that means the replay has not been sent (yet)\n      if (replayId && replay.isEnabled() && replay.recordingMode === 'session') {\n        // Ensure to check that the session is still active - it could have expired in the meanwhile\n        const isSessionActive = replay.checkAndHandleExpiredSession();\n        if (isSessionActive) {\n          dsc.replay_id = replayId;\n        }\n      }\n    });\n\n    client.on('startTransaction', transaction => {\n      replay.lastTransaction = transaction;\n    });\n\n    // We may be missing the initial startTransaction due to timing issues,\n    // so we capture it on finish again.\n    client.on('finishTransaction', transaction => {\n      replay.lastTransaction = transaction;\n    });\n\n    // We want to flush replay\n    client.on('beforeSendFeedback', (feedbackEvent, options) => {\n      const replayId = replay.getSessionId();\n      if (options && options.includeReplay && replay.isEnabled() && replayId) {\n        // This should never reject\n        if (feedbackEvent.contexts && feedbackEvent.contexts.feedback) {\n          feedbackEvent.contexts.feedback.replay_id = replayId;\n        }\n      }\n    });\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction hasHooks(client) {\n  return !!(client && client.on);\n}\n\n/**\n * Create a \"span\" for the total amount of memory being used by JS objects\n * (including v8 internal objects).\n */\nasync function addMemoryEntry(replay) {\n  // window.performance.memory is a non-standard API and doesn't work on all browsers, so we try-catch this\n  try {\n    return Promise.all(\n      createPerformanceSpans(replay, [\n        // @ts-expect-error memory doesn't exist on type Performance as the API is non-standard (we check that it exists above)\n        createMemoryEntry(WINDOW.performance.memory),\n      ]),\n    );\n  } catch (error) {\n    // Do nothing\n    return [];\n  }\n}\n\nfunction createMemoryEntry(memoryEntry) {\n  const { jsHeapSizeLimit, totalJSHeapSize, usedJSHeapSize } = memoryEntry;\n  // we don't want to use `getAbsoluteTime` because it adds the event time to the\n  // time origin, so we get the current timestamp instead\n  const time = Date.now() / 1000;\n  return {\n    type: 'memory',\n    name: 'memory',\n    start: time,\n    end: time,\n    data: {\n      memory: {\n        jsHeapSizeLimit,\n        totalJSHeapSize,\n        usedJSHeapSize,\n      },\n    },\n  };\n}\n\n/**\n * Heavily simplified debounce function based on lodash.debounce.\n *\n * This function takes a callback function (@param fun) and delays its invocation\n * by @param wait milliseconds. Optionally, a maxWait can be specified in @param options,\n * which ensures that the callback is invoked at least once after the specified max. wait time.\n *\n * @param func the function whose invocation is to be debounced\n * @param wait the minimum time until the function is invoked after it was called once\n * @param options the options object, which can contain the `maxWait` property\n *\n * @returns the debounced version of the function, which needs to be called at least once to start the\n *          debouncing process. Subsequent calls will reset the debouncing timer and, in case @paramfunc\n *          was already invoked in the meantime, return @param func's return value.\n *          The debounced function has two additional properties:\n *          - `flush`: Invokes the debounced function immediately and returns its return value\n *          - `cancel`: Cancels the debouncing process and resets the debouncing timer\n */\nfunction debounce(func, wait, options) {\n  let callbackReturnValue;\n\n  let timerId;\n  let maxTimerId;\n\n  const maxWait = options && options.maxWait ? Math.max(options.maxWait, wait) : 0;\n\n  function invokeFunc() {\n    cancelTimers();\n    callbackReturnValue = func();\n    return callbackReturnValue;\n  }\n\n  function cancelTimers() {\n    timerId !== undefined && clearTimeout(timerId);\n    maxTimerId !== undefined && clearTimeout(maxTimerId);\n    timerId = maxTimerId = undefined;\n  }\n\n  function flush() {\n    if (timerId !== undefined || maxTimerId !== undefined) {\n      return invokeFunc();\n    }\n    return callbackReturnValue;\n  }\n\n  function debounced() {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(invokeFunc, wait);\n\n    if (maxWait && maxTimerId === undefined) {\n      maxTimerId = setTimeout(invokeFunc, maxWait);\n    }\n\n    return callbackReturnValue;\n  }\n\n  debounced.cancel = cancelTimers;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Handler for recording events.\n *\n * Adds to event buffer, and has varying flushing behaviors if the event was a checkout.\n */\nfunction getHandleRecordingEmit(replay) {\n  let hadFirstEvent = false;\n\n  return (event, _isCheckout) => {\n    // If this is false, it means session is expired, create and a new session and wait for checkout\n    if (!replay.checkAndHandleExpiredSession()) {\n      DEBUG_BUILD && logger.warn('[Replay] Received replay event after session expired.');\n\n      return;\n    }\n\n    // `_isCheckout` is only set when the checkout is due to `checkoutEveryNms`\n    // We also want to treat the first event as a checkout, so we handle this specifically here\n    const isCheckout = _isCheckout || !hadFirstEvent;\n    hadFirstEvent = true;\n\n    if (replay.clickDetector) {\n      updateClickDetectorForRecordingEvent(replay.clickDetector, event);\n    }\n\n    // The handler returns `true` if we do not want to trigger debounced flush, `false` if we want to debounce flush.\n    replay.addUpdate(() => {\n      // The session is always started immediately on pageload/init, but for\n      // error-only replays, it should reflect the most recent checkout\n      // when an error occurs. Clear any state that happens before this current\n      // checkout. This needs to happen before `addEvent()` which updates state\n      // dependent on this reset.\n      if (replay.recordingMode === 'buffer' && isCheckout) {\n        replay.setInitialState();\n      }\n\n      // If the event is not added (e.g. due to being paused, disabled, or out of the max replay duration),\n      // Skip all further steps\n      if (!addEventSync(replay, event, isCheckout)) {\n        // Return true to skip scheduling a debounced flush\n        return true;\n      }\n\n      // Different behavior for full snapshots (type=2), ignore other event types\n      // See https://github.com/rrweb-io/rrweb/blob/d8f9290ca496712aa1e7d472549480c4e7876594/packages/rrweb/src/types.ts#L16\n      if (!isCheckout) {\n        return false;\n      }\n\n      // Additionally, create a meta event that will capture certain SDK settings.\n      // In order to handle buffer mode, this needs to either be done when we\n      // receive checkout events or at flush time.\n      //\n      // `isCheckout` is always true, but want to be explicit that it should\n      // only be added for checkouts\n      addSettingsEvent(replay, isCheckout);\n\n      // If there is a previousSessionId after a full snapshot occurs, then\n      // the replay session was started due to session expiration. The new session\n      // is started before triggering a new checkout and contains the id\n      // of the previous session. Do not immediately flush in this case\n      // to avoid capturing only the checkout and instead the replay will\n      // be captured if they perform any follow-up actions.\n      if (replay.session && replay.session.previousSessionId) {\n        return true;\n      }\n\n      // When in buffer mode, make sure we adjust the session started date to the current earliest event of the buffer\n      // this should usually be the timestamp of the checkout event, but to be safe...\n      if (replay.recordingMode === 'buffer' && replay.session && replay.eventBuffer) {\n        const earliestEvent = replay.eventBuffer.getEarliestTimestamp();\n        if (earliestEvent) {\n          logInfo(\n            `[Replay] Updating session start time to earliest event in buffer to ${new Date(earliestEvent)}`,\n            replay.getOptions()._experiments.traceInternals,\n          );\n\n          replay.session.started = earliestEvent;\n\n          if (replay.getOptions().stickySession) {\n            saveSession(replay.session);\n          }\n        }\n      }\n\n      if (replay.recordingMode === 'session') {\n        // If the full snapshot is due to an initial load, we will not have\n        // a previous session ID. In this case, we want to buffer events\n        // for a set amount of time before flushing. This can help avoid\n        // capturing replays of users that immediately close the window.\n\n        // This should never reject\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        void replay.flush();\n      }\n\n      return true;\n    });\n  };\n}\n\n/**\n * Exported for tests\n */\nfunction createOptionsEvent(replay) {\n  const options = replay.getOptions();\n  return {\n    type: EventType.Custom,\n    timestamp: Date.now(),\n    data: {\n      tag: 'options',\n      payload: {\n        shouldRecordCanvas: replay.isRecordingCanvas(),\n        sessionSampleRate: options.sessionSampleRate,\n        errorSampleRate: options.errorSampleRate,\n        useCompressionOption: options.useCompression,\n        blockAllMedia: options.blockAllMedia,\n        maskAllText: options.maskAllText,\n        maskAllInputs: options.maskAllInputs,\n        useCompression: replay.eventBuffer ? replay.eventBuffer.type === 'worker' : false,\n        networkDetailHasUrls: options.networkDetailAllowUrls.length > 0,\n        networkCaptureBodies: options.networkCaptureBodies,\n        networkRequestHasHeaders: options.networkRequestHeaders.length > 0,\n        networkResponseHasHeaders: options.networkResponseHeaders.length > 0,\n      },\n    },\n  };\n}\n\n/**\n * Add a \"meta\" event that contains a simplified view on current configuration\n * options. This should only be included on the first segment of a recording.\n */\nfunction addSettingsEvent(replay, isCheckout) {\n  // Only need to add this event when sending the first segment\n  if (!isCheckout || !replay.session || replay.session.segmentId !== 0) {\n    return;\n  }\n\n  addEventSync(replay, createOptionsEvent(replay), false);\n}\n\n/**\n * Create a replay envelope ready to be sent.\n * This includes both the replay event, as well as the recording data.\n */\nfunction createReplayEnvelope(\n  replayEvent,\n  recordingData,\n  dsn,\n  tunnel,\n) {\n  return createEnvelope(\n    createEventEnvelopeHeaders(replayEvent, getSdkMetadataForEnvelopeHeader(replayEvent), tunnel, dsn),\n    [\n      [{ type: 'replay_event' }, replayEvent],\n      [\n        {\n          type: 'replay_recording',\n          // If string then we need to encode to UTF8, otherwise will have\n          // wrong size. TextEncoder has similar browser support to\n          // MutationObserver, although it does not accept IE11.\n          length:\n            typeof recordingData === 'string' ? new TextEncoder().encode(recordingData).length : recordingData.length,\n        },\n        recordingData,\n      ],\n    ],\n  );\n}\n\n/**\n * Prepare the recording data ready to be sent.\n */\nfunction prepareRecordingData({\n  recordingData,\n  headers,\n}\n\n) {\n  let payloadWithSequence;\n\n  // XXX: newline is needed to separate sequence id from events\n  const replayHeaders = `${JSON.stringify(headers)}\n`;\n\n  if (typeof recordingData === 'string') {\n    payloadWithSequence = `${replayHeaders}${recordingData}`;\n  } else {\n    const enc = new TextEncoder();\n    // XXX: newline is needed to separate sequence id from events\n    const sequence = enc.encode(replayHeaders);\n    // Merge the two Uint8Arrays\n    payloadWithSequence = new Uint8Array(sequence.length + recordingData.length);\n    payloadWithSequence.set(sequence);\n    payloadWithSequence.set(recordingData, sequence.length);\n  }\n\n  return payloadWithSequence;\n}\n\n/**\n * Prepare a replay event & enrich it with the SDK metadata.\n */\nasync function prepareReplayEvent({\n  client,\n  scope,\n  replayId: event_id,\n  event,\n}\n\n) {\n  const integrations =\n    typeof client._integrations === 'object' && client._integrations !== null && !Array.isArray(client._integrations)\n      ? Object.keys(client._integrations)\n      : undefined;\n\n  const eventHint = { event_id, integrations };\n\n  if (client.emit) {\n    client.emit('preprocessEvent', event, eventHint);\n  }\n\n  const preparedEvent = (await prepareEvent(\n    client.getOptions(),\n    event,\n    eventHint,\n    scope,\n    client,\n    getIsolationScope(),\n  )) ;\n\n  // If e.g. a global event processor returned null\n  if (!preparedEvent) {\n    return null;\n  }\n\n  // This normally happens in browser client \"_prepareEvent\"\n  // but since we do not use this private method from the client, but rather the plain import\n  // we need to do this manually.\n  preparedEvent.platform = preparedEvent.platform || 'javascript';\n\n  // extract the SDK name because `client._prepareEvent` doesn't add it to the event\n  const metadata = client.getSdkMetadata && client.getSdkMetadata();\n  const { name, version } = (metadata && metadata.sdk) || {};\n\n  preparedEvent.sdk = {\n    ...preparedEvent.sdk,\n    name: name || 'sentry.javascript.unknown',\n    version: version || '0.0.0',\n  };\n\n  return preparedEvent;\n}\n\n/**\n * Send replay attachment using `fetch()`\n */\nasync function sendReplayRequest({\n  recordingData,\n  replayId,\n  segmentId: segment_id,\n  eventContext,\n  timestamp,\n  session,\n}) {\n  const preparedRecordingData = prepareRecordingData({\n    recordingData,\n    headers: {\n      segment_id,\n    },\n  });\n\n  const { urls, errorIds, traceIds, initialTimestamp } = eventContext;\n\n  const client = getClient();\n  const scope = getCurrentScope();\n  const transport = client && client.getTransport();\n  const dsn = client && client.getDsn();\n\n  if (!client || !transport || !dsn || !session.sampled) {\n    return;\n  }\n\n  const baseEvent = {\n    type: REPLAY_EVENT_NAME,\n    replay_start_timestamp: initialTimestamp / 1000,\n    timestamp: timestamp / 1000,\n    error_ids: errorIds,\n    trace_ids: traceIds,\n    urls,\n    replay_id: replayId,\n    segment_id,\n    replay_type: session.sampled,\n  };\n\n  const replayEvent = await prepareReplayEvent({ scope, client, replayId, event: baseEvent });\n\n  if (!replayEvent) {\n    // Taken from baseclient's `_processEvent` method, where this is handled for errors/transactions\n    client.recordDroppedEvent('event_processor', 'replay', baseEvent);\n    logInfo('An event processor returned `null`, will not send event.');\n    return;\n  }\n\n  /*\n  For reference, the fully built event looks something like this:\n  {\n      \"type\": \"replay_event\",\n      \"timestamp\": 1670837008.634,\n      \"error_ids\": [\n          \"errorId\"\n      ],\n      \"trace_ids\": [\n          \"traceId\"\n      ],\n      \"urls\": [\n          \"https://example.com\"\n      ],\n      \"replay_id\": \"eventId\",\n      \"segment_id\": 3,\n      \"replay_type\": \"error\",\n      \"platform\": \"javascript\",\n      \"event_id\": \"eventId\",\n      \"environment\": \"production\",\n      \"sdk\": {\n          \"integrations\": [\n              \"BrowserTracing\",\n              \"Replay\"\n          ],\n          \"name\": \"sentry.javascript.browser\",\n          \"version\": \"7.25.0\"\n      },\n      \"sdkProcessingMetadata\": {},\n      \"contexts\": {\n      },\n  }\n  */\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete replayEvent.sdkProcessingMetadata;\n\n  const envelope = createReplayEnvelope(replayEvent, preparedRecordingData, dsn, client.getOptions().tunnel);\n\n  let response;\n\n  try {\n    response = await transport.send(envelope);\n  } catch (err) {\n    const error = new Error(UNABLE_TO_SEND_REPLAY);\n\n    try {\n      // In case browsers don't allow this property to be writable\n      // @ts-expect-error This needs lib es2022 and newer\n      error.cause = err;\n    } catch (e) {\n      // nothing to do\n    }\n    throw error;\n  }\n\n  // TODO (v8): we can remove this guard once transport.send's type signature doesn't include void anymore\n  if (!response) {\n    return response;\n  }\n\n  // If the status code is invalid, we want to immediately stop & not retry\n  if (typeof response.statusCode === 'number' && (response.statusCode < 200 || response.statusCode >= 300)) {\n    throw new TransportStatusCodeError(response.statusCode);\n  }\n\n  const rateLimits = updateRateLimits({}, response);\n  if (isRateLimited(rateLimits, 'replay')) {\n    throw new RateLimitError(rateLimits);\n  }\n\n  return response;\n}\n\n/**\n * This error indicates that the transport returned an invalid status code.\n */\nclass TransportStatusCodeError extends Error {\n   constructor(statusCode) {\n    super(`Transport returned status code ${statusCode}`);\n  }\n}\n\n/**\n * This error indicates that we hit a rate limit API error.\n */\nclass RateLimitError extends Error {\n\n   constructor(rateLimits) {\n    super('Rate limit hit');\n    this.rateLimits = rateLimits;\n  }\n}\n\n/**\n * Finalize and send the current replay event to Sentry\n */\nasync function sendReplay(\n  replayData,\n  retryConfig = {\n    count: 0,\n    interval: RETRY_BASE_INTERVAL,\n  },\n) {\n  const { recordingData, options } = replayData;\n\n  // short circuit if there's no events to upload (this shouldn't happen as _runFlush makes this check)\n  if (!recordingData.length) {\n    return;\n  }\n\n  try {\n    await sendReplayRequest(replayData);\n    return true;\n  } catch (err) {\n    if (err instanceof TransportStatusCodeError || err instanceof RateLimitError) {\n      throw err;\n    }\n\n    // Capture error for every failed replay\n    setContext('Replays', {\n      _retryCount: retryConfig.count,\n    });\n\n    if (DEBUG_BUILD && options._experiments && options._experiments.captureExceptions) {\n      captureException(err);\n    }\n\n    // If an error happened here, it's likely that uploading the attachment\n    // failed, we'll can retry with the same events payload\n    if (retryConfig.count >= RETRY_MAX_COUNT) {\n      const error = new Error(`${UNABLE_TO_SEND_REPLAY} - max retries exceeded`);\n\n      try {\n        // In case browsers don't allow this property to be writable\n        // @ts-expect-error This needs lib es2022 and newer\n        error.cause = err;\n      } catch (e) {\n        // nothing to do\n      }\n\n      throw error;\n    }\n\n    // will retry in intervals of 5, 10, 30\n    retryConfig.interval *= ++retryConfig.count;\n\n    return new Promise((resolve, reject) => {\n      setTimeout(async () => {\n        try {\n          await sendReplay(replayData, retryConfig);\n          resolve(true);\n        } catch (err) {\n          reject(err);\n        }\n      }, retryConfig.interval);\n    });\n  }\n}\n\nconst THROTTLED = '__THROTTLED';\nconst SKIPPED = '__SKIPPED';\n\n/**\n * Create a throttled function off a given function.\n * When calling the throttled function, it will call the original function only\n * if it hasn't been called more than `maxCount` times in the last `durationSeconds`.\n *\n * Returns `THROTTLED` if throttled for the first time, after that `SKIPPED`,\n * or else the return value of the original function.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction throttle(\n  fn,\n  maxCount,\n  durationSeconds,\n) {\n  const counter = new Map();\n\n  const _cleanup = (now) => {\n    const threshold = now - durationSeconds;\n    counter.forEach((_value, key) => {\n      if (key < threshold) {\n        counter.delete(key);\n      }\n    });\n  };\n\n  const _getTotalCount = () => {\n    return [...counter.values()].reduce((a, b) => a + b, 0);\n  };\n\n  let isThrottled = false;\n\n  return (...rest) => {\n    // Date in second-precision, which we use as basis for the throttling\n    const now = Math.floor(Date.now() / 1000);\n\n    // First, make sure to delete any old entries\n    _cleanup(now);\n\n    // If already over limit, do nothing\n    if (_getTotalCount() >= maxCount) {\n      const wasThrottled = isThrottled;\n      isThrottled = true;\n      return wasThrottled ? SKIPPED : THROTTLED;\n    }\n\n    isThrottled = false;\n    const count = counter.get(now) || 0;\n    counter.set(now, count + 1);\n\n    return fn(...rest);\n  };\n}\n\n/* eslint-disable max-lines */ // TODO: We might want to split this file up\n\n/**\n * The main replay container class, which holds all the state and methods for recording and sending replays.\n */\nclass ReplayContainer  {\n\n  /**\n   * Recording can happen in one of three modes:\n   *   - session: Record the whole session, sending it continuously\n   *   - buffer: Always keep the last 60s of recording, requires:\n   *     - having replaysOnErrorSampleRate > 0 to capture replay when an error occurs\n   *     - or calling `flush()` to send the replay\n   */\n\n  /**\n   * The current or last active transcation.\n   * This is only available when performance is enabled.\n   */\n\n  /**\n   * These are here so we can overwrite them in tests etc.\n   * @hidden\n   */\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n\n  /**\n   * Timestamp of the last user activity. This lives across sessions.\n   */\n\n  /**\n   * Is the integration currently active?\n   */\n\n  /**\n   * Paused is a state where:\n   * - DOM Recording is not listening at all\n   * - Nothing will be added to event buffer (e.g. core SDK events)\n   */\n\n  /**\n   * Have we attached listeners to the core SDK?\n   * Note we have to track this as there is no way to remove instrumentation handlers.\n   */\n\n  /**\n   * Function to stop recording\n   */\n\n  /**\n   * Internal use for canvas recording options\n   */\n\n   constructor({\n    options,\n    recordingOptions,\n  }\n\n) {ReplayContainer.prototype.__init.call(this);ReplayContainer.prototype.__init2.call(this);ReplayContainer.prototype.__init3.call(this);ReplayContainer.prototype.__init4.call(this);ReplayContainer.prototype.__init5.call(this);ReplayContainer.prototype.__init6.call(this);\n    this.eventBuffer = null;\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n    this.recordingMode = 'session';\n    this.timeouts = {\n      sessionIdlePause: SESSION_IDLE_PAUSE_DURATION,\n      sessionIdleExpire: SESSION_IDLE_EXPIRE_DURATION,\n    } ;\n    this._lastActivity = Date.now();\n    this._isEnabled = false;\n    this._isPaused = false;\n    this._hasInitializedCoreListeners = false;\n    this._context = {\n      errorIds: new Set(),\n      traceIds: new Set(),\n      urls: [],\n      initialTimestamp: Date.now(),\n      initialUrl: '',\n    };\n\n    this._recordingOptions = recordingOptions;\n    this._options = options;\n\n    this._debouncedFlush = debounce(() => this._flush(), this._options.flushMinDelay, {\n      maxWait: this._options.flushMaxDelay,\n    });\n\n    this._throttledAddEvent = throttle(\n      (event, isCheckout) => addEvent(this, event, isCheckout),\n      // Max 300 events...\n      300,\n      // ... per 5s\n      5,\n    );\n\n    const { slowClickTimeout, slowClickIgnoreSelectors } = this.getOptions();\n\n    const slowClickConfig = slowClickTimeout\n      ? {\n          threshold: Math.min(SLOW_CLICK_THRESHOLD, slowClickTimeout),\n          timeout: slowClickTimeout,\n          scrollTimeout: SLOW_CLICK_SCROLL_TIMEOUT,\n          ignoreSelector: slowClickIgnoreSelectors ? slowClickIgnoreSelectors.join(',') : '',\n        }\n      : undefined;\n\n    if (slowClickConfig) {\n      this.clickDetector = new ClickDetector(this, slowClickConfig);\n    }\n  }\n\n  /** Get the event context. */\n   getContext() {\n    return this._context;\n  }\n\n  /** If recording is currently enabled. */\n   isEnabled() {\n    return this._isEnabled;\n  }\n\n  /** If recording is currently paused. */\n   isPaused() {\n    return this._isPaused;\n  }\n\n  /**\n   * Determine if canvas recording is enabled\n   */\n   isRecordingCanvas() {\n    return Boolean(this._canvas);\n  }\n\n  /** Get the replay integration options. */\n   getOptions() {\n    return this._options;\n  }\n\n  /**\n   * Initializes the plugin based on sampling configuration. Should not be\n   * called outside of constructor.\n   */\n   initializeSampling(previousSessionId) {\n    const { errorSampleRate, sessionSampleRate } = this._options;\n\n    // If neither sample rate is > 0, then do nothing - user will need to call one of\n    // `start()` or `startBuffering` themselves.\n    if (errorSampleRate <= 0 && sessionSampleRate <= 0) {\n      return;\n    }\n\n    // Otherwise if there is _any_ sample rate set, try to load an existing\n    // session, or create a new one.\n    this._initializeSessionForSampling(previousSessionId);\n\n    if (!this.session) {\n      // This should not happen, something wrong has occurred\n      this._handleException(new Error('Unable to initialize and create session'));\n      return;\n    }\n\n    if (this.session.sampled === false) {\n      // This should only occur if `errorSampleRate` is 0 and was unsampled for\n      // session-based replay. In this case there is nothing to do.\n      return;\n    }\n\n    // If segmentId > 0, it means we've previously already captured this session\n    // In this case, we still want to continue in `session` recording mode\n    this.recordingMode = this.session.sampled === 'buffer' && this.session.segmentId === 0 ? 'buffer' : 'session';\n\n    logInfoNextTick(\n      `[Replay] Starting replay in ${this.recordingMode} mode`,\n      this._options._experiments.traceInternals,\n    );\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will throw an error if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * _performanceObserver, Recording, Sentry SDK, etc)\n   */\n   start() {\n    if (this._isEnabled && this.recordingMode === 'session') {\n      throw new Error('Replay recording is already in progress');\n    }\n\n    if (this._isEnabled && this.recordingMode === 'buffer') {\n      throw new Error('Replay buffering is in progress, call `flush()` to save the replay');\n    }\n\n    logInfoNextTick('[Replay] Starting replay in session mode', this._options._experiments.traceInternals);\n\n    const session = loadOrCreateSession(\n      {\n        maxReplayDuration: this._options.maxReplayDuration,\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        traceInternals: this._options._experiments.traceInternals,\n      },\n      {\n        stickySession: this._options.stickySession,\n        // This is intentional: create a new session-based replay when calling `start()`\n        sessionSampleRate: 1,\n        allowBuffering: false,\n      },\n    );\n\n    this.session = session;\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, an error occurs.\n   */\n   startBuffering() {\n    if (this._isEnabled) {\n      throw new Error('Replay recording is already in progress');\n    }\n\n    logInfoNextTick('[Replay] Starting replay in buffer mode', this._options._experiments.traceInternals);\n\n    const session = loadOrCreateSession(\n      {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n        traceInternals: this._options._experiments.traceInternals,\n      },\n      {\n        stickySession: this._options.stickySession,\n        sessionSampleRate: 0,\n        allowBuffering: true,\n      },\n    );\n\n    this.session = session;\n\n    this.recordingMode = 'buffer';\n    this._initializeRecording();\n  }\n\n  /**\n   * Start recording.\n   *\n   * Note that this will cause a new DOM checkout\n   */\n   startRecording() {\n    try {\n      const canvasOptions = this._canvas;\n\n      this._stopRecording = record({\n        ...this._recordingOptions,\n        // When running in error sampling mode, we need to overwrite `checkoutEveryNms`\n        // Without this, it would record forever, until an error happens, which we don't want\n        // instead, we'll always keep the last 60 seconds of replay before an error happened\n        ...(this.recordingMode === 'buffer' && { checkoutEveryNms: BUFFER_CHECKOUT_TIME }),\n        emit: getHandleRecordingEmit(this),\n        onMutation: this._onMutationHandler,\n        ...(canvasOptions\n          ? {\n              recordCanvas: canvasOptions.recordCanvas,\n              getCanvasManager: canvasOptions.getCanvasManager,\n              sampling: canvasOptions.sampling,\n              dataURLOptions: canvasOptions.dataURLOptions,\n            }\n          : {}),\n      });\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Stops the recording, if it was running.\n   *\n   * Returns true if it was previously stopped, or is now stopped,\n   * otherwise false.\n   */\n   stopRecording() {\n    try {\n      if (this._stopRecording) {\n        this._stopRecording();\n        this._stopRecording = undefined;\n      }\n\n      return true;\n    } catch (err) {\n      this._handleException(err);\n      return false;\n    }\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n   async stop({ forceFlush = false, reason } = {}) {\n    if (!this._isEnabled) {\n      return;\n    }\n\n    // We can't move `_isEnabled` after awaiting a flush, otherwise we can\n    // enter into an infinite loop when `stop()` is called while flushing.\n    this._isEnabled = false;\n\n    try {\n      logInfo(\n        `[Replay] Stopping Replay${reason ? ` triggered by ${reason}` : ''}`,\n        this._options._experiments.traceInternals,\n      );\n\n      this._removeListeners();\n      this.stopRecording();\n\n      this._debouncedFlush.cancel();\n      // See comment above re: `_isEnabled`, we \"force\" a flush, ignoring the\n      // `_isEnabled` state of the plugin since it was disabled above.\n      if (forceFlush) {\n        await this._flush({ force: true });\n      }\n\n      // After flush, destroy event buffer\n      this.eventBuffer && this.eventBuffer.destroy();\n      this.eventBuffer = null;\n\n      // Clear session from session storage, note this means if a new session\n      // is started after, it will not have `previousSessionId`\n      clearSession(this);\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Pause some replay functionality. See comments for `_isPaused`.\n   * This differs from stop as this only stops DOM recording, it is\n   * not as thorough of a shutdown as `stop()`.\n   */\n   pause() {\n    if (this._isPaused) {\n      return;\n    }\n\n    this._isPaused = true;\n    this.stopRecording();\n\n    logInfo('[Replay] Pausing replay', this._options._experiments.traceInternals);\n  }\n\n  /**\n   * Resumes recording, see notes for `pause().\n   *\n   * Note that calling `startRecording()` here will cause a\n   * new DOM checkout.`\n   */\n   resume() {\n    if (!this._isPaused || !this._checkSession()) {\n      return;\n    }\n\n    this._isPaused = false;\n    this.startRecording();\n\n    logInfo('[Replay] Resuming replay', this._options._experiments.traceInternals);\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n   async sendBufferedReplayOrFlush({ continueRecording = true } = {}) {\n    if (this.recordingMode === 'session') {\n      return this.flushImmediate();\n    }\n\n    const activityTime = Date.now();\n\n    logInfo('[Replay] Converting buffer to session', this._options._experiments.traceInternals);\n\n    // Allow flush to complete before resuming as a session recording, otherwise\n    // the checkout from `startRecording` may be included in the payload.\n    // Prefer to keep the error replay as a separate (and smaller) segment\n    // than the session replay.\n    await this.flushImmediate();\n\n    const hasStoppedRecording = this.stopRecording();\n\n    if (!continueRecording || !hasStoppedRecording) {\n      return;\n    }\n\n    // To avoid race conditions where this is called multiple times, we check here again that we are still buffering\n    if ((this.recordingMode ) === 'session') {\n      return;\n    }\n\n    // Re-start recording in session-mode\n    this.recordingMode = 'session';\n\n    // Once this session ends, we do not want to refresh it\n    if (this.session) {\n      this._updateUserActivity(activityTime);\n      this._updateSessionActivity(activityTime);\n      this._maybeSaveSession();\n    }\n\n    this.startRecording();\n  }\n\n  /**\n   * We want to batch uploads of replay events. Save events only if\n   * `<flushMinDelay>` milliseconds have elapsed since the last event\n   * *OR* if `<flushMaxDelay>` milliseconds have elapsed.\n   *\n   * Accepts a callback to perform side-effects and returns true to stop batch\n   * processing and hand back control to caller.\n   */\n   addUpdate(cb) {\n    // We need to always run `cb` (e.g. in the case of `this.recordingMode == 'buffer'`)\n    const cbResult = cb();\n\n    // If this option is turned on then we will only want to call `flush`\n    // explicitly\n    if (this.recordingMode === 'buffer') {\n      return;\n    }\n\n    // If callback is true, we do not want to continue with flushing -- the\n    // caller will need to handle it.\n    if (cbResult === true) {\n      return;\n    }\n\n    // addUpdate is called quite frequently - use _debouncedFlush so that it\n    // respects the flush delays and does not flush immediately\n    this._debouncedFlush();\n  }\n\n  /**\n   * Updates the user activity timestamp and resumes recording. This should be\n   * called in an event handler for a user action that we consider as the user\n   * being \"active\" (e.g. a mouse click).\n   */\n   triggerUserActivity() {\n    this._updateUserActivity();\n\n    // This case means that recording was once stopped due to inactivity.\n    // Ensure that recording is resumed.\n    if (!this._stopRecording) {\n      // Create a new session, otherwise when the user action is flushed, it\n      // will get rejected due to an expired session.\n      if (!this._checkSession()) {\n        return;\n      }\n\n      // Note: This will cause a new DOM checkout\n      this.resume();\n      return;\n    }\n\n    // Otherwise... recording was never suspended, continue as normalish\n    this.checkAndHandleExpiredSession();\n\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Updates the user activity timestamp *without* resuming\n   * recording. Some user events (e.g. keydown) can be create\n   * low-value replays that only contain the keypress as a\n   * breadcrumb. Instead this would require other events to\n   * create a new replay after a session has expired.\n   */\n   updateUserActivity() {\n    this._updateUserActivity();\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Only flush if `this.recordingMode === 'session'`\n   */\n   conditionalFlush() {\n    if (this.recordingMode === 'buffer') {\n      return Promise.resolve();\n    }\n\n    return this.flushImmediate();\n  }\n\n  /**\n   * Flush using debounce flush\n   */\n   flush() {\n    return this._debouncedFlush() ;\n  }\n\n  /**\n   * Always flush via `_debouncedFlush` so that we do not have flushes triggered\n   * from calling both `flush` and `_debouncedFlush`. Otherwise, there could be\n   * cases of mulitple flushes happening closely together.\n   */\n   flushImmediate() {\n    this._debouncedFlush();\n    // `.flush` is provided by the debounced function, analogously to lodash.debounce\n    return this._debouncedFlush.flush() ;\n  }\n\n  /**\n   * Cancels queued up flushes.\n   */\n   cancelFlush() {\n    this._debouncedFlush.cancel();\n  }\n\n  /** Get the current sesion (=replay) ID */\n   getSessionId() {\n    return this.session && this.session.id;\n  }\n\n  /**\n   * Checks if recording should be stopped due to user inactivity. Otherwise\n   * check if session is expired and create a new session if so. Triggers a new\n   * full snapshot on new session.\n   *\n   * Returns true if session is not expired, false otherwise.\n   * @hidden\n   */\n   checkAndHandleExpiredSession() {\n    // Prevent starting a new session if the last user activity is older than\n    // SESSION_IDLE_PAUSE_DURATION. Otherwise non-user activity can trigger a new\n    // session+recording. This creates noisy replays that do not have much\n    // content in them.\n    if (\n      this._lastActivity &&\n      isExpired(this._lastActivity, this.timeouts.sessionIdlePause) &&\n      this.session &&\n      this.session.sampled === 'session'\n    ) {\n      // Pause recording only for session-based replays. Otherwise, resuming\n      // will create a new replay and will conflict with users who only choose\n      // to record error-based replays only. (e.g. the resumed replay will not\n      // contain a reference to an error)\n      this.pause();\n      return;\n    }\n\n    // --- There is recent user activity --- //\n    // This will create a new session if expired, based on expiry length\n    if (!this._checkSession()) {\n      // Check session handles the refreshing itself\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Capture some initial state that can change throughout the lifespan of the\n   * replay. This is required because otherwise they would be captured at the\n   * first flush.\n   */\n   setInitialState() {\n    const urlPath = `${WINDOW.location.pathname}${WINDOW.location.hash}${WINDOW.location.search}`;\n    const url = `${WINDOW.location.origin}${urlPath}`;\n\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n\n    // Reset _context as well\n    this._clearContext();\n\n    this._context.initialUrl = url;\n    this._context.initialTimestamp = Date.now();\n    this._context.urls.push(url);\n  }\n\n  /**\n   * Add a breadcrumb event, that may be throttled.\n   * If it was throttled, we add a custom breadcrumb to indicate that.\n   */\n   throttledAddEvent(\n    event,\n    isCheckout,\n  ) {\n    const res = this._throttledAddEvent(event, isCheckout);\n\n    // If this is THROTTLED, it means we have throttled the event for the first time\n    // In this case, we want to add a breadcrumb indicating that something was skipped\n    if (res === THROTTLED) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.throttled',\n      });\n\n      this.addUpdate(() => {\n        // Return `false` if the event _was_ added, as that means we schedule a flush\n        return !addEventSync(this, {\n          type: ReplayEventTypeCustom,\n          timestamp: breadcrumb.timestamp || 0,\n          data: {\n            tag: 'breadcrumb',\n            payload: breadcrumb,\n            metric: true,\n          },\n        });\n      });\n    }\n\n    return res;\n  }\n\n  /**\n   * This will get the parametrized route name of the current page.\n   * This is only available if performance is enabled, and if an instrumented router is used.\n   */\n   getCurrentRoute() {\n    // eslint-disable-next-line deprecation/deprecation\n    const lastTransaction = this.lastTransaction || getCurrentScope().getTransaction();\n\n    const attributes = (lastTransaction && spanToJSON(lastTransaction).data) || {};\n    const source = attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n    if (!lastTransaction || !source || !['route', 'custom'].includes(source)) {\n      return undefined;\n    }\n\n    return spanToJSON(lastTransaction).description;\n  }\n\n  /**\n   * Initialize and start all listeners to varying events (DOM,\n   * Performance Observer, Recording, Sentry SDK, etc)\n   */\n   _initializeRecording() {\n    this.setInitialState();\n\n    // this method is generally called on page load or manually - in both cases\n    // we should treat it as an activity\n    this._updateSessionActivity();\n\n    this.eventBuffer = createEventBuffer({\n      useCompression: this._options.useCompression,\n      workerUrl: this._options.workerUrl,\n    });\n\n    this._removeListeners();\n    this._addListeners();\n\n    // Need to set as enabled before we start recording, as `record()` can trigger a flush with a new checkout\n    this._isEnabled = true;\n    this._isPaused = false;\n\n    this.startRecording();\n  }\n\n  /** A wrapper to conditionally capture exceptions. */\n   _handleException(error) {\n    DEBUG_BUILD && logger.error('[Replay]', error);\n\n    if (DEBUG_BUILD && this._options._experiments && this._options._experiments.captureExceptions) {\n      captureException(error);\n    }\n  }\n\n  /**\n   * Loads (or refreshes) the current session.\n   */\n   _initializeSessionForSampling(previousSessionId) {\n    // Whenever there is _any_ error sample rate, we always allow buffering\n    // Because we decide on sampling when an error occurs, we need to buffer at all times if sampling for errors\n    const allowBuffering = this._options.errorSampleRate > 0;\n\n    const session = loadOrCreateSession(\n      {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n        traceInternals: this._options._experiments.traceInternals,\n        previousSessionId,\n      },\n      {\n        stickySession: this._options.stickySession,\n        sessionSampleRate: this._options.sessionSampleRate,\n        allowBuffering,\n      },\n    );\n\n    this.session = session;\n  }\n\n  /**\n   * Checks and potentially refreshes the current session.\n   * Returns false if session is not recorded.\n   */\n   _checkSession() {\n    // If there is no session yet, we do not want to refresh anything\n    // This should generally not happen, but to be safe....\n    if (!this.session) {\n      return false;\n    }\n\n    const currentSession = this.session;\n\n    if (\n      shouldRefreshSession(currentSession, {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n      })\n    ) {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this._refreshSession(currentSession);\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Refresh a session with a new one.\n   * This stops the current session (without forcing a flush, as that would never work since we are expired),\n   * and then does a new sampling based on the refreshed session.\n   */\n   async _refreshSession(session) {\n    if (!this._isEnabled) {\n      return;\n    }\n    await this.stop({ reason: 'refresh session' });\n    this.initializeSampling(session.id);\n  }\n\n  /**\n   * Adds listeners to record events for the replay\n   */\n   _addListeners() {\n    try {\n      WINDOW.document.addEventListener('visibilitychange', this._handleVisibilityChange);\n      WINDOW.addEventListener('blur', this._handleWindowBlur);\n      WINDOW.addEventListener('focus', this._handleWindowFocus);\n      WINDOW.addEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.addListeners();\n      }\n\n      // There is no way to remove these listeners, so ensure they are only added once\n      if (!this._hasInitializedCoreListeners) {\n        addGlobalListeners(this);\n\n        this._hasInitializedCoreListeners = true;\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n\n    this._performanceCleanupCallback = setupPerformanceObserver(this);\n  }\n\n  /**\n   * Cleans up listeners that were created in `_addListeners`\n   */\n   _removeListeners() {\n    try {\n      WINDOW.document.removeEventListener('visibilitychange', this._handleVisibilityChange);\n\n      WINDOW.removeEventListener('blur', this._handleWindowBlur);\n      WINDOW.removeEventListener('focus', this._handleWindowFocus);\n      WINDOW.removeEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.removeListeners();\n      }\n\n      if (this._performanceCleanupCallback) {\n        this._performanceCleanupCallback();\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Handle when visibility of the page content changes. Opening a new tab will\n   * cause the state to change to hidden because of content of current page will\n   * be hidden. Likewise, moving a different window to cover the contents of the\n   * page will also trigger a change to a hidden state.\n   */\n   __init() {this._handleVisibilityChange = () => {\n    if (WINDOW.document.visibilityState === 'visible') {\n      this._doChangeToForegroundTasks();\n    } else {\n      this._doChangeToBackgroundTasks();\n    }\n  };}\n\n  /**\n   * Handle when page is blurred\n   */\n   __init2() {this._handleWindowBlur = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.blur',\n    });\n\n    // Do not count blur as a user action -- it's part of the process of them\n    // leaving the page\n    this._doChangeToBackgroundTasks(breadcrumb);\n  };}\n\n  /**\n   * Handle when page is focused\n   */\n   __init3() {this._handleWindowFocus = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.focus',\n    });\n\n    // Do not count focus as a user action -- instead wait until they focus and\n    // interactive with page\n    this._doChangeToForegroundTasks(breadcrumb);\n  };}\n\n  /** Ensure page remains active when a key is pressed. */\n   __init4() {this._handleKeyboardEvent = (event) => {\n    handleKeyboardEvent(this, event);\n  };}\n\n  /**\n   * Tasks to run when we consider a page to be hidden (via blurring and/or visibility)\n   */\n   _doChangeToBackgroundTasks(breadcrumb) {\n    if (!this.session) {\n      return;\n    }\n\n    const expired = isSessionExpired(this.session, {\n      maxReplayDuration: this._options.maxReplayDuration,\n      sessionIdleExpire: this.timeouts.sessionIdleExpire,\n    });\n\n    if (expired) {\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Send replay when the page/tab becomes hidden. There is no reason to send\n    // replay if it becomes visible, since no actions we care about were done\n    // while it was hidden\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    void this.conditionalFlush();\n  }\n\n  /**\n   * Tasks to run when we consider a page to be visible (via focus and/or visibility)\n   */\n   _doChangeToForegroundTasks(breadcrumb) {\n    if (!this.session) {\n      return;\n    }\n\n    const isSessionActive = this.checkAndHandleExpiredSession();\n\n    if (!isSessionActive) {\n      // If the user has come back to the page within SESSION_IDLE_PAUSE_DURATION\n      // ms, we will re-use the existing session, otherwise create a new\n      // session\n      logInfo('[Replay] Document has become active, but session has expired');\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n  }\n\n  /**\n   * Update user activity (across session lifespans)\n   */\n   _updateUserActivity(_lastActivity = Date.now()) {\n    this._lastActivity = _lastActivity;\n  }\n\n  /**\n   * Updates the session's last activity timestamp\n   */\n   _updateSessionActivity(_lastActivity = Date.now()) {\n    if (this.session) {\n      this.session.lastActivity = _lastActivity;\n      this._maybeSaveSession();\n    }\n  }\n\n  /**\n   * Helper to create (and buffer) a replay breadcrumb from a core SDK breadcrumb\n   */\n   _createCustomBreadcrumb(breadcrumb) {\n    this.addUpdate(() => {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.throttledAddEvent({\n        type: EventType.Custom,\n        timestamp: breadcrumb.timestamp || 0,\n        data: {\n          tag: 'breadcrumb',\n          payload: breadcrumb,\n        },\n      });\n    });\n  }\n\n  /**\n   * Observed performance events are added to `this.performanceEntries`. These\n   * are included in the replay event before it is finished and sent to Sentry.\n   */\n   _addPerformanceEntries() {\n    const performanceEntries = createPerformanceEntries(this.performanceEntries).concat(this.replayPerformanceEntries);\n\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n\n    return Promise.all(createPerformanceSpans(this, performanceEntries));\n  }\n\n  /**\n   * Clear _context\n   */\n   _clearContext() {\n    // XXX: `initialTimestamp` and `initialUrl` do not get cleared\n    this._context.errorIds.clear();\n    this._context.traceIds.clear();\n    this._context.urls = [];\n  }\n\n  /** Update the initial timestamp based on the buffer content. */\n   _updateInitialTimestampFromEventBuffer() {\n    const { session, eventBuffer } = this;\n    if (!session || !eventBuffer) {\n      return;\n    }\n\n    // we only ever update this on the initial segment\n    if (session.segmentId) {\n      return;\n    }\n\n    const earliestEvent = eventBuffer.getEarliestTimestamp();\n    if (earliestEvent && earliestEvent < this._context.initialTimestamp) {\n      this._context.initialTimestamp = earliestEvent;\n    }\n  }\n\n  /**\n   * Return and clear _context\n   */\n   _popEventContext() {\n    const _context = {\n      initialTimestamp: this._context.initialTimestamp,\n      initialUrl: this._context.initialUrl,\n      errorIds: Array.from(this._context.errorIds),\n      traceIds: Array.from(this._context.traceIds),\n      urls: this._context.urls,\n    };\n\n    this._clearContext();\n\n    return _context;\n  }\n\n  /**\n   * Flushes replay event buffer to Sentry.\n   *\n   * Performance events are only added right before flushing - this is\n   * due to the buffered performance observer events.\n   *\n   * Should never be called directly, only by `flush`\n   */\n   async _runFlush() {\n    const replayId = this.getSessionId();\n\n    if (!this.session || !this.eventBuffer || !replayId) {\n      DEBUG_BUILD && logger.error('[Replay] No session or eventBuffer found to flush.');\n      return;\n    }\n\n    await this._addPerformanceEntries();\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer || !this.eventBuffer.hasEvents) {\n      return;\n    }\n\n    // Only attach memory event if eventBuffer is not empty\n    await addMemoryEntry(this);\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer) {\n      return;\n    }\n\n    // if this changed in the meanwhile, e.g. because the session was refreshed or similar, we abort here\n    if (replayId !== this.getSessionId()) {\n      return;\n    }\n\n    try {\n      // This uses the data from the eventBuffer, so we need to call this before `finish()\n      this._updateInitialTimestampFromEventBuffer();\n\n      const timestamp = Date.now();\n\n      // Check total duration again, to avoid sending outdated stuff\n      // We leave 30s wiggle room to accomodate late flushing etc.\n      // This _could_ happen when the browser is suspended during flushing, in which case we just want to stop\n      if (timestamp - this._context.initialTimestamp > this._options.maxReplayDuration + 30000) {\n        throw new Error('Session is too long, not sending replay');\n      }\n\n      const eventContext = this._popEventContext();\n      // Always increment segmentId regardless of outcome of sending replay\n      const segmentId = this.session.segmentId++;\n      this._maybeSaveSession();\n\n      // Note this empties the event buffer regardless of outcome of sending replay\n      const recordingData = await this.eventBuffer.finish();\n\n      await sendReplay({\n        replayId,\n        recordingData,\n        segmentId,\n        eventContext,\n        session: this.session,\n        options: this.getOptions(),\n        timestamp,\n      });\n    } catch (err) {\n      this._handleException(err);\n\n      // This means we retried 3 times and all of them failed,\n      // or we ran into a problem we don't want to retry, like rate limiting.\n      // In this case, we want to completely stop the replay - otherwise, we may get inconsistent segments\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.stop({ reason: 'sendReplay' });\n\n      const client = getClient();\n\n      if (client) {\n        client.recordDroppedEvent('send_error', 'replay');\n      }\n    }\n  }\n\n  /**\n   * Flush recording data to Sentry. Creates a lock so that only a single flush\n   * can be active at a time. Do not call this directly.\n   */\n   __init5() {this._flush = async ({\n    force = false,\n  }\n\n = {}) => {\n    if (!this._isEnabled && !force) {\n      // This can happen if e.g. the replay was stopped because of exceeding the retry limit\n      return;\n    }\n\n    if (!this.checkAndHandleExpiredSession()) {\n      DEBUG_BUILD && logger.error('[Replay] Attempting to finish replay event after session expired.');\n      return;\n    }\n\n    if (!this.session) {\n      // should never happen, as we would have bailed out before\n      return;\n    }\n\n    const start = this.session.started;\n    const now = Date.now();\n    const duration = now - start;\n\n    // A flush is about to happen, cancel any queued flushes\n    this._debouncedFlush.cancel();\n\n    // If session is too short, or too long (allow some wiggle room over maxReplayDuration), do not send it\n    // This _should_ not happen, but it may happen if flush is triggered due to a page activity change or similar\n    const tooShort = duration < this._options.minReplayDuration;\n    const tooLong = duration > this._options.maxReplayDuration + 5000;\n    if (tooShort || tooLong) {\n      logInfo(\n        `[Replay] Session duration (${Math.floor(duration / 1000)}s) is too ${\n          tooShort ? 'short' : 'long'\n        }, not sending replay.`,\n        this._options._experiments.traceInternals,\n      );\n\n      if (tooShort) {\n        this._debouncedFlush();\n      }\n      return;\n    }\n\n    const eventBuffer = this.eventBuffer;\n    if (eventBuffer && this.session.segmentId === 0 && !eventBuffer.hasCheckout) {\n      logInfo('[Replay] Flushing initial segment without checkout.', this._options._experiments.traceInternals);\n      // TODO FN: Evaluate if we want to stop here, or remove this again?\n    }\n\n    // this._flushLock acts as a lock so that future calls to `_flush()`\n    // will be blocked until this promise resolves\n    if (!this._flushLock) {\n      this._flushLock = this._runFlush();\n      await this._flushLock;\n      this._flushLock = undefined;\n      return;\n    }\n\n    // Wait for previous flush to finish, then call the debounced `_flush()`.\n    // It's possible there are other flush requests queued and waiting for it\n    // to resolve. We want to reduce all outstanding requests (as well as any\n    // new flush requests that occur within a second of the locked flush\n    // completing) into a single flush.\n\n    try {\n      await this._flushLock;\n    } catch (err) {\n      DEBUG_BUILD && logger.error(err);\n    } finally {\n      this._debouncedFlush();\n    }\n  };}\n\n  /** Save the session, if it is sticky */\n   _maybeSaveSession() {\n    if (this.session && this._options.stickySession) {\n      saveSession(this.session);\n    }\n  }\n\n  /** Handler for rrweb.record.onMutation */\n   __init6() {this._onMutationHandler = (mutations) => {\n    const count = mutations.length;\n\n    const mutationLimit = this._options.mutationLimit;\n    const mutationBreadcrumbLimit = this._options.mutationBreadcrumbLimit;\n    const overMutationLimit = mutationLimit && count > mutationLimit;\n\n    // Create a breadcrumb if a lot of mutations happen at the same time\n    // We can show this in the UI as an information with potential performance improvements\n    if (count > mutationBreadcrumbLimit || overMutationLimit) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.mutations',\n        data: {\n          count,\n          limit: overMutationLimit,\n        },\n      });\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Stop replay if over the mutation limit\n    if (overMutationLimit) {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.stop({ reason: 'mutationLimit', forceFlush: this.recordingMode === 'session' });\n      return false;\n    }\n\n    // `true` means we use the regular mutation handling by rrweb\n    return true;\n  };}\n}\n\nfunction getOption(\n  selectors,\n  defaultSelectors,\n  deprecatedClassOption,\n  deprecatedSelectorOption,\n) {\n  const deprecatedSelectors = typeof deprecatedSelectorOption === 'string' ? deprecatedSelectorOption.split(',') : [];\n\n  const allSelectors = [\n    ...selectors,\n    // @deprecated\n    ...deprecatedSelectors,\n\n    // sentry defaults\n    ...defaultSelectors,\n  ];\n\n  // @deprecated\n  if (typeof deprecatedClassOption !== 'undefined') {\n    // NOTE: No support for RegExp\n    if (typeof deprecatedClassOption === 'string') {\n      allSelectors.push(`.${deprecatedClassOption}`);\n    }\n\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[Replay] You are using a deprecated configuration item for privacy. Read the documentation on how to use the new privacy configuration.',\n      );\n    });\n  }\n\n  return allSelectors.join(',');\n}\n\n/**\n * Returns privacy related configuration for use in rrweb\n */\nfunction getPrivacyOptions({\n  mask,\n  unmask,\n  block,\n  unblock,\n  ignore,\n\n  // eslint-disable-next-line deprecation/deprecation\n  blockClass,\n  // eslint-disable-next-line deprecation/deprecation\n  blockSelector,\n  // eslint-disable-next-line deprecation/deprecation\n  maskTextClass,\n  // eslint-disable-next-line deprecation/deprecation\n  maskTextSelector,\n  // eslint-disable-next-line deprecation/deprecation\n  ignoreClass,\n}) {\n  const defaultBlockedElements = ['base[href=\"/\"]'];\n\n  const maskSelector = getOption(mask, ['.sentry-mask', '[data-sentry-mask]'], maskTextClass, maskTextSelector);\n  const unmaskSelector = getOption(unmask, ['.sentry-unmask', '[data-sentry-unmask]']);\n\n  const options = {\n    // We are making the decision to make text and input selectors the same\n    maskTextSelector: maskSelector,\n    unmaskTextSelector: unmaskSelector,\n\n    blockSelector: getOption(\n      block,\n      ['.sentry-block', '[data-sentry-block]', ...defaultBlockedElements],\n      blockClass,\n      blockSelector,\n    ),\n    unblockSelector: getOption(unblock, ['.sentry-unblock', '[data-sentry-unblock]']),\n    ignoreSelector: getOption(ignore, ['.sentry-ignore', '[data-sentry-ignore]', 'input[type=\"file\"]'], ignoreClass),\n  };\n\n  if (blockClass instanceof RegExp) {\n    options.blockClass = blockClass;\n  }\n\n  if (maskTextClass instanceof RegExp) {\n    options.maskTextClass = maskTextClass;\n  }\n\n  return options;\n}\n\n/**\n * Masks an attribute if necessary, otherwise return attribute value as-is.\n */\nfunction maskAttribute({\n  el,\n  key,\n  maskAttributes,\n  maskAllText,\n  privacyOptions,\n  value,\n}) {\n  // We only mask attributes if `maskAllText` is true\n  if (!maskAllText) {\n    return value;\n  }\n\n  // unmaskTextSelector takes precendence\n  if (privacyOptions.unmaskTextSelector && el.matches(privacyOptions.unmaskTextSelector)) {\n    return value;\n  }\n\n  if (\n    maskAttributes.includes(key) ||\n    // Need to mask `value` attribute for `<input>` if it's a button-like\n    // type\n    (key === 'value' && el.tagName === 'INPUT' && ['submit', 'button'].includes(el.getAttribute('type') || ''))\n  ) {\n    return value.replace(/[\\S]/g, '*');\n  }\n\n  return value;\n}\n\nconst MEDIA_SELECTORS =\n  'img,image,svg,video,object,picture,embed,map,audio,link[rel=\"icon\"],link[rel=\"apple-touch-icon\"]';\n\nconst DEFAULT_NETWORK_HEADERS = ['content-length', 'content-type', 'accept'];\n\nlet _initialized = false;\n\nconst replayIntegration = ((options) => {\n  // eslint-disable-next-line deprecation/deprecation\n  return new Replay(options);\n}) ;\n\n/**\n * The main replay integration class, to be passed to `init({  integrations: [] })`.\n * @deprecated Use `replayIntegration()` instead.\n */\nclass Replay  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Replay';}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n\n  /**\n   * Initial options passed to the replay integration, merged with default values.\n   * Note: `sessionSampleRate` and `errorSampleRate` are not required here, as they\n   * can only be finally set when setupOnce() is called.\n   *\n   * @private\n   */\n\n   constructor({\n    flushMinDelay = DEFAULT_FLUSH_MIN_DELAY,\n    flushMaxDelay = DEFAULT_FLUSH_MAX_DELAY,\n    minReplayDuration = MIN_REPLAY_DURATION,\n    maxReplayDuration = MAX_REPLAY_DURATION,\n    stickySession = true,\n    useCompression = true,\n    workerUrl,\n    _experiments = {},\n    sessionSampleRate,\n    errorSampleRate,\n    maskAllText = true,\n    maskAllInputs = true,\n    blockAllMedia = true,\n\n    mutationBreadcrumbLimit = 750,\n    mutationLimit = 10000,\n\n    slowClickTimeout = 7000,\n    slowClickIgnoreSelectors = [],\n\n    networkDetailAllowUrls = [],\n    networkDetailDenyUrls = [],\n    networkCaptureBodies = true,\n    networkRequestHeaders = [],\n    networkResponseHeaders = [],\n\n    mask = [],\n    maskAttributes = ['title', 'placeholder'],\n    unmask = [],\n    block = [],\n    unblock = [],\n    ignore = [],\n    maskFn,\n\n    beforeAddRecordingEvent,\n    beforeErrorSampling,\n\n    // eslint-disable-next-line deprecation/deprecation\n    blockClass,\n    // eslint-disable-next-line deprecation/deprecation\n    blockSelector,\n    // eslint-disable-next-line deprecation/deprecation\n    maskInputOptions,\n    // eslint-disable-next-line deprecation/deprecation\n    maskTextClass,\n    // eslint-disable-next-line deprecation/deprecation\n    maskTextSelector,\n    // eslint-disable-next-line deprecation/deprecation\n    ignoreClass,\n  } = {}) {\n    // eslint-disable-next-line deprecation/deprecation\n    this.name = Replay.id;\n\n    const privacyOptions = getPrivacyOptions({\n      mask,\n      unmask,\n      block,\n      unblock,\n      ignore,\n      blockClass,\n      blockSelector,\n      maskTextClass,\n      maskTextSelector,\n      ignoreClass,\n    });\n\n    this._recordingOptions = {\n      maskAllInputs,\n      maskAllText,\n      maskInputOptions: { ...(maskInputOptions || {}), password: true },\n      maskTextFn: maskFn,\n      maskInputFn: maskFn,\n      maskAttributeFn: (key, value, el) =>\n        maskAttribute({\n          maskAttributes,\n          maskAllText,\n          privacyOptions,\n          key,\n          value,\n          el,\n        }),\n\n      ...privacyOptions,\n\n      // Our defaults\n      slimDOMOptions: 'all',\n      inlineStylesheet: true,\n      // Disable inline images as it will increase segment/replay size\n      inlineImages: false,\n      // collect fonts, but be aware that `sentry.io` needs to be an allowed\n      // origin for playback\n      collectFonts: true,\n      errorHandler: (err) => {\n        try {\n          err.__rrweb__ = true;\n        } catch (error) {\n          // ignore errors here\n          // this can happen if the error is frozen or does not allow mutation for other reasons\n        }\n      },\n    };\n\n    this._initialOptions = {\n      flushMinDelay,\n      flushMaxDelay,\n      minReplayDuration: Math.min(minReplayDuration, MIN_REPLAY_DURATION_LIMIT),\n      maxReplayDuration: Math.min(maxReplayDuration, MAX_REPLAY_DURATION),\n      stickySession,\n      sessionSampleRate,\n      errorSampleRate,\n      useCompression,\n      workerUrl,\n      blockAllMedia,\n      maskAllInputs,\n      maskAllText,\n      mutationBreadcrumbLimit,\n      mutationLimit,\n      slowClickTimeout,\n      slowClickIgnoreSelectors,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders: _getMergedNetworkHeaders(networkRequestHeaders),\n      networkResponseHeaders: _getMergedNetworkHeaders(networkResponseHeaders),\n      beforeAddRecordingEvent,\n      beforeErrorSampling,\n\n      _experiments,\n    };\n\n    if (typeof sessionSampleRate === 'number') {\n      // eslint-disable-next-line\n      console.warn(\n        `[Replay] You are passing \\`sessionSampleRate\\` to the Replay integration.\nThis option is deprecated and will be removed soon.\nInstead, configure \\`replaysSessionSampleRate\\` directly in the SDK init options, e.g.:\nSentry.init({ replaysSessionSampleRate: ${sessionSampleRate} })`,\n      );\n\n      this._initialOptions.sessionSampleRate = sessionSampleRate;\n    }\n\n    if (typeof errorSampleRate === 'number') {\n      // eslint-disable-next-line\n      console.warn(\n        `[Replay] You are passing \\`errorSampleRate\\` to the Replay integration.\nThis option is deprecated and will be removed soon.\nInstead, configure \\`replaysOnErrorSampleRate\\` directly in the SDK init options, e.g.:\nSentry.init({ replaysOnErrorSampleRate: ${errorSampleRate} })`,\n      );\n\n      this._initialOptions.errorSampleRate = errorSampleRate;\n    }\n\n    if (this._initialOptions.blockAllMedia) {\n      // `blockAllMedia` is a more user friendly option to configure blocking\n      // embedded media elements\n      this._recordingOptions.blockSelector = !this._recordingOptions.blockSelector\n        ? MEDIA_SELECTORS\n        : `${this._recordingOptions.blockSelector},${MEDIA_SELECTORS}`;\n    }\n\n    if (this._isInitialized && isBrowser()) {\n      throw new Error('Multiple Sentry Session Replay instances are not supported');\n    }\n\n    this._isInitialized = true;\n  }\n\n  /** If replay has already been initialized */\n   get _isInitialized() {\n    return _initialized;\n  }\n\n  /** Update _isInitialized */\n   set _isInitialized(value) {\n    _initialized = value;\n  }\n\n  /**\n   * Setup and initialize replay container\n   */\n   setupOnce() {\n    if (!isBrowser()) {\n      return;\n    }\n\n    this._setup();\n\n    // Once upon a time, we tried to create a transaction in `setupOnce` and it would\n    // potentially create a transaction before some native SDK integrations have run\n    // and applied their own global event processor. An example is:\n    // https://github.com/getsentry/sentry-javascript/blob/b47ceafbdac7f8b99093ce6023726ad4687edc48/packages/browser/src/integrations/useragent.ts\n    //\n    // So we call `this._initialize()` in next event loop as a workaround to wait for other\n    // global event processors to finish. This is no longer needed, but keeping it\n    // here to avoid any future issues.\n    setTimeout(() => this._initialize());\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will throw an error if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * PerformanceObserver, Recording, Sentry SDK, etc)\n   */\n   start() {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.start();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, until an error occurs.\n   */\n   startBuffering() {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.startBuffering();\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n   stop() {\n    if (!this._replay) {\n      return Promise.resolve();\n    }\n\n    return this._replay.stop({ forceFlush: this._replay.recordingMode === 'session' });\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n   flush(options) {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return Promise.resolve();\n    }\n\n    return this._replay.sendBufferedReplayOrFlush(options);\n  }\n\n  /**\n   * Get the current session ID.\n   */\n   getReplayId() {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return;\n    }\n\n    return this._replay.getSessionId();\n  }\n\n  /**\n   * Initializes replay.\n   */\n   _initialize() {\n    if (!this._replay) {\n      return;\n    }\n\n    // We have to run this in _initialize, because this runs in setTimeout\n    // So when this runs all integrations have been added\n    // Before this, we cannot access integrations on the client,\n    // so we need to mutate the options here\n    this._maybeLoadFromReplayCanvasIntegration();\n\n    this._replay.initializeSampling();\n  }\n\n  /** Setup the integration. */\n   _setup() {\n    // Client is not available in constructor, so we need to wait until setupOnce\n    const finalOptions = loadReplayOptionsFromClient(this._initialOptions);\n\n    this._replay = new ReplayContainer({\n      options: finalOptions,\n      recordingOptions: this._recordingOptions,\n    });\n  }\n\n  /** Get canvas options from ReplayCanvas integration, if it is also added. */\n   _maybeLoadFromReplayCanvasIntegration() {\n    // To save bundle size, we skip checking for stuff here\n    // and instead just try-catch everything - as generally this should all be defined\n    /* eslint-disable @typescript-eslint/no-non-null-assertion */\n    try {\n      const client = getClient();\n      const canvasIntegration = client.getIntegrationByName('ReplayCanvas')\n\n;\n      if (!canvasIntegration) {\n        return;\n      }\n\n      this._replay['_canvas'] = canvasIntegration.getOptions();\n    } catch (e) {\n      // ignore errors here\n    }\n    /* eslint-enable @typescript-eslint/no-non-null-assertion */\n  }\n}Replay.__initStatic();\n\n/** Parse Replay-related options from SDK options */\nfunction loadReplayOptionsFromClient(initialOptions) {\n  const client = getClient();\n  const opt = client && (client.getOptions() );\n\n  const finalOptions = { sessionSampleRate: 0, errorSampleRate: 0, ...dropUndefinedKeys(initialOptions) };\n\n  if (!opt) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn('SDK client is not available.');\n    });\n    return finalOptions;\n  }\n\n  if (\n    initialOptions.sessionSampleRate == null && // TODO remove once deprecated rates are removed\n    initialOptions.errorSampleRate == null && // TODO remove once deprecated rates are removed\n    opt.replaysSessionSampleRate == null &&\n    opt.replaysOnErrorSampleRate == null\n  ) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Replay is disabled because neither `replaysSessionSampleRate` nor `replaysOnErrorSampleRate` are set.',\n      );\n    });\n  }\n\n  if (typeof opt.replaysSessionSampleRate === 'number') {\n    finalOptions.sessionSampleRate = opt.replaysSessionSampleRate;\n  }\n\n  if (typeof opt.replaysOnErrorSampleRate === 'number') {\n    finalOptions.errorSampleRate = opt.replaysOnErrorSampleRate;\n  }\n\n  return finalOptions;\n}\n\nfunction _getMergedNetworkHeaders(headers) {\n  return [...DEFAULT_NETWORK_HEADERS, ...headers.map(header => header.toLowerCase())];\n}\n\n/**\n * This is a small utility to get a type-safe instance of the Replay integration.\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction getReplay() {\n  const client = getClient();\n  return (\n    client && client.getIntegrationByName && client.getIntegrationByName('Replay')\n  );\n}\n\nexport { Replay, getReplay, replayIntegration };\n//# sourceMappingURL=index.js.map\n","import { getClient, DEFAULT_ENVIRONMENT } from '@sentry/core';\nimport { forEachEnvelopeItem, logger, uuid4, GLOBAL_OBJ, browserPerformanceTimeOrigin } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { WINDOW } from '../helpers.js';\n\n/* eslint-disable max-lines */\n\nconst MS_TO_NS = 1e6;\n// Use 0 as main thread id which is identical to threadId in node:worker_threads\n// where main logs 0 and workers seem to log in increments of 1\nconst THREAD_ID_STRING = String(0);\nconst THREAD_NAME = 'main';\n\n// Machine properties (eval only once)\nlet OS_PLATFORM = '';\nlet OS_PLATFORM_VERSION = '';\nlet OS_ARCH = '';\nlet OS_BROWSER = (WINDOW.navigator && WINDOW.navigator.userAgent) || '';\nlet OS_MODEL = '';\nconst OS_LOCALE =\n  (WINDOW.navigator && WINDOW.navigator.language) ||\n  (WINDOW.navigator && WINDOW.navigator.languages && WINDOW.navigator.languages[0]) ||\n  '';\n\nfunction isUserAgentData(data) {\n  return typeof data === 'object' && data !== null && 'getHighEntropyValues' in data;\n}\n\n// @ts-expect-error userAgentData is not part of the navigator interface yet\nconst userAgentData = WINDOW.navigator && WINDOW.navigator.userAgentData;\n\nif (isUserAgentData(userAgentData)) {\n  userAgentData\n    .getHighEntropyValues(['architecture', 'model', 'platform', 'platformVersion', 'fullVersionList'])\n    .then((ua) => {\n      OS_PLATFORM = ua.platform || '';\n      OS_ARCH = ua.architecture || '';\n      OS_MODEL = ua.model || '';\n      OS_PLATFORM_VERSION = ua.platformVersion || '';\n\n      if (ua.fullVersionList && ua.fullVersionList.length > 0) {\n        const firstUa = ua.fullVersionList[ua.fullVersionList.length - 1];\n        OS_BROWSER = `${firstUa.brand} ${firstUa.version}`;\n      }\n    })\n    .catch(e => void e);\n}\n\nfunction isProcessedJSSelfProfile(profile) {\n  return !('thread_metadata' in profile);\n}\n\n// Enriches the profile with threadId of the current thread.\n// This is done in node as we seem to not be able to get the info from C native code.\n/**\n *\n */\nfunction enrichWithThreadInformation(profile) {\n  if (!isProcessedJSSelfProfile(profile)) {\n    return profile;\n  }\n\n  return convertJSSelfProfileToSampledFormat(profile);\n}\n\n// Profile is marked as optional because it is deleted from the metadata\n// by the integration before the event is processed by other integrations.\n\nfunction getTraceId(event) {\n  const traceId = event && event.contexts && event.contexts['trace'] && event.contexts['trace']['trace_id'];\n  // Log a warning if the profile has an invalid traceId (should be uuidv4).\n  // All profiles and transactions are rejected if this is the case and we want to\n  // warn users that this is happening if they enable debug flag\n  if (typeof traceId === 'string' && traceId.length !== 32) {\n    if (DEBUG_BUILD) {\n      logger.log(`[Profiling] Invalid traceId: ${traceId} on profiled event`);\n    }\n  }\n  if (typeof traceId !== 'string') {\n    return '';\n  }\n\n  return traceId;\n}\n/**\n * Creates a profiling event envelope from a Sentry event. If profile does not pass\n * validation, returns null.\n * @param event\n * @param dsn\n * @param metadata\n * @param tunnel\n * @returns {EventEnvelope | null}\n */\n\n/**\n * Creates a profiling event envelope from a Sentry event.\n */\nfunction createProfilePayload(\n  profile_id,\n  start_timestamp,\n  processed_profile,\n  event,\n) {\n  if (event.type !== 'transaction') {\n    // createProfilingEventEnvelope should only be called for transactions,\n    // we type guard this behavior with isProfiledTransactionEvent.\n    throw new TypeError('Profiling events may only be attached to transactions, this should never occur.');\n  }\n\n  if (processed_profile === undefined || processed_profile === null) {\n    throw new TypeError(\n      `Cannot construct profiling event envelope without a valid profile. Got ${processed_profile} instead.`,\n    );\n  }\n\n  const traceId = getTraceId(event);\n  const enrichedThreadProfile = enrichWithThreadInformation(processed_profile);\n  const transactionStartMs = start_timestamp\n    ? start_timestamp\n    : typeof event.start_timestamp === 'number'\n      ? event.start_timestamp * 1000\n      : Date.now();\n  const transactionEndMs = typeof event.timestamp === 'number' ? event.timestamp * 1000 : Date.now();\n\n  const profile = {\n    event_id: profile_id,\n    timestamp: new Date(transactionStartMs).toISOString(),\n    platform: 'javascript',\n    version: '1',\n    release: event.release || '',\n    environment: event.environment || DEFAULT_ENVIRONMENT,\n    runtime: {\n      name: 'javascript',\n      version: WINDOW.navigator.userAgent,\n    },\n    os: {\n      name: OS_PLATFORM,\n      version: OS_PLATFORM_VERSION,\n      build_number: OS_BROWSER,\n    },\n    device: {\n      locale: OS_LOCALE,\n      model: OS_MODEL,\n      manufacturer: OS_BROWSER,\n      architecture: OS_ARCH,\n      is_emulator: false,\n    },\n    debug_meta: {\n      images: applyDebugMetadata(processed_profile.resources),\n    },\n    profile: enrichedThreadProfile,\n    transactions: [\n      {\n        name: event.transaction || '',\n        id: event.event_id || uuid4(),\n        trace_id: traceId,\n        active_thread_id: THREAD_ID_STRING,\n        relative_start_ns: '0',\n        relative_end_ns: ((transactionEndMs - transactionStartMs) * 1e6).toFixed(0),\n      },\n    ],\n  };\n\n  return profile;\n}\n\n/*\n  See packages/tracing-internal/src/browser/router.ts\n*/\n/**\n *\n */\nfunction isAutomatedPageLoadTransaction(transaction) {\n  return transaction.op === 'pageload';\n}\n\n/**\n * Converts a JSSelfProfile to a our sampled format.\n * Does not currently perform stack indexing.\n */\nfunction convertJSSelfProfileToSampledFormat(input) {\n  let EMPTY_STACK_ID = undefined;\n  let STACK_ID = 0;\n\n  // Initialize the profile that we will fill with data\n  const profile = {\n    samples: [],\n    stacks: [],\n    frames: [],\n    thread_metadata: {\n      [THREAD_ID_STRING]: { name: THREAD_NAME },\n    },\n  };\n\n  if (!input.samples.length) {\n    return profile;\n  }\n\n  // We assert samples.length > 0 above and timestamp should always be present\n  const start = input.samples[0].timestamp;\n  // The JS SDK might change it's time origin based on some heuristic (see See packages/utils/src/time.ts)\n  // when that happens, we need to ensure we are correcting the profile timings so the two timelines stay in sync.\n  // Since JS self profiling time origin is always initialized to performance.timeOrigin, we need to adjust for\n  // the drift between the SDK selected value and our profile time origin.\n  const origin =\n    typeof performance.timeOrigin === 'number' ? performance.timeOrigin : browserPerformanceTimeOrigin || 0;\n  const adjustForOriginChange = origin - (browserPerformanceTimeOrigin || origin);\n\n  for (let i = 0; i < input.samples.length; i++) {\n    const jsSample = input.samples[i];\n\n    // If sample has no stack, add an empty sample\n    if (jsSample.stackId === undefined) {\n      if (EMPTY_STACK_ID === undefined) {\n        EMPTY_STACK_ID = STACK_ID;\n        profile.stacks[EMPTY_STACK_ID] = [];\n        STACK_ID++;\n      }\n\n      profile['samples'][i] = {\n        // convert ms timestamp to ns\n        elapsed_since_start_ns: ((jsSample.timestamp + adjustForOriginChange - start) * MS_TO_NS).toFixed(0),\n        stack_id: EMPTY_STACK_ID,\n        thread_id: THREAD_ID_STRING,\n      };\n      continue;\n    }\n\n    let stackTop = input.stacks[jsSample.stackId];\n\n    // Functions in top->down order (root is last)\n    // We follow the stackTop.parentId trail and collect each visited frameId\n    const stack = [];\n\n    while (stackTop) {\n      stack.push(stackTop.frameId);\n\n      const frame = input.frames[stackTop.frameId];\n\n      // If our frame has not been indexed yet, index it\n      if (profile.frames[stackTop.frameId] === undefined) {\n        profile.frames[stackTop.frameId] = {\n          function: frame.name,\n          abs_path: typeof frame.resourceId === 'number' ? input.resources[frame.resourceId] : undefined,\n          lineno: frame.line,\n          colno: frame.column,\n        };\n      }\n\n      stackTop = stackTop.parentId === undefined ? undefined : input.stacks[stackTop.parentId];\n    }\n\n    const sample = {\n      // convert ms timestamp to ns\n      elapsed_since_start_ns: ((jsSample.timestamp + adjustForOriginChange - start) * MS_TO_NS).toFixed(0),\n      stack_id: STACK_ID,\n      thread_id: THREAD_ID_STRING,\n    };\n\n    profile['stacks'][STACK_ID] = stack;\n    profile['samples'][i] = sample;\n    STACK_ID++;\n  }\n\n  return profile;\n}\n\n/**\n * Adds items to envelope if they are not already present - mutates the envelope.\n * @param envelope\n */\nfunction addProfilesToEnvelope(envelope, profiles) {\n  if (!profiles.length) {\n    return envelope;\n  }\n\n  for (const profile of profiles) {\n    envelope[1].push([{ type: 'profile' }, profile]);\n  }\n  return envelope;\n}\n\n/**\n * Finds transactions with profile_id context in the envelope\n * @param envelope\n * @returns\n */\nfunction findProfiledTransactionsFromEnvelope(envelope) {\n  const events = [];\n\n  forEachEnvelopeItem(envelope, (item, type) => {\n    if (type !== 'transaction') {\n      return;\n    }\n\n    for (let j = 1; j < item.length; j++) {\n      const event = item[j] ;\n\n      if (event && event.contexts && event.contexts['profile'] && event.contexts['profile']['profile_id']) {\n        events.push(item[j] );\n      }\n    }\n  });\n\n  return events;\n}\n\nconst debugIdStackParserCache = new WeakMap();\n/**\n * Applies debug meta data to an event from a list of paths to resources (sourcemaps)\n */\nfunction applyDebugMetadata(resource_paths) {\n  const debugIdMap = GLOBAL_OBJ._sentryDebugIds;\n\n  if (!debugIdMap) {\n    return [];\n  }\n\n  const client = getClient();\n  const options = client && client.getOptions();\n  const stackParser = options && options.stackParser;\n\n  if (!stackParser) {\n    return [];\n  }\n\n  let debugIdStackFramesCache;\n  const cachedDebugIdStackFrameCache = debugIdStackParserCache.get(stackParser);\n  if (cachedDebugIdStackFrameCache) {\n    debugIdStackFramesCache = cachedDebugIdStackFrameCache;\n  } else {\n    debugIdStackFramesCache = new Map();\n    debugIdStackParserCache.set(stackParser, debugIdStackFramesCache);\n  }\n\n  // Build a map of filename -> debug_id\n  const filenameDebugIdMap = Object.keys(debugIdMap).reduce((acc, debugIdStackTrace) => {\n    let parsedStack;\n\n    const cachedParsedStack = debugIdStackFramesCache.get(debugIdStackTrace);\n    if (cachedParsedStack) {\n      parsedStack = cachedParsedStack;\n    } else {\n      parsedStack = stackParser(debugIdStackTrace);\n      debugIdStackFramesCache.set(debugIdStackTrace, parsedStack);\n    }\n\n    for (let i = parsedStack.length - 1; i >= 0; i--) {\n      const stackFrame = parsedStack[i];\n      const file = stackFrame && stackFrame.filename;\n\n      if (stackFrame && file) {\n        acc[file] = debugIdMap[debugIdStackTrace] ;\n        break;\n      }\n    }\n    return acc;\n  }, {});\n\n  const images = [];\n  for (const path of resource_paths) {\n    if (path && filenameDebugIdMap[path]) {\n      images.push({\n        type: 'sourcemap',\n        code_file: path,\n        debug_id: filenameDebugIdMap[path] ,\n      });\n    }\n  }\n\n  return images;\n}\n\n/**\n * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n */\nfunction isValidSampleRate(rate) {\n  // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n  if ((typeof rate !== 'number' && typeof rate !== 'boolean') || (typeof rate === 'number' && isNaN(rate))) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `[Profiling] Invalid sample rate. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          rate,\n        )} of type ${JSON.stringify(typeof rate)}.`,\n      );\n    return false;\n  }\n\n  // Boolean sample rates are always valid\n  if (rate === true || rate === false) {\n    return true;\n  }\n\n  // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n  if (rate < 0 || rate > 1) {\n    DEBUG_BUILD && logger.warn(`[Profiling] Invalid sample rate. Sample rate must be between 0 and 1. Got ${rate}.`);\n    return false;\n  }\n  return true;\n}\n\nfunction isValidProfile(profile) {\n  if (profile.samples.length < 2) {\n    if (DEBUG_BUILD) {\n      // Log a warning if the profile has less than 2 samples so users can know why\n      // they are not seeing any profiling data and we cant avoid the back and forth\n      // of asking them to provide us with a dump of the profile data.\n      logger.log('[Profiling] Discarding profile because it contains less than 2 samples');\n    }\n    return false;\n  }\n\n  if (!profile.frames.length) {\n    if (DEBUG_BUILD) {\n      logger.log('[Profiling] Discarding profile because it contains no frames');\n    }\n    return false;\n  }\n\n  return true;\n}\n\n// Keep a flag value to avoid re-initializing the profiler constructor. If it fails\n// once, it will always fail and this allows us to early return.\nlet PROFILING_CONSTRUCTOR_FAILED = false;\nconst MAX_PROFILE_DURATION_MS = 30000;\n\n/**\n * Check if profiler constructor is available.\n * @param maybeProfiler\n */\nfunction isJSProfilerSupported(maybeProfiler) {\n  return typeof maybeProfiler === 'function';\n}\n\n/**\n * Starts the profiler and returns the profiler instance.\n */\nfunction startJSSelfProfile() {\n  // Feature support check first\n  const JSProfilerConstructor = WINDOW.Profiler;\n\n  if (!isJSProfilerSupported(JSProfilerConstructor)) {\n    if (DEBUG_BUILD) {\n      logger.log(\n        '[Profiling] Profiling is not supported by this browser, Profiler interface missing on window object.',\n      );\n    }\n    return;\n  }\n\n  // From initial testing, it seems that the minimum value for sampleInterval is 10ms.\n  const samplingIntervalMS = 10;\n  // Start the profiler\n  const maxSamples = Math.floor(MAX_PROFILE_DURATION_MS / samplingIntervalMS);\n\n  // Attempt to initialize the profiler constructor, if it fails, we disable profiling for the current user session.\n  // This is likely due to a missing 'Document-Policy': 'js-profiling' header. We do not want to throw an error if this happens\n  // as we risk breaking the user's application, so just disable profiling and log an error.\n  try {\n    return new JSProfilerConstructor({ sampleInterval: samplingIntervalMS, maxBufferSize: maxSamples });\n  } catch (e) {\n    if (DEBUG_BUILD) {\n      logger.log(\n        \"[Profiling] Failed to initialize the Profiling constructor, this is likely due to a missing 'Document-Policy': 'js-profiling' header.\",\n      );\n      logger.log('[Profiling] Disabling profiling for current user session.');\n    }\n    PROFILING_CONSTRUCTOR_FAILED = true;\n  }\n\n  return;\n}\n\n/**\n * Determine if a profile should be profiled.\n */\nfunction shouldProfileTransaction(transaction) {\n  // If constructor failed once, it will always fail, so we can early return.\n  if (PROFILING_CONSTRUCTOR_FAILED) {\n    if (DEBUG_BUILD) {\n      logger.log('[Profiling] Profiling has been disabled for the duration of the current user session.');\n    }\n    return false;\n  }\n\n  if (!transaction.isRecording()) {\n    if (DEBUG_BUILD) {\n      logger.log('[Profiling] Discarding profile because transaction was not sampled.');\n    }\n    return false;\n  }\n\n  const client = getClient();\n  const options = client && client.getOptions();\n  if (!options) {\n    DEBUG_BUILD && logger.log('[Profiling] Profiling disabled, no options found.');\n    return false;\n  }\n\n  // @ts-expect-error profilesSampleRate is not part of the browser options yet\n  const profilesSampleRate = options.profilesSampleRate;\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n  // only valid values are booleans or numbers between 0 and 1.)\n  if (!isValidSampleRate(profilesSampleRate)) {\n    DEBUG_BUILD && logger.warn('[Profiling] Discarding profile because of invalid sample rate.');\n    return false;\n  }\n\n  // if the function returned 0 (or false), or if `profileSampleRate` is 0, it's a sign the profile should be dropped\n  if (!profilesSampleRate) {\n    DEBUG_BUILD &&\n      logger.log(\n        '[Profiling] Discarding profile because a negative sampling decision was inherited or profileSampleRate is set to 0',\n      );\n    return false;\n  }\n\n  // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n  // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n  const sampled = profilesSampleRate === true ? true : Math.random() < profilesSampleRate;\n  // Check if we should sample this profile\n  if (!sampled) {\n    DEBUG_BUILD &&\n      logger.log(\n        `[Profiling] Discarding profile because it's not included in the random sample (sampling rate = ${Number(\n          profilesSampleRate,\n        )})`,\n      );\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Creates a profiling envelope item, if the profile does not pass validation, returns null.\n * @param event\n * @returns {Profile | null}\n */\nfunction createProfilingEvent(\n  profile_id,\n  start_timestamp,\n  profile,\n  event,\n) {\n  if (!isValidProfile(profile)) {\n    return null;\n  }\n\n  return createProfilePayload(profile_id, start_timestamp, profile, event);\n}\n\n// TODO (v8): We need to obtain profile ids in @sentry-internal/tracing,\n// but we don't have access to this map because importing this map would\n// cause a circular dependancy. We need to resolve this in v8.\nconst PROFILE_MAP = new Map();\n/**\n *\n */\nfunction getActiveProfilesCount() {\n  return PROFILE_MAP.size;\n}\n\n/**\n * Retrieves profile from global cache and removes it.\n */\nfunction takeProfileFromGlobalCache(profile_id) {\n  const profile = PROFILE_MAP.get(profile_id);\n  if (profile) {\n    PROFILE_MAP.delete(profile_id);\n  }\n  return profile;\n}\n/**\n * Adds profile to global cache and evicts the oldest profile if the cache is full.\n */\nfunction addProfileToGlobalCache(profile_id, profile) {\n  PROFILE_MAP.set(profile_id, profile);\n\n  if (PROFILE_MAP.size > 30) {\n    const last = PROFILE_MAP.keys().next().value;\n    PROFILE_MAP.delete(last);\n  }\n}\n\nexport { MAX_PROFILE_DURATION_MS, addProfileToGlobalCache, addProfilesToEnvelope, applyDebugMetadata, convertJSSelfProfileToSampledFormat, createProfilePayload, createProfilingEvent, enrichWithThreadInformation, findProfiledTransactionsFromEnvelope, getActiveProfilesCount, isAutomatedPageLoadTransaction, isValidSampleRate, shouldProfileTransaction, startJSSelfProfile, takeProfileFromGlobalCache };\n//# sourceMappingURL=utils.js.map\n","import { spanToJSON } from '@sentry/core';\nimport { logger, timestampInSeconds, uuid4 } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { WINDOW } from '../helpers.js';\nimport { shouldProfileTransaction, isAutomatedPageLoadTransaction, startJSSelfProfile, MAX_PROFILE_DURATION_MS, addProfileToGlobalCache } from './utils.js';\n\n/* eslint-disable complexity */\n\n/**\n * Safety wrapper for startTransaction for the unlikely case that transaction starts before tracing is imported -\n * if that happens we want to avoid throwing an error from profiling code.\n * see https://github.com/getsentry/sentry-javascript/issues/4731.\n *\n * @experimental\n */\nfunction onProfilingStartRouteTransaction(transaction) {\n  if (!transaction) {\n    if (DEBUG_BUILD) {\n      logger.log('[Profiling] Transaction is undefined, skipping profiling');\n    }\n    return transaction;\n  }\n\n  if (shouldProfileTransaction(transaction)) {\n    return startProfileForTransaction(transaction);\n  }\n\n  return transaction;\n}\n\n/**\n * Wraps startTransaction and stopTransaction with profiling related logic.\n * startProfileForTransaction is called after the call to startTransaction in order to avoid our own code from\n * being profiled. Because of that same reason, stopProfiling is called before the call to stopTransaction.\n */\nfunction startProfileForTransaction(transaction) {\n  // Start the profiler and get the profiler instance.\n  let startTimestamp;\n  if (isAutomatedPageLoadTransaction(transaction)) {\n    startTimestamp = timestampInSeconds() * 1000;\n  }\n\n  const profiler = startJSSelfProfile();\n\n  // We failed to construct the profiler, fallback to original transaction.\n  // No need to log anything as this has already been logged in startProfile.\n  if (!profiler) {\n    return transaction;\n  }\n\n  if (DEBUG_BUILD) {\n    logger.log(`[Profiling] started profiling transaction: ${spanToJSON(transaction).description}`);\n  }\n\n  // We create \"unique\" transaction names to avoid concurrent transactions with same names\n  // from being ignored by the profiler. From here on, only this transaction name should be used when\n  // calling the profiler methods. Note: we log the original name to the user to avoid confusion.\n  const profileId = uuid4();\n\n  /**\n   * Idempotent handler for profile stop\n   */\n  async function onProfileHandler() {\n    // Check if the profile exists and return it the behavior has to be idempotent as users may call transaction.finish multiple times.\n    if (!transaction) {\n      return null;\n    }\n    // Satisfy the type checker, but profiler will always be defined here.\n    if (!profiler) {\n      return null;\n    }\n\n    return profiler\n      .stop()\n      .then((profile) => {\n        if (maxDurationTimeoutID) {\n          WINDOW.clearTimeout(maxDurationTimeoutID);\n          maxDurationTimeoutID = undefined;\n        }\n\n        if (DEBUG_BUILD) {\n          logger.log(`[Profiling] stopped profiling of transaction: ${spanToJSON(transaction).description}`);\n        }\n\n        // In case of an overlapping transaction, stopProfiling may return null and silently ignore the overlapping profile.\n        if (!profile) {\n          if (DEBUG_BUILD) {\n            logger.log(\n              `[Profiling] profiler returned null profile for: ${spanToJSON(transaction).description}`,\n              'this may indicate an overlapping transaction or a call to stopProfiling with a profile title that was never started',\n            );\n          }\n          return null;\n        }\n\n        addProfileToGlobalCache(profileId, profile);\n        return null;\n      })\n      .catch(error => {\n        if (DEBUG_BUILD) {\n          logger.log('[Profiling] error while stopping profiler:', error);\n        }\n        return null;\n      });\n  }\n\n  // Enqueue a timeout to prevent profiles from running over max duration.\n  let maxDurationTimeoutID = WINDOW.setTimeout(() => {\n    if (DEBUG_BUILD) {\n      logger.log(\n        '[Profiling] max profile duration elapsed, stopping profiling for:',\n        spanToJSON(transaction).description,\n      );\n    }\n    // If the timeout exceeds, we want to stop profiling, but not finish the transaction\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    onProfileHandler();\n  }, MAX_PROFILE_DURATION_MS);\n\n  // We need to reference the original end call to avoid creating an infinite loop\n  const originalEnd = transaction.end.bind(transaction);\n\n  /**\n   * Wraps startTransaction and stopTransaction with profiling related logic.\n   * startProfiling is called after the call to startTransaction in order to avoid our own code from\n   * being profiled. Because of that same reason, stopProfiling is called before the call to stopTransaction.\n   */\n  function profilingWrappedTransactionEnd() {\n    if (!transaction) {\n      return originalEnd();\n    }\n    // onProfileHandler should always return the same profile even if this is called multiple times.\n    // Always call onProfileHandler to ensure stopProfiling is called and the timeout is cleared.\n    void onProfileHandler().then(\n      () => {\n        // TODO: Can we rewrite this to use attributes?\n        // eslint-disable-next-line deprecation/deprecation\n        transaction.setContext('profile', { profile_id: profileId, start_timestamp: startTimestamp });\n        originalEnd();\n      },\n      () => {\n        // If onProfileHandler fails, we still want to call the original finish method.\n        originalEnd();\n      },\n    );\n\n    return transaction;\n  }\n\n  transaction.end = profilingWrappedTransactionEnd;\n  return transaction;\n}\n\nexport { onProfilingStartRouteTransaction, startProfileForTransaction };\n//# sourceMappingURL=hubextensions.js.map\n","import { defineIntegration, convertIntegrationFnToClass, getCurrentScope } from '@sentry/core';\nimport { logger } from '@sentry/utils';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { startProfileForTransaction } from './hubextensions.js';\nimport { isAutomatedPageLoadTransaction, shouldProfileTransaction, getActiveProfilesCount, findProfiledTransactionsFromEnvelope, takeProfileFromGlobalCache, createProfilingEvent, addProfilesToEnvelope } from './utils.js';\n\nconst INTEGRATION_NAME = 'BrowserProfiling';\n\nconst _browserProfilingIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      const scope = getCurrentScope();\n\n      // eslint-disable-next-line deprecation/deprecation\n      const transaction = scope.getTransaction();\n\n      if (transaction && isAutomatedPageLoadTransaction(transaction)) {\n        if (shouldProfileTransaction(transaction)) {\n          startProfileForTransaction(transaction);\n        }\n      }\n\n      if (typeof client.on !== 'function') {\n        logger.warn('[Profiling] Client does not support hooks, profiling will be disabled');\n        return;\n      }\n\n      client.on('startTransaction', (transaction) => {\n        if (shouldProfileTransaction(transaction)) {\n          startProfileForTransaction(transaction);\n        }\n      });\n\n      client.on('beforeEnvelope', (envelope) => {\n        // if not profiles are in queue, there is nothing to add to the envelope.\n        if (!getActiveProfilesCount()) {\n          return;\n        }\n\n        const profiledTransactionEvents = findProfiledTransactionsFromEnvelope(envelope);\n        if (!profiledTransactionEvents.length) {\n          return;\n        }\n\n        const profilesToAddToEnvelope = [];\n\n        for (const profiledTransaction of profiledTransactionEvents) {\n          const context = profiledTransaction && profiledTransaction.contexts;\n          const profile_id = context && context['profile'] && context['profile']['profile_id'];\n          const start_timestamp = context && context['profile'] && context['profile']['start_timestamp'];\n\n          if (typeof profile_id !== 'string') {\n            DEBUG_BUILD && logger.log('[Profiling] cannot find profile for a transaction without a profile context');\n            continue;\n          }\n\n          if (!profile_id) {\n            DEBUG_BUILD && logger.log('[Profiling] cannot find profile for a transaction without a profile context');\n            continue;\n          }\n\n          // Remove the profile from the transaction context before sending, relay will take care of the rest.\n          if (context && context['profile']) {\n            delete context.profile;\n          }\n\n          const profile = takeProfileFromGlobalCache(profile_id);\n          if (!profile) {\n            DEBUG_BUILD && logger.log(`[Profiling] Could not retrieve profile for transaction: ${profile_id}`);\n            continue;\n          }\n\n          const profileEvent = createProfilingEvent(\n            profile_id,\n            start_timestamp ,\n            profile,\n            profiledTransaction ,\n          );\n          if (profileEvent) {\n            profilesToAddToEnvelope.push(profileEvent);\n          }\n        }\n\n        addProfilesToEnvelope(envelope , profilesToAddToEnvelope);\n      });\n    },\n  };\n}) ;\n\nconst browserProfilingIntegration = defineIntegration(_browserProfilingIntegration);\n\n/**\n * Browser profiling integration. Stores any event that has contexts[\"profile\"][\"profile_id\"]\n * This exists because we do not want to await async profiler.stop calls as transaction.finish is called\n * in a synchronous context. Instead, we handle sending the profile async from the promise callback and\n * rely on being able to pull the event from the cache when we need to construct the envelope. This makes the\n * integration less reliable as we might be dropping profiles when the cache is full.\n *\n * @experimental\n * @deprecated Use `browserProfilingIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst BrowserProfilingIntegration = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  browserProfilingIntegration,\n) ;\n\n// eslint-disable-next-line deprecation/deprecation\n\nexport { BrowserProfilingIntegration, browserProfilingIntegration };\n//# sourceMappingURL=integration.js.map\n","import { init as init$1 } from '@sentry/browser';\nimport { applySdkMetadata } from '@sentry/core';\n\n/**\n * Inits the React SDK\n */\nfunction init(options) {\n  const opts = {\n    ...options,\n  };\n\n  applySdkMetadata(opts, 'react');\n\n  init$1(opts);\n}\n\nexport { init };\n//# sourceMappingURL=sdk.js.map\n","import { applySdkMetadata } from '@sentry/core';\nimport { init as init$1, getCurrentScope } from '@sentry/react';\nexport * from '@sentry/react';\nexport { captureRemixErrorBoundaryError } from './client/errors.js';\nexport { remixRouterInstrumentation, withSentry } from './client/performance.js';\nexport { browserTracingIntegration } from './client/browserTracingIntegration.js';\n\nfunction init(options) {\n  const opts = {\n    ...options,\n    environment: options.environment || process.env.NODE_ENV,\n  };\n\n  applySdkMetadata(opts, 'remix', ['remix', 'react']);\n\n  init$1(opts);\n\n  getCurrentScope().setTag('runtime', 'browser');\n}\n\nexport { init };\n//# sourceMappingURL=index.client.js.map\n","import { useLocation, useMatches } from '@remix-run/react'\nimport * as Sentry from '@sentry/remix'\nimport { useEffect } from 'react'\n\nexport function init() {\n\tSentry.init({\n\t\tdsn: ENV.SENTRY_DSN,\n\t\tenvironment: ENV.MODE,\n\t\tbeforeSend(event) {\n\t\t\tif (event.request?.url) {\n\t\t\t\tconst url = new URL(event.request.url)\n\t\t\t\tif (\n\t\t\t\t\turl.protocol === 'chrome-extension:' ||\n\t\t\t\t\turl.protocol === 'moz-extension:'\n\t\t\t\t) {\n\t\t\t\t\t// This error is from a browser extension, ignore it\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn event\n\t\t},\n\t\tintegrations: [\n\t\t\tnew Sentry.BrowserTracing({\n\t\t\t\troutingInstrumentation: Sentry.remixRouterInstrumentation(\n\t\t\t\t\tuseEffect,\n\t\t\t\t\tuseLocation,\n\t\t\t\t\tuseMatches,\n\t\t\t\t),\n\t\t\t}),\n\t\t\t// Replay is only available in the client\n\t\t\tnew Sentry.Replay(),\n\t\t\tnew Sentry.BrowserProfilingIntegration(),\n\t\t],\n\n\t\t// Set tracesSampleRate to 1.0 to capture 100%\n\t\t// of transactions for performance monitoring.\n\t\t// We recommend adjusting this value in production\n\t\ttracesSampleRate: 1.0,\n\n\t\t// Capture Replay for 10% of all sessions,\n\t\t// plus for 100% of sessions with an error\n\t\treplaysSessionSampleRate: 0.1,\n\t\treplaysOnErrorSampleRate: 1.0,\n\t})\n}\n"],"names":["isBrowser","isNodeEnv","isElectronNodeRenderer","GLOBAL_OBJ","_nullishCoalesce","lhs","rhsFn","getActiveTransaction","maybeHub","getCurrentHub","errorsInstrumented","registerErrorInstrumentation","addGlobalErrorInstrumentationHandler","errorCallback","addGlobalUnhandledRejectionInstrumentationHandler","activeTransaction","status","DEBUG_BUILD","logger","SpanStatus","Ok","DeadlineExceeded","Unauthenticated","PermissionDenied","NotFound","ResourceExhausted","InvalidArgument","Unimplemented","Unavailable","InternalError","UnknownError","Cancelled","AlreadyExists","FailedPrecondition","Aborted","OutOfRange","DataLoss","getSpanStatusFromHttpCode","httpStatus","setHttpStatus","span","spanStatus","SpanRecorder","maxlen","Span","spanContext","uuid4","timestampInSeconds","SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN","SEMANTIC_ATTRIBUTE_SENTRY_OP","name","description","traceId","spanId","string","sampled","attributes","startTime","endTime","op","origin","TRACE_FLAG_SAMPLED","TRACE_FLAG_NONE","childSpan","rootSpan","getRootSpan","opStr","nameStr","spanToJSON","idStr","logMessage","key","value","endTimestamp","spanTimeInputToSeconds","spanToTraceHeader","dropUndefinedKeys","spanToTraceContext","SEMANTIC_ATTRIBUTE_PROFILE_ID","data","hasData","hasAttributes","Transaction","transactionContext","hub","incomingDynamicSamplingContext","newName","SEMANTIC_ATTRIBUTE_SENTRY_SOURCE","SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE","metadata","source","context","unit","newMetadata","timestampInS","transaction","getDynamicSamplingContextFromSpan","client","finishedSpans","endTimes","prev","current","capturedSpanScope","capturedSpanIsolationScope","getCapturedScopesOnSpan","TRACING_DEFAULTS","FINISH_REASON_TAG","IDLE_TRANSACTION_FINISH_REASONS","IdleTransactionSpanRecorder","_pushActivity","_popActivity","transactionSpanId","originalEnd","rest","IdleTransaction","_idleHub","_idleTimeout","_finalTimeout","_heartbeatInterval","_onScope","delayAutoFinishUntilSignal","endTimestampInS","callback","spanStartedBeforeTransactionFinish","timeoutWithMarginOfError","spanEndedBeforeFinalTimeout","stringifiedSpan","scope","pushActivity","id","popActivity","restartOnChildSpanChange","reason","heartbeatString","sampleTransaction","options","samplingContext","hasTracingEnabled","sampleRate","isValidSampleRate","rate","isNaN","traceHeaders","_startTransaction","customSamplingContext","configInstrumenter","transactionInstrumenter","startIdleTransaction","idleTimeout","finalTimeout","onScope","heartbeatInterval","addTracingExtensions","carrier","getMainCarrier","setMeasurement","isSentryRequestUrl","url","hubOrClient","isHub","dsn","tunnel","checkDsn","checkTunnel","removeTrailingSlash","str","WINDOW","registerBackgroundTabDetection","statusType","bindReporter","metric","reportAllChanges","prevValue","delta","forceReport","generateUniqueID","getNavigationEntryFromPerformanceTiming","timing","type","navigationEntry","getNavigationEntry","getActivationStart","navEntry","initMetric","navigationType","observe","opts","po","list","onHidden","cb","once","onHiddenOrPageHide","event","onCLS","onReport","report","sessionValue","sessionEntries","handleEntries","entries","entry","firstSessionEntry","lastSessionEntry","stopListening","firstHiddenTime","initHiddenTime","trackChanges","timeStamp","getVisibilityWatcher","onFID","visibilityWatcher","handleEntry","reportedMetricIDs","onLCP","lastEntry","handlers","instrumented","_previousCls","_previousFid","_previousLcp","addClsInstrumentationHandler","stopOnCallback","addMetricObserver","instrumentCls","addLcpInstrumentationHandler","instrumentLcp","addFidInstrumentationHandler","instrumentFid","addPerformanceInstrumentationHandler","addHandler","instrumentPerformanceObserver","getCleanupCallback","triggerHandlers","typeHandlers","handler","e","getFunctionName","instrumentFn","previousValue","index","isMeasurementValue","_startChild","startTimestamp","ctx","MAX_INT_AS_BYTES","msToSec","time","getBrowserPerformanceAPI","_performanceCursor","_measurements","_lcpEntry","_clsEntry","startTrackingWebVitals","performance","browserPerformanceTimeOrigin","fidCallback","_trackFID","clsCallback","_trackCLS","lcpCallback","_trackLCP","startTrackingLongTasks","duration","startTrackingInteractions","htmlTreeAsString","componentName","getComponentName","timeOrigin","addPerformanceEntries","performanceEntries","responseStartTimestamp","requestStartTimestamp","transactionStartTime","_addNavigationSpans","_addMeasureSpans","firstHidden","shouldRecord","_addResourceSpans","_trackNavigator","_addTtfbToMeasurements","oldValue","measurementTimestamp","normalizedValue","fidMark","measurementName","_tagMetricInfo","measureStartTimestamp","measureEndTimestamp","_addPerformanceNavigationTiming","_addRequest","eventEnd","end","start","resourceUrl","parsedUrl","parseUrl","setResourceEntrySizeData","navigator","connection","dataKey","entryVal","instrumentFetchRequest","handlerData","shouldCreateSpan","shouldAttachHeaders","spans","spanOrigin","shouldCreateSpanResult","contentLength","contentLengthNum","getCurrentScope","getClient","method","startInactiveSpan","request","addTracingHeadersToFetchRequest","requestSpan","isolationScope","getIsolationScope","dsc","sentryTraceHeader","generateSentryTraceHeader","sentryBaggageHeader","dynamicSamplingContextToSentryBaggageHeader","getDynamicSamplingContextFromClient","headers","isInstanceOf","newHeaders","BAGGAGE_HEADER_NAME","existingBaggageHeader","newBaggageHeaders","DEFAULT_TRACE_PROPAGATION_TARGETS","defaultRequestInstrumentationOptions","instrumentOutgoingRequests","_options","traceFetch","traceXHR","tracePropagationTargets","tracingOrigins","shouldCreateSpanForRequest","enableHTTPTimings","_","shouldAttachHeadersWithTargets","addFetchInstrumentationHandler","createdSpan","addHTTPTimings","addXhrInstrumentationHandler","xhrCallback","isPerformanceResourceTiming","cleanup","resourceTimingEntryToSpanData","extractNetworkProtocol","nextHopProtocol","version","_name","char","getAbsoluteTime","resourceTiming","timingSpanData","stringMatchesSomePattern","xhr","sentryXhrData","SENTRY_XHR_DATA_KEY","setHeaderOnXhr","instrumentRoutingWithDefaults","customStartTransaction","startTransactionOnPageLoad","startTransactionOnLocationChange","startingUrl","addHistoryInstrumentationHandler","to","from","BROWSER_TRACING_INTEGRATION_ID","DEFAULT_BROWSER_TRACING_OPTIONS","BrowserTracing","clientOptions","instrumentRouting","markBackgroundTransactions","_experiments","clientOptionsTracePropagationTargets","beforeNavigate","isPageloadTransaction","expandedContext","sentryTrace","getMetaContent","baggage","parentSpanId","propagationContextFromHeaders","modifiedContext","finalContext","getSource","location","idleTransaction","inflightInteractionTransaction","registerInteractionTransaction","currentTransaction","metaName","metaTag","getDomElement","sourceFromAttributes","sourceFromData","sourceFromMetadata","REPLAY_SESSION_KEY","REPLAY_EVENT_NAME","UNABLE_TO_SEND_REPLAY","SESSION_IDLE_PAUSE_DURATION","SESSION_IDLE_EXPIRE_DURATION","DEFAULT_FLUSH_MIN_DELAY","DEFAULT_FLUSH_MAX_DELAY","BUFFER_CHECKOUT_TIME","RETRY_BASE_INTERVAL","RETRY_MAX_COUNT","NETWORK_BODY_MAX_SIZE","CONSOLE_ARG_MAX_SIZE","SLOW_CLICK_THRESHOLD","SLOW_CLICK_SCROLL_TIMEOUT","REPLAY_MAX_EVENT_BUFFER_SIZE","MIN_REPLAY_DURATION","MIN_REPLAY_DURATION_LIMIT","MAX_REPLAY_DURATION","_nullishCoalesce$1","_optionalChain$5","ops","lastAccessLHS","i","fn","args","NodeType$1","NodeType","isElement$1","n","isShadowRoot","host","_2","isNativeShadowDom","shadowRoot","fixBrowserCompatibilityIssuesInCSS","cssText","escapeImportStatement","rule","statement","stringifyStylesheet","s","rules","stringifyRule","importStringified","isCSSImportRule","isCSSStyleRule","fixSafariColons","cssStringified","regex","Mirror","_3","_4","_5","childNode","node","meta","oldNode","createMirror","shouldMaskInput","maskInputOptions","tagName","maskInputValue","isMasked","element","maskInputFn","text","toLowerCase","toUpperCase","ORIGINAL_ATTRIBUTE_NAME","is2DCanvasBlank","canvas","chunkSize","x","y","getImageData","originalGetImageData","pixel","getInputType","getInputValue","el","_id","tagNameRegex","IGNORED_NODE","genId","getValidTagName","processedTagName","extractOrigin","canvasService","canvasCtx","URL_IN_CSS_REF","URL_PROTOCOL_MATCH","URL_WWW_MATCH","DATA_URI","absoluteToStylesheet","href","quote1","path1","quote2","path2","path3","filePath","maybeQuote","stack","parts","part","SRCSET_NOT_SPACES","SRCSET_COMMAS_OR_SPACES","getAbsoluteSrcsetString","doc","attributeValue","pos","collectCharacters","regEx","chars","match","output","absoluteToDoc","descriptorsStr","inParens","c","a","isSVGElement","getHref","transformAttribute","maskAttributeFn","ignoreAttribute","_value","_isBlockedElement","blockClass","blockSelector","unblockSelector","eIndex","className","elementClassMatchesRegex","distanceToMatch","matchPredicate","limit","distance","createMatchPredicate","selector","needMaskingText","maskTextClass","maskTextSelector","unmaskTextClass","unmaskTextSelector","maskAllText","autocomplete","maskDistance","unmaskDistance","onceIframeLoaded","iframeEl","listener","iframeLoadTimeout","win","fired","readyState","timer","blankUrl","onceStylesheetLoaded","link","styleSheetLoadTimeout","styleSheetLoaded","serializeNode","mirror","inlineStylesheet","maskTextFn","dataURLOptions","inlineImages","recordCanvas","keepIframeSrcFn","newlyAddedElement","rootId","getRootId","serializeElementNode","serializeTextNode","docId","parentTagName","textContent","isStyle","isScript","isTextarea","_6","_7","_8","err","forceMask","isInputMasked","needBlock","len","attr","stylesheet","checked","canvasDataURL","blankCanvas","blankCanvasDataURL","image","recordInlineImage","width","height","isCustomElement","lowerIfExists","maybeAttr","slimDOMExcluded","sn","slimDOMOptions","serializeNodeWithId","skipChild","onSerialize","onIframeLoad","onStylesheetLoad","stylesheetLoadTimeout","preserveWhiteSpace","_serializedNode","serializedNode","recordChild","bypassOptions","childN","serializedChildNode","iframeDoc","serializedIframeNode","serializedLinkNode","snapshot","maskAllInputs","slimDOM","_optionalChain$4","on","target","DEPARTED_MIRROR_ACCESS_WARNING","_mirror","prop","receiver","throttle$1","func","wait","timeout","previous","now","remaining","hookSetter","d","isRevoked","original","patch","replacement","wrapped","nowTimestamp","getWindowScroll","_9","_10","_11","_12","_13","_14","getWindowHeight","getWindowWidth","isBlocked","checkAncestors","blockedPredicate","isUnblocked","blockDistance","unblockDistance","isSerialized","isIgnored","isAncestorRemoved","legacy_isTouchEvent","polyfill","isSerializedIframe","isSerializedStylesheet","hasShadowRoot","_18","StyleSheetMirror","newId","getShadowHost","shadowHost","_19","_20","_21","getRootShadowHost","rootShadowHost","shadowHostInDom","inDom","cachedRequestAnimationFrameImplementation","getRequestAnimationFrameImplementation","document","requestAnimationFrameImplementation","sandbox","contentWindow","onRequestAnimationFrame","EventType","EventType2","IncrementalSource","IncrementalSource2","MouseInteractions","MouseInteractions2","PointerTypes","PointerTypes2","_optionalChain$3","isNodeInLinkedList","DoubleLinkedList","position","moveKey","parentId","MutationBuffer","mutations","adds","addedIds","addList","getNextId","ns","nextId","pushAdd","currentN","iframe","childSn","isParentRemoved","isAncestorInSet","candidate","tailNode","_node","unhandledNode","payload","attribute","diffAsStr","unchangedAsStr","m","unattachedDoc","attributeName","item","old","pname","newValue","newPriority","nodeId","deepDelete","targetId","addsSet","removes","_isParentRemoved","parentNode","r","set","_isAncestorInSet","errorHandler","registerErrorHandler","unregisterErrorHandler","callbackWrapper","error","_optionalChain$2","mutationBuffers","getEventTarget","path","initMutationObserver","rootEl","mutationBuffer","mutationObserverCtor","angularZoneSymbol","observer","initMoveObserver","mousemoveCb","sampling","threshold","callbackThreshold","positions","timeBaseline","wrappedCb","totalOffset","p","updatePosition","evt","clientX","clientY","h","initMouseInteractionObserver","mouseInteractionCb","disableMap","currentPointerType","getHandler","eventKey","pointerType","thisEventKey","eventName","initScrollObserver","scrollCb","scrollLeftTop","initViewportResizeObserver","viewportResizeCb","lastH","lastW","updateDimension","INPUT_TAGS","lastInputValueMap","initInputObserver","inputCb","ignoreClass","ignoreSelector","userTriggeredOnInput","eventHandler","userTriggered","isChecked","cbWithDedup","v","lastInputValue","currentWindow","propertyDescriptor","hookProperties","getNestedCSSRulePositions","recurse","childRule","hasNestedCSSRule","getIdAndStyleId","sheet","styleMirror","styleId","initStyleSheetObserver","styleSheetRuleCb","stylesheetManager","insertRule","thisArg","argumentsList","deleteRule","replace","replaceSync","supportedNestedCSSRuleTypes","canMonkeyPatchNestedCSSRule","unmodifiedFunctions","typeKey","initAdoptedStyleSheetObserver","hostId","patchTarget","originalPropertyDescriptor","sheets","result","_15","_16","initStyleDeclarationObserver","styleDeclarationCb","ignoreCSSAttributes","setProperty","property","priority","_17","removeProperty","initMediaInteractionObserver","mediaInteractionCb","currentTime","volume","muted","playbackRate","initFontObserver","fontCb","fontMap","originalFontFace","family","descriptors","fontFace","restoreHandler","initSelectionObserver","param","selectionCb","collapsed","updateSelection","selection","ranges","count","range","startContainer","startOffset","endContainer","endOffset","initCustomElementObserver","customElementCb","constructor","initObservers","o","_hooks","mutationObserver","mousemoveHandler","mouseInteractionHandler","scrollHandler","viewportResizeHandler","inputHandler","mediaInteractionHandler","styleSheetObserver","adoptedStyleSheetObserver","styleDeclarationObserver","fontObserver","selectionObserver","customElementObserver","pluginHandlers","plugin","b","CrossOriginIframeMirror","generateIdFn","remoteId","idToRemoteMap","remoteToIdMap","idToRemoteIdMap","remoteIdToIdMap","map","ids","_optionalChain$1","IframeManagerNoop","IframeManager","message","crossOriginMessageEvent","transformedEvent","style","iframeMirror","obj","keys","child","ShadowDomManagerNoop","ShadowDomManager","iframeElement","manager","option","CanvasManagerNoop","StylesheetManager","linkEl","adoptedStyleSheetData","styles","ProcessedNodeManager","thisBuffer","buffers","buffer","wrapEvent","eWithTime","_takeFullSnapshot","record","emit","checkoutEveryNms","checkoutEveryNth","_maskInputOptions","_slimDOMOptions","packFn","mousemoveWait","recordCrossOriginIframes","recordAfter","collectFonts","plugins","onMutation","getCanvasManager","inEmittingFrame","passEmitsToParent","lastFullSnapshotEvent","incrementalSnapshotCount","eventProcessor","wrappedEmit","isCheckout","_optionalChain","buf","exceedCount","exceedTime","takeFullSnapshot","wrappedMutationEmit","wrappedScrollEmit","wrappedCanvasMutationEmit","wrappedAdoptedStyleSheetEmit","iframeManager","processedNodeManager","canvasManager","_getCanvasManager","shadowDomManager","init","getCanvasManagerFn","ReplayEventTypeIncrementalSnapshot","ReplayEventTypeCustom","timestampToMs","timestamp","timestampToS","addBreadcrumbEvent","replay","breadcrumb","normalize","INTERACTIVE_SELECTOR","getClosestInteractive","getClickTargetNode","getTargetNode","isEventWithTarget","onWindowOpen","monkeyPatchWindowOpen","fill","originalWindowOpen","handleClick","clickDetector","clickBreadcrumb","ClickDetector","slowClickConfig","_addBreadcrumbEvent","cleanupWindowOpen","nowInSeconds","ignoreElement","isClickBreadcrumb","newClick","click","timedOutClicks","hadScroll","hadMutation","isSlowClick","clickCount","timeAfterClickMs","endReason","SLOW_CLICK_TAGS","updateClickDetectorForRecordingEvent","isIncrementalEvent","isIncrementalMouseInteraction","createBreadcrumb","ATTRIBUTES_TO_RECORD","getAttributesToRecord","normalizedKey","handleDomListener","handleDom","isClick","getBaseDomBreadcrumb","isElement","getDomTarget","handleKeyboardEvent","getKeyboardBreadcrumb","metaKey","shiftKey","ctrlKey","altKey","isInputElement","hasModifierKey","isCharacterKey","baseBreadcrumb","ENTRY_TYPES","createResourceEntry","createPaintEntry","createNavigationEntry","createPerformanceEntries","createPerformanceEntry","entryType","decodedBodySize","domComplete","encodedBodySize","domContentLoadedEventStart","domContentLoadedEventEnd","domInteractive","loadEventStart","loadEventEnd","redirectCount","transferSize","initiatorType","responseEnd","responseStatus","getLargestContentfulPaint","setupPerformanceObserver","addPerformanceEntry","onEntries","clearCallbacks","clearCallback","logInfo","shouldAddBreadcrumb","addLogBreadcrumb","logInfoNextTick","addBreadcrumb","EventBufferSizeExceededError","EventBufferArray","eventSize","resolve","eventsRet","WorkerHandler","worker","reject","arg","response","EventBufferCompressionWorker","EventBufferProxy","events","hasCheckout","addEventPromises","createEventBuffer","useCompression","customWorkerUrl","_loadWorker","workerUrl","_getWorkerUrl","hasSessionStorage","clearSession","deleteSession","isSampled","makeSession","session","started","lastActivity","segmentId","previousSessionId","saveSession","getSessionSampleType","sessionSampleRate","allowBuffering","createSession","stickySession","fetchSession","traceInternals","sessionStringFromStorage","sessionObj","isExpired","initialTime","expiry","targetTime","isSessionExpired","maxReplayDuration","sessionIdleExpire","shouldRefreshSession","loadOrCreateSession","sessionOptions","existingSession","isCustomEvent","addEventSync","shouldAddEvent","_addEvent","addEvent","replayOptions","eventAfterPossibleCallback","maybeApplyCallback","timestampInMs","isErrorEvent","isTransactionEvent","isReplayEvent","isFeedbackEvent","handleAfterSendEvent","enforceStatusCode","isBaseTransportSend","sendResponse","statusCode","handleTransactionEvent","handleErrorEvent","replayContext","beforeErrorSampling","transport","handleBeforeSendEvent","handleHydrationError","exceptionValue","isRrwebError","hint","addFeedbackBreadcrumb","shouldSampleForBufferEvent","handleGlobalEventListener","includeAfterSendEventHandling","afterSendHandler","createPerformanceSpans","handleHistory","handleHistorySpanListener","shouldFilterRequest","addNetworkBreadcrumb","handleFetch","fetchData","handleFetchSpanListener","handleXhr","handleXhrSpanListener","getBodySize","body","textEncoder","formDataStr","_serializeFormData","parseContentLengthHeader","header","size","getBodyString","mergeWarning","info","warning","newMeta","existingWarnings","makeNetworkReplayBreadcrumb","buildSkippedNetworkRequestOrResponse","bodySize","buildNetworkRequestOrResponse","normalizedBody","warnings","normalizeNetworkBody","getAllowedHeaders","allowedHeaders","filteredHeaders","formData","exceedsSizeLimit","isProbablyJson","_strIsProbablyJson","truncatedBody","first","last","urlMatches","urls","fullUrl","getFullUrl","baseURI","fixedUrl","captureFetchBreadcrumbToReplay","_prepareFetchData","enrichFetchBreadcrumb","input","_getFetchRequestArgBody","reqSize","resSize","requestBodySize","responseBodySize","captureDetails","_getRequestInfo","_getResponseInfo","networkCaptureBodies","networkRequestHeaders","getRequestHeaders","requestBody","bodyStr","networkResponseHeaders","getAllHeaders","bodyText","_parseFetchResponseBody","getResponseData","res","_tryCloneResponse","_tryGetResponseText","fetchArgs","allHeaders","getHeadersFromOptions","_getResponseText","txt","captureXhrBreadcrumbToReplay","_prepareXhrData","enrichXhrBreadcrumb","_getBodySize","xhrInfo","getResponseHeaders","requestWarning","responseBody","responseWarning","_getXhrResponseBody","acc","line","errors","_parseXhrResponse","responseType","handleNetworkBreadcrumbs","networkDetailAllowUrls","networkDetailDenyUrls","beforeAddNetworkBreadcrumb","_isXhrBreadcrumb","_isXhrHint","_isFetchBreadcrumb","_isFetchHint","_LAST_BREADCRUMB","isBreadcrumbWithCategory","handleScopeListener","handleScope","newBreadcrumb","normalizeConsoleBreadcrumb","isTruncated","normalizedArgs","normalizedArg","addGlobalListeners","addClickKeypressInstrumentationHandler","hasHooks","addEventProcessor","replayId","feedbackEvent","addMemoryEntry","createMemoryEntry","memoryEntry","jsHeapSizeLimit","totalJSHeapSize","usedJSHeapSize","debounce","callbackReturnValue","timerId","maxTimerId","maxWait","invokeFunc","cancelTimers","flush","debounced","getHandleRecordingEmit","hadFirstEvent","_isCheckout","addSettingsEvent","earliestEvent","createOptionsEvent","createReplayEnvelope","replayEvent","recordingData","createEnvelope","createEventEnvelopeHeaders","getSdkMetadataForEnvelopeHeader","prepareRecordingData","payloadWithSequence","replayHeaders","sequence","prepareReplayEvent","event_id","integrations","eventHint","preparedEvent","prepareEvent","sendReplayRequest","segment_id","eventContext","preparedRecordingData","errorIds","traceIds","initialTimestamp","baseEvent","envelope","TransportStatusCodeError","rateLimits","updateRateLimits","isRateLimited","RateLimitError","sendReplay","replayData","retryConfig","setContext","captureException","THROTTLED","SKIPPED","throttle","maxCount","durationSeconds","counter","_cleanup","_getTotalCount","isThrottled","wasThrottled","ReplayContainer","recordingOptions","slowClickTimeout","slowClickIgnoreSelectors","errorSampleRate","canvasOptions","forceFlush","continueRecording","activityTime","hasStoppedRecording","cbResult","urlPath","lastTransaction","currentSession","_lastActivity","eventBuffer","_context","force","tooShort","tooLong","mutationLimit","mutationBreadcrumbLimit","overMutationLimit","getOption","selectors","defaultSelectors","deprecatedClassOption","deprecatedSelectorOption","deprecatedSelectors","allSelectors","consoleSandbox","getPrivacyOptions","mask","unmask","block","unblock","ignore","defaultBlockedElements","maskSelector","unmaskSelector","maskAttribute","maskAttributes","privacyOptions","MEDIA_SELECTORS","DEFAULT_NETWORK_HEADERS","_initialized","Replay","flushMinDelay","flushMaxDelay","minReplayDuration","blockAllMedia","maskFn","beforeAddRecordingEvent","_getMergedNetworkHeaders","finalOptions","loadReplayOptionsFromClient","canvasIntegration","initialOptions","opt","MS_TO_NS","THREAD_ID_STRING","THREAD_NAME","OS_PLATFORM","OS_PLATFORM_VERSION","OS_ARCH","OS_BROWSER","OS_MODEL","OS_LOCALE","isUserAgentData","userAgentData","ua","firstUa","isProcessedJSSelfProfile","profile","enrichWithThreadInformation","convertJSSelfProfileToSampledFormat","getTraceId","createProfilePayload","profile_id","start_timestamp","processed_profile","enrichedThreadProfile","transactionStartMs","transactionEndMs","DEFAULT_ENVIRONMENT","applyDebugMetadata","isAutomatedPageLoadTransaction","EMPTY_STACK_ID","STACK_ID","adjustForOriginChange","jsSample","stackTop","frame","sample","addProfilesToEnvelope","profiles","findProfiledTransactionsFromEnvelope","forEachEnvelopeItem","j","debugIdStackParserCache","resource_paths","debugIdMap","stackParser","debugIdStackFramesCache","cachedDebugIdStackFrameCache","filenameDebugIdMap","debugIdStackTrace","parsedStack","cachedParsedStack","stackFrame","file","images","isValidProfile","PROFILING_CONSTRUCTOR_FAILED","MAX_PROFILE_DURATION_MS","isJSProfilerSupported","maybeProfiler","startJSSelfProfile","JSProfilerConstructor","samplingIntervalMS","maxSamples","shouldProfileTransaction","profilesSampleRate","createProfilingEvent","PROFILE_MAP","getActiveProfilesCount","takeProfileFromGlobalCache","addProfileToGlobalCache","startProfileForTransaction","profiler","profileId","onProfileHandler","maxDurationTimeoutID","profilingWrappedTransactionEnd","INTEGRATION_NAME","_browserProfilingIntegration","profiledTransactionEvents","profilesToAddToEnvelope","profiledTransaction","profileEvent","browserProfilingIntegration","defineIntegration","BrowserProfilingIntegration","convertIntegrationFnToClass","applySdkMetadata","init$1","Sentry.init","_a","Sentry.BrowserTracing","Sentry.remixRouterInstrumentation","useEffect","useLocation","useMatches","Sentry.Replay","Sentry.BrowserProfilingIntegration"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38]}