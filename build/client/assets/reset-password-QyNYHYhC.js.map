{"version":3,"file":"reset-password-QyNYHYhC.js","sources":["../../../app/routes/_auth+/reset-password.tsx"],"sourcesContent":["import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport {\n\tjson,\n\tredirect,\n\ttype ActionFunctionArgs,\n\ttype LoaderFunctionArgs,\n\ttype MetaFunction,\n} from '@remix-run/node'\nimport { Form, useActionData, useLoaderData } from '@remix-run/react'\nimport { GeneralErrorBoundary } from '#app/components/error-boundary.tsx'\nimport { ErrorList, Field } from '#app/components/forms.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { requireAnonymous, resetUserPassword } from '#app/utils/auth.server.ts'\nimport { useIsPending } from '#app/utils/misc.tsx'\nimport { PasswordAndConfirmPasswordSchema } from '#app/utils/user-validation.ts'\nimport { verifySessionStorage } from '#app/utils/verification.server.ts'\n\nexport const resetPasswordUsernameSessionKey = 'resetPasswordUsername'\n\nconst ResetPasswordSchema = PasswordAndConfirmPasswordSchema\n\nasync function requireResetPasswordUsername(request: Request) {\n\tawait requireAnonymous(request)\n\tconst verifySession = await verifySessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tconst resetPasswordUsername = verifySession.get(\n\t\tresetPasswordUsernameSessionKey,\n\t)\n\tif (typeof resetPasswordUsername !== 'string' || !resetPasswordUsername) {\n\t\tthrow redirect('/login')\n\t}\n\treturn resetPasswordUsername\n}\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n\tconst resetPasswordUsername = await requireResetPasswordUsername(request)\n\treturn json({ resetPasswordUsername })\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n\tconst resetPasswordUsername = await requireResetPasswordUsername(request)\n\tconst formData = await request.formData()\n\tconst submission = parseWithZod(formData, {\n\t\tschema: ResetPasswordSchema,\n\t})\n\tif (submission.status !== 'success') {\n\t\treturn json(\n\t\t\t{ result: submission.reply() },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\tconst { password } = submission.value\n\n\tawait resetUserPassword({ username: resetPasswordUsername, password })\n\tconst verifySession = await verifySessionStorage.getSession()\n\treturn redirect('/login', {\n\t\theaders: {\n\t\t\t'set-cookie': await verifySessionStorage.destroySession(verifySession),\n\t\t},\n\t})\n}\n\nexport const meta: MetaFunction = () => {\n\treturn [{ title: 'Reset Password | Epic Notes' }]\n}\n\nexport default function ResetPasswordPage() {\n\tconst data = useLoaderData<typeof loader>()\n\tconst actionData = useActionData<typeof action>()\n\tconst isPending = useIsPending()\n\n\tconst [form, fields] = useForm({\n\t\tid: 'reset-password',\n\t\tconstraint: getZodConstraint(ResetPasswordSchema),\n\t\tlastResult: actionData?.result,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: ResetPasswordSchema })\n\t\t},\n\t\tshouldRevalidate: 'onBlur',\n\t})\n\n\treturn (\n\t\t<div className=\"container flex flex-col justify-center pb-32 pt-20\">\n\t\t\t<div className=\"text-center\">\n\t\t\t\t<h1 className=\"text-h1\">Password Reset</h1>\n\t\t\t\t<p className=\"mt-3 text-body-md text-muted-foreground\">\n\t\t\t\t\tHi, {data.resetPasswordUsername}. No worries. It happens all the time.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div className=\"mx-auto mt-16 min-w-full max-w-sm sm:min-w-[368px]\">\n\t\t\t\t<Form method=\"POST\" {...getFormProps(form)}>\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\thtmlFor: fields.password.id,\n\t\t\t\t\t\t\tchildren: 'New Password',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t...getInputProps(fields.password, { type: 'password' }),\n\t\t\t\t\t\t\tautoComplete: 'new-password',\n\t\t\t\t\t\t\tautoFocus: true,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terrors={fields.password.errors}\n\t\t\t\t\t/>\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\thtmlFor: fields.confirmPassword.id,\n\t\t\t\t\t\t\tchildren: 'Confirm Password',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t...getInputProps(fields.confirmPassword, { type: 'password' }),\n\t\t\t\t\t\t\tautoComplete: 'new-password',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terrors={fields.confirmPassword.errors}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<ErrorList errors={form.errors} id={form.errorId} />\n\n\t\t\t\t\t<StatusButton\n\t\t\t\t\t\tclassName=\"w-full\"\n\t\t\t\t\t\tstatus={isPending ? 'pending' : form.status ?? 'idle'}\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tdisabled={isPending}\n\t\t\t\t\t>\n\t\t\t\t\t\tReset password\n\t\t\t\t\t</StatusButton>\n\t\t\t\t</Form>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport function ErrorBoundary() {\n\treturn <GeneralErrorBoundary />\n}\n"],"names":["ResetPasswordSchema","PasswordAndConfirmPasswordSchema","ResetPasswordPage","data","useLoaderData","actionData","isPending","useIsPending","form","fields","useForm","formData","parseWithZod","jsxs","jsx","Form","getFormProps","Field","getInputProps","ErrorList","StatusButton","ErrorBoundary","GeneralErrorBoundary"],"mappings":"2tBAYA,MAAAA,EAA6BC,QAEpB,CAAoB,CAC7B,MAAiD,6BACjD,CAAA,EAI4B,SAAAC,GAAA,CAE5B,MAAAC,EAAeC,IACRC,MACAC,EAAAC,IACL,CAAAC,EAAgBC,CAAA,EAAYC,EAAA,CAC7B,GAAA,iBACA,aAA4CV,CAAA,EAC3C,WAAAK,GAAA,YAAAA,EAAA,OACD,WAAA,CACI,SAAAM,CACH,EAAA,CACD,OAAAC,EAAAD,EAAA,CACO,OAAAX,CACR,CAAA,CAEsB,EACf,iBAAA,QACN,CAAO,EACR,OAAAa,EAAAA,KAAA,MAAA,CAEsB,UAAA,qDACf,SAAA,CAAAA,EAA8B,KAAA,MAAA,CAC9B,UAAA,cACA,SAAA,GAAoC,IAAA,KAAA,CACjC,UAAA,UACR,SAAA,gBACD,CAAI,IAAiC,KAAA,IAAA,CAC7B,UAAA,0CACJ,SAAmB,CAAA,OAAAV,EAAA,sBAAQ,wCAAA,CAAA,EAC3B,CAAkD,CACrD,EAAAW,EAAA,IAAA,MAAA,CACD,UAAA,qDACM,SAA0BD,EAAA,KAAAE,EAAA,CAE1B,OAAkB,OAClB,GAAAC,EAAgBR,CAAM,EAC5B,SAAgB,CAAUM,EAAA,IAAAG,EAAA,CAChB,WAAA,CACM,QAAAR,EAA2B,SAAA,GAC1C,SAAA,cACA,EACF,WAAA,CAEO,KAAiCA,EAAA,SAAA,CACtB,KAAA,UAClB,CAAA,EAEA,aAA4C,yBACD,aAEX,SAAA,MAE/B,CAAO,EAAwBK,EAAA,IAAAG,EAAA,CAC1B,WAAA,CACJ,0BAAgD,YACxB,kBACxB,EACC,WAAoB,CACrB,GAAAC,EAAAT,EAAA,gBAAA,CACkB,KAAA,UAAA,CAClB,EAGA,aAAA,cACE,EACC,OAAAA,EAAA,gBAAa,MAAwB,CACtC,EAACK,EAAE,IAAAK,EAAA,CAAoD,OAAAX,EAAA,OAC5C,GAAAA,EAAA,OAAA,CAAsB,EAAAM,EAAA,IAAAM,EAAA,CACjC,UAAA,SACD,OAAAd,EAAA,UAAAE,EAAA,QAAA,OACA,KAAA,SAEE,SAAAF,EAAC,SAAA,gBAAA,CAAA,CAAA,CAAA,CAAA,CACY,CACX,CAAA,CAAyB,CAAA,CACf,CACX,SACYe,GAAA,CAAA,OACMP,EAAA,IAAAQ,EAAmB,CAAA,CAAA,CAAkB"}