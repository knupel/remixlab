{"version":3,"file":"notes._noteId-uHOfRpqX.js","sources":["../../../app/routes/users+/$username_+/notes.$noteId.tsx"],"sourcesContent":["import { getFormProps, useForm } from '@conform-to/react'\nimport { parseWithZod } from '@conform-to/zod'\nimport { invariantResponse } from '@epic-web/invariant'\nimport {\n\tjson,\n\ttype LoaderFunctionArgs,\n\ttype ActionFunctionArgs,\n} from '@remix-run/node'\nimport {\n\tForm,\n\tLink,\n\tuseActionData,\n\tuseLoaderData,\n\ttype MetaFunction,\n} from '@remix-run/react'\nimport { formatDistanceToNow } from 'date-fns'\nimport { z } from 'zod'\nimport { GeneralErrorBoundary } from '#app/components/error-boundary.tsx'\nimport { floatingToolbarClassName } from '#app/components/floating-toolbar.tsx'\nimport { ErrorList } from '#app/components/forms.tsx'\nimport { Button } from '#app/components/ui/button.tsx'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { requireUserId } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { getNoteImgSrc, useIsPending } from '#app/utils/misc.tsx'\nimport { requireUserWithPermission } from '#app/utils/permissions.server.ts'\nimport { redirectWithToast } from '#app/utils/toast.server.ts'\nimport { userHasPermission, useOptionalUser } from '#app/utils/user.ts'\nimport { type loader as notesLoader } from './notes.tsx'\n\nexport async function loader({ params }: LoaderFunctionArgs) {\n\tconst note = await prisma.note.findUnique({\n\t\twhere: { id: params.noteId },\n\t\tselect: {\n\t\t\tid: true,\n\t\t\ttitle: true,\n\t\t\tcontent: true,\n\t\t\townerId: true,\n\t\t\tupdatedAt: true,\n\t\t\timages: {\n\t\t\t\tselect: {\n\t\t\t\t\tid: true,\n\t\t\t\t\taltText: true,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t})\n\n\tinvariantResponse(note, 'Not found', { status: 404 })\n\n\tconst date = new Date(note.updatedAt)\n\tconst timeAgo = formatDistanceToNow(date)\n\n\treturn json({\n\t\tnote,\n\t\ttimeAgo,\n\t})\n}\n\nconst DeleteFormSchema = z.object({\n\tintent: z.literal('delete-note'),\n\tnoteId: z.string(),\n})\n\nexport async function action({ request }: ActionFunctionArgs) {\n\tconst userId = await requireUserId(request)\n\tconst formData = await request.formData()\n\tconst submission = parseWithZod(formData, {\n\t\tschema: DeleteFormSchema,\n\t})\n\tif (submission.status !== 'success') {\n\t\treturn json(\n\t\t\t{ result: submission.reply() },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\n\tconst { noteId } = submission.value\n\n\tconst note = await prisma.note.findFirst({\n\t\tselect: { id: true, ownerId: true, owner: { select: { username: true } } },\n\t\twhere: { id: noteId },\n\t})\n\tinvariantResponse(note, 'Not found', { status: 404 })\n\n\tconst isOwner = note.ownerId === userId\n\tawait requireUserWithPermission(\n\t\trequest,\n\t\tisOwner ? `delete:note:own` : `delete:note:any`,\n\t)\n\n\tawait prisma.note.delete({ where: { id: note.id } })\n\n\treturn redirectWithToast(`/users/${note.owner.username}/notes`, {\n\t\ttype: 'success',\n\t\ttitle: 'Success',\n\t\tdescription: 'Your note has been deleted.',\n\t})\n}\n\nexport default function NoteRoute() {\n\tconst data = useLoaderData<typeof loader>()\n\tconst user = useOptionalUser()\n\tconst isOwner = user?.id === data.note.ownerId\n\tconst canDelete = userHasPermission(\n\t\tuser,\n\t\tisOwner ? `delete:note:own` : `delete:note:any`,\n\t)\n\tconst displayBar = canDelete || isOwner\n\n\treturn (\n\t\t<div className=\"absolute inset-0 flex flex-col px-10\">\n\t\t\t<h2 className=\"mb-2 pt-12 text-h2 lg:mb-6\">{data.note.title}</h2>\n\t\t\t<div className={`${displayBar ? 'pb-24' : 'pb-12'} overflow-y-auto`}>\n\t\t\t\t<ul className=\"flex flex-wrap gap-5 py-5\">\n\t\t\t\t\t{data.note.images.map(image => (\n\t\t\t\t\t\t<li key={image.id}>\n\t\t\t\t\t\t\t<a href={getNoteImgSrc(image.id)}>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc={getNoteImgSrc(image.id)}\n\t\t\t\t\t\t\t\t\talt={image.altText ?? ''}\n\t\t\t\t\t\t\t\t\tclassName=\"h-32 w-32 rounded-lg object-cover\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t\t<p className=\"whitespace-break-spaces text-sm md:text-lg\">\n\t\t\t\t\t{data.note.content}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t{displayBar ? (\n\t\t\t\t<div className={floatingToolbarClassName}>\n\t\t\t\t\t<span className=\"text-sm text-foreground/90 max-[524px]:hidden\">\n\t\t\t\t\t\t<Icon name=\"clock\" className=\"scale-125\">\n\t\t\t\t\t\t\t{data.timeAgo} ago\n\t\t\t\t\t\t</Icon>\n\t\t\t\t\t</span>\n\t\t\t\t\t<div className=\"grid flex-1 grid-cols-2 justify-end gap-2 min-[525px]:flex md:gap-4\">\n\t\t\t\t\t\t{canDelete ? <DeleteNote id={data.note.id} /> : null}\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tasChild\n\t\t\t\t\t\t\tclassName=\"min-[525px]:max-md:aspect-square min-[525px]:max-md:px-0\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Link to=\"edit\">\n\t\t\t\t\t\t\t\t<Icon name=\"pencil-1\" className=\"scale-125 max-md:scale-150\">\n\t\t\t\t\t\t\t\t\t<span className=\"max-md:hidden\">Edit</span>\n\t\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</div>\n\t)\n}\n\nexport function DeleteNote({ id }: { id: string }) {\n\tconst actionData = useActionData<typeof action>()\n\tconst isPending = useIsPending()\n\tconst [form] = useForm({\n\t\tid: 'delete-note',\n\t\tlastResult: actionData?.result,\n\t})\n\n\treturn (\n\t\t<Form method=\"POST\" {...getFormProps(form)}>\n\t\t\t<input type=\"hidden\" name=\"noteId\" value={id} />\n\t\t\t<StatusButton\n\t\t\t\ttype=\"submit\"\n\t\t\t\tname=\"intent\"\n\t\t\t\tvalue=\"delete-note\"\n\t\t\t\tvariant=\"destructive\"\n\t\t\t\tstatus={isPending ? 'pending' : form.status ?? 'idle'}\n\t\t\t\tdisabled={isPending}\n\t\t\t\tclassName=\"w-full max-md:aspect-square max-md:px-0\"\n\t\t\t>\n\t\t\t\t<Icon name=\"trash\" className=\"scale-125 max-md:scale-150\">\n\t\t\t\t\t<span className=\"max-md:hidden\">Delete</span>\n\t\t\t\t</Icon>\n\t\t\t</StatusButton>\n\t\t\t<ErrorList errors={form.errors} id={form.errorId} />\n\t\t</Form>\n\t)\n}\n\nexport const meta: MetaFunction<\n\ttypeof loader,\n\t{ 'routes/users+/$username_+/notes': typeof notesLoader }\n> = ({ data, params, matches }) => {\n\tconst notesMatch = matches.find(\n\t\tm => m.id === 'routes/users+/$username_+/notes',\n\t)\n\tconst displayName = notesMatch?.data?.owner.name ?? params.username\n\tconst noteTitle = data?.note.title ?? 'Note'\n\tconst noteContentsSummary =\n\t\tdata && data.note.content.length > 100\n\t\t\t? data?.note.content.slice(0, 97) + '...'\n\t\t\t: 'No content'\n\treturn [\n\t\t{ title: `${noteTitle} | ${displayName}'s Notes | Epic Notes` },\n\t\t{\n\t\t\tname: 'description',\n\t\t\tcontent: noteContentsSummary,\n\t\t},\n\t]\n}\n\nexport function ErrorBoundary() {\n\treturn (\n\t\t<GeneralErrorBoundary\n\t\t\tstatusHandlers={{\n\t\t\t\t403: () => <p>You are not allowed to do that</p>,\n\t\t\t\t404: ({ params }) => (\n\t\t\t\t\t<p>No note with the id \"{params.noteId}\" exists</p>\n\t\t\t\t),\n\t\t\t}}\n\t\t/>\n\t)\n}\n"],"names":["NoteRoute","data","useLoaderData","user","useOptionalUser","isOwner","canDelete","userHasPermission","displayBar","jsxs","jsx","image","getNoteImgSrc","floatingToolbarClassName","Icon","DeleteNote","Button","Link","id","actionData","useActionData","isPending","useIsPending","useForm","Form","getFormProps","form","StatusButton","ErrorList","meta","params","matches","notesMatch","m","displayName","_a","noteTitle","noteContentsSummary","ErrorBoundary","GeneralErrorBoundary"],"mappings":"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"}