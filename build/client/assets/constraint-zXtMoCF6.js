import{_ as v}from"./parse-k_gbqDJY.js";import{Z as q,a as w,b as V,c as D,d as E,e as S,f as U,g as $,h as T,i as m,j as A,k as I,l as N}from"./index-_I1O5d5t.js";var P=["required","minLength","maxLength","min","max","step","multiple","pattern"];function B(x){function i(e,r){var p,n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:"",f=n!==""?(p=r[n])!==null&&p!==void 0?p:r[n]={required:!0}:{};if(e instanceof q)for(var g in e.shape)i(e.shape[g],r,n?"".concat(n,".").concat(g):g);else if(e instanceof w)i(e.innerType(),r,n);else if(e instanceof V)i(e._def.out,r,n);else if(e instanceof D){var j={},L={};i(e._def.left,j,n),i(e._def.right,L,n),Object.assign(r,j,L)}else if(e instanceof E||e instanceof S)Object.assign(r,e.options.map(o=>{var l={};return i(o,l,n),l}).reduce((o,l)=>{var O=new Set([...Object.keys(o),...Object.keys(l)]),Z={};for(var s of O){var u=o[s],d=l[s];if(u&&d){var c={};Z[s]=c;for(var t of P)typeof u[t]<"u"&&typeof d[t]<"u"&&u[t]===d[t]&&(c[t]=u[t])}else Z[s]=v(v(v({},u),d),{},{required:!1})}return Z}));else{if(n==="")throw new Error("Unsupported schema");if(e instanceof U)f.multiple=!0,i(e.element,r,"".concat(n,"[]"));else if(e instanceof $)e.minLength!==null&&(f.minLength=e.minLength),e.maxLength!==null&&(f.maxLength=e.maxLength);else if(e instanceof T)f.required=!1,i(e.unwrap(),r,n);else if(e instanceof m)f.required=!1,i(e.removeDefault(),r,n);else if(e instanceof A)e.minValue!==null&&(f.min=e.minValue),e.maxValue!==null&&(f.max=e.maxValue);else if(e instanceof I)f.pattern=e.options.map(o=>o.replace(/[|\\{}()[\]^$+*?.]/g,"\\$&").replace(/-/g,"\\x2d")).join("|");else if(e instanceof N)for(var a=0;a<e.items.length;a++)i(e.items[a],r,"".concat(n,"[").concat(a,"]"))}}var b={};return i(x,b),b}export{B as g};
//# sourceMappingURL=constraint-zXtMoCF6.js.map
